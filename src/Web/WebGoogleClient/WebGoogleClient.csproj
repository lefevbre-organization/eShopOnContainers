<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <UserSecretsId>aspnetcorespa-c23d27a4-eb88-4b18-9b77-2a93f3b15119</UserSecretsId>
    <DockerComposeProjectPath>..\..\..\docker-compose.dcproj</DockerComposeProjectPath>
    <TypeScriptCompileOnSaveEnabled>false</TypeScriptCompileOnSaveEnabled>
    <IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
    <SpaRoot>Client\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <!--<GeneratedItemPatterns>wwwroot/dist/**</GeneratedItemPatterns>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(GeneratedItemPatterns)</DefaultItemExcludes>-->
    <TypeScriptToolsVersion>3.6</TypeScriptToolsVersion>
    <LangVersion>preview</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Client\build\**" />
    <Content Remove="$(SpaRoot)**" />
    <Compile Remove="node_modules\**\*;Client\**\*" />
    <Content Remove="Client\build\**" />
    <EmbeddedResource Remove="Client\build\**" />
    <None Remove="Client\build\**" />

    <Content Include="Setup\images.zip">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="appsettings.json;">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="package-lock.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="web.config;">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\**\*;">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.UI.Client" Version="2.2.4" />
    <PackageReference Include="AspNetCore.HealthChecks.Uris" Version="2.2.3" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.8.0-beta3" />
    <PackageReference Include="Microsoft.ApplicationInsights.DependencyCollector" Version="2.11.0-beta2" />
    <PackageReference Include="Microsoft.ApplicationInsights.Kubernetes" Version="1.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.DataProtection.Redis" Version="2.2.0-preview3-35458" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.HealthChecks" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.AzureAppServices" Version="3.0.0-rc1.19456.10" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3-beta1" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.0.1-dev-00099" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.2-dev-00824" />
  </ItemGroup>


  <!-- workaround for https://github.com/aspnet/websdk/issues/114 -->
  <!--
  <Target Name="AddGeneratedContentItems" BeforeTargets="AssignTargetPaths" DependsOnTargets="PrepareForPublish">
      <ItemGroup>
          <Content Include="wwwroot/**" CopyToPublishDirectory="PreserveNewest" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Content)" />
      </ItemGroup>
  </Target>
  -->

  <!--<ItemGroup>
    <Folder Include="wwwroot\assets\" />
  </ItemGroup>-->

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" Condition=" '$(BuildingDocker)' == '' ">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <!--<ItemGroup>
    <TypeScriptCompile Include="Client\environments\environment.prod.ts" />
    <TypeScriptCompile Include="Client\environments\environment.ts" />
    <TypeScriptCompile Include="Client\guid.ts" />
    <TypeScriptCompile Include="Client\main.ts" />
    <TypeScriptCompile Include="Client\modules\app.component.ts" />
    <TypeScriptCompile Include="Client\modules\app.module.ts" />
    <TypeScriptCompile Include="Client\modules\app.routes.ts" />
    <TypeScriptCompile Include="Client\modules\app.service.ts" />
    <TypeScriptCompile Include="Client\modules\basket\basket-status\basket-status.component.ts" />
    <TypeScriptCompile Include="Client\modules\basket\basket.component.ts" />
    <TypeScriptCompile Include="Client\modules\basket\basket.module.ts" />
    <TypeScriptCompile Include="Client\modules\basket\basket.service.ts" />
    <TypeScriptCompile Include="Client\modules\campaigns\campaigns-detail\campaigns-detail.component.ts" />
    <TypeScriptCompile Include="Client\modules\campaigns\campaigns.component.ts" />
    <TypeScriptCompile Include="Client\modules\campaigns\campaigns.module.ts" />
    <TypeScriptCompile Include="Client\modules\campaigns\campaigns.service.ts" />
    <TypeScriptCompile Include="Client\modules\catalog\catalog.component.ts" />
    <TypeScriptCompile Include="Client\modules\catalog\catalog.module.ts" />
    <TypeScriptCompile Include="Client\modules\catalog\catalog.service.ts" />
    <TypeScriptCompile Include="Client\modules\orders\orders-detail\orders-detail.component.ts" />
    <TypeScriptCompile Include="Client\modules\orders\orders-new\orders-new.component.ts" />
    <TypeScriptCompile Include="Client\modules\orders\orders.component.ts" />
    <TypeScriptCompile Include="Client\modules\orders\orders.module.ts" />
    <TypeScriptCompile Include="Client\modules\orders\orders.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\components\header\header.ts" />
    <TypeScriptCompile Include="Client\modules\shared\components\identity\identity.ts" />
    <TypeScriptCompile Include="Client\modules\shared\components\page-not-found\page-not-found.component.spec.ts" />
    <TypeScriptCompile Include="Client\modules\shared\components\page-not-found\page-not-found.component.ts" />
    <TypeScriptCompile Include="Client\modules\shared\components\pager\pager.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\basket.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\basketCheckout.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\basketItem.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\campaign.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\campaignItem.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\catalog.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\catalogBrand.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\catalogItem.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\catalogType.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\configuration.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\identity.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\order-detail.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\order.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\orderItem.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\models\pager.model.ts" />
    <TypeScriptCompile Include="Client\modules\shared\pipes\uppercase.pipe.spec.ts" />
    <TypeScriptCompile Include="Client\modules\shared\pipes\uppercase.pipe.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\basket.wrapper.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\configuration.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\data.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\notification.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\security.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\signalr.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\services\storage.service.ts" />
    <TypeScriptCompile Include="Client\modules\shared\shared.module.ts" />
    <TypeScriptCompile Include="Client\polyfills.ts" />
    <TypeScriptCompile Include="Client\test.ts" />
    <TypeScriptCompile Include="Client\typings.d.ts" />
  </ItemGroup>-->

  <ProjectExtensions>
    <VisualStudio><UserProperties package_1json__JSONSchema="http://json.schemastore.org/project-1.0.0-beta4" /></VisualStudio>
  </ProjectExtensions>

</Project>
