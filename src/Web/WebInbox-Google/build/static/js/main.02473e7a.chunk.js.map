{"version":3,"sources":["constants/index.jsx","actions/lexon.js","reducers/lexon.js","api/utils.jsx","api/index.jsx","components/sidebar/sidebar.actions.jsx","components/sidebar/sidebar.reducers.jsx","components/content/message-list/actions/message-list.actions.jsx","components/content/message-list/reducers/message-list.reducers.jsx","reducers/rootReducer.jsx","reducers/gapi.reducers.jsx","store.jsx","localstorage.jsx","services/i18n.js","components/menu-user/account-user/account-user.jsx","components/menu-user/menu-user.jsx","components/header/Header.jsx","components/sidebar/LabelItem.jsx","components/sidebar/Sidebar.jsx","components/not-found/NotFound.jsx","components/common/Checkbox.jsx","components/content/message-list/message-row/MessageCheckbox.jsx","components/content/message-list/message-row/NameSubjectFields.jsx","components/content/message-list/message-row/AttachmentDateFields.jsx","utils/index.jsx","components/content/message-list/message-row/MessageRow.jsx","components/content/message-list/pager-buttons/PagerButtons.jsx","components/content/message-list/list-toolbar/ListActionButtons.jsx","components/content/message-list/list-toolbar/ListToolbar.jsx","components/content/message-list/list-footer/ListFooter.jsx","components/content/message-list/MessageList.jsx","components/content/message-list/message-toolbar/MessageToolbar.jsx","components/content/message-list/message-content/MessageContent.jsx","components/compose-message/ComposeMessage-fixed.jsx","api/authentication.jsx","apps/material_title_panel.js","apps/utils.js","apps/lexonconn-app.js","apps/lexon_content.js","apps/calendar_content.js","components/main/Main.jsx","components/login/Login.jsx","components/authenticating/Authenticating.jsx","api/scripts.jsx","AppContainer.jsx","components/user-lexon/UserLexon.jsx","App.js","serviceWorker.js","index.js"],"names":["SIGNED_OUT","config","url","URL_UPDATE_DEFAULTACCOUNT","URL_RESET_DEFAULTACCOUNT","URL_DELETE_ACCOUNT","URL_SELECT_ACCOUNT","URL_GET_ACCOUNTS","URL_MF_GOOGLE","URL_MF_OUTLOOK","URL_MF_IMAP","URL_MF_LEXON","ActionTypes","actions_lexon","user","type","payload","defaultLexon","userId","provider","isNewAccount","getBody","message","mimeType","encodedBody","parts","body","data","getHTMLPart","replace","decodeURIComponent","escape","window","atob","arr","x","length","base64MimeType","encoded","result","mime","match","getLabelDetails","labelList","Promise","resolve","reject","labelPromises","labels","map","el","labelId","id","gapi","client","gmail","users","get","then","response","all","flattenMessagesWithLabel","messages","labelIds","label","messagesTotal","getMessageRawList","_ref2","maxResults","pageToken","_ref2$q","q","list","Object","objectSpread","catch","err","getMessageHeaders","messageResult","headerPromises","getMessageHeader","format","metadataHeaders","getMessage","messageId","attach","str","doc","DOMParser","parseFromString","Array","from","childNodes","some","node","nodeType","isHTML","headers","messageHeaders","undefined","error","getLabels","dispatch","selectLabel","defaultLabelState","ADD_MESSAGE","DELETE_MESSAGE","DELETE_LIST_MESSAGES","ADD_LIST_MESSAGES","getLabelMessages","_ref","getState","setMessageListLoadInProgress","searchQuery","labelMessagesDetails","getMessageList","setPageTokens","nextPageToken","setSearchQuery","tokens","emptyLabelMessages","toggleSelected","messageIds","selected","getEmailMessage","setMessageLoadInProgress","addInitialPageToken","token","clearPageTokens","modifyMessages","ids","_ref2$addLabelIds","addLabelIds","_ref2$removeLabelIds","removeLabelIds","_ref4","_ref4$addLabelIds","_ref4$removeLabelIds","batchModify","modifiedIds","addMessage","content","deleteMessage","deleteListMessages","listMessages","addListMessages","defaultMessagesState","loading","pageTokens","defaultEmailMessageResult","failed","defaultMessageList","selectedMessages","combineReducers","signedOutReducer","state","arguments","signInStatusResult","action","status","currentUser","lexon","slice","labelsResult","messagesResult","stateClone","toConsumableArray","indexOf","push","filter","emailMessageResult","prevPageToken","messageList","findIndex","concat","_loop","i","index","splice","_loop2","configureStore","createStore","rootReducer","applyMiddleware","thunk","subscribe","lexonState","JSON","stringify","localStorage","setItem","setStateStorage","i18n","use","XHR","init","lng","navigator","language","fallbackLng","ns","defaultNS","backend","loadPath","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","useSuspense","AccountUser","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleOnClick","bind","assertThisInitialized","open","_this2","account","react_default","a","createElement","href","className","onClick","src","getImage","alt","email","Component","connect","MenuUser","dropdownOpen","accounts","toggle","fetch","method","json","setState","console","log","despcription","urlRedirect","_this$state","_this$props","picUrl","fullName","onSignout","acronym","split","reduce","word","substring","reactstrap_es","navbar","nav","isOpen","right","header","tag","data-toggle","aria-haspopup","aria-expanded","t","lib_default","account_user_account_user","key","Header","_PureComponent","handleInputChange","handleSearchClick","performSearch","debounce","toggleMenu","dropdownMenuOpen","inherits","createClass","value","e","evt","searhQuery","target","searchParams","userInfo","googleUser","w3","U3","ig","Paa","Link","to","border","placeholder","onChange","index_es","icon","faSearch","menu_user_menu_user","PureComponent","LabelItem","name","messagesUnread","iconProps","messagesUnreadLocale","toLocaleString","title","assign","size","Sidebar","selectedLabel","pathname","leftSideBarOpen","navigateToList","composeClick","sidebarAction","history","find","onLabelClick","onSidebarCloseClick","acc","labelGroups","groupBy","visibleLabels","sortedLabels","labelListVisibility","sortBy","Fragment","renderFolders","system","renderLabels","folders","faInbox","faEnvelopeSquare","faTrashAlt","faExclamationTriangle","sidebar_LabelItem","_this3","faFolderOpen","color","collapsed","sideBarCollapsed","search","composeProps","subject","sideBarToggle","faChevronLeft","component","renderItems","withTranslation","NotFound","Checkbox","isChecked","checked","prevProps","MessageCheckbox","common_Checkbox","NameSubjectFields","fromName","AttachmentDateFields","hasAttachment","faPaperclip","formattedDate","getValidEmails","emailInput","trim","regex","emails","test","getNameEmail","m","exec","MessageItem","onSelectionChange","date","fallbackDateObj","messageDate","moment","isValid","parserFn","nowDate","Date","year","receivedHeader","toUpperCase","getFormattedDate","internalDate","parseInt","unread","subjectHeader","fromHeader","getFromName","withRouter","PagerButtons","useTranslation","navigateToPrevPage","disabled","prevToken","navigateToNextPage","nextToken","faChevronRight","ListActionButtons","getClickHandler","trashHandler","faTrash","MessageToolbar","selectedMessageIds","dispatchEvent","CustomEvent","detail","chkselected","actionParams","faBars","list_toolbar_ListActionButtons","bindActionCreators","Footer","apply","totalLabel","ViewMode","LIST","CONTENT","EDIT","MessageList","viewMode","contentMessageId","currentLabel","renderView","renderMessages","searchParam","location","parentLabel","prevState","msgId","faSpinner","spin","renderSpinner","MessageRow","renderEditView","currentToken","tokenIndex","_this$getPageTokens","getPageTokens","ListToolbar","list_footer_ListFooter","compose","replyTo","cc","nameEmail","parsedDate","replyHeader","faReply","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","getAttachments","messageID","callback","attachId","attachmentId","attachments","execute","attachment","filename","addAttachmentElement","blobUrl","aLink","document","linkText","createTextNode","appendChild","download","style","textDecoration","padding","margin","clear","addAttachmentContainer","aDiv","whiteSpace","backgroundColor","display","Img","imgPath","aImg","verticalAlign","addAttachmentImg","MessageContent","_Component","errorMessage","iframeRef","React","createRef","modifyMessage","params","modal","current","contentWindow","fontFamily","fontSize","innerHTML","iframe","getElementById","Divider","height","addDivDivider","contentDocument","urlBlob","Attachment","URL","createObjectURL","AttachmentDiv","Redirect","goBack","message_toolbar_MessageToolbar","renderErrorModal","ref","Uppy","require","Tus","GoogleDrive","DragDrop","ProgressBar","ComposeMessage","bcc","showInlineDashboard","uppyPreviews","handleChange","sendEmail","closeModal","setField","uppy","autoProceed","debug","endpoint","serverUrl","reader","FileReader","uploadFile","addFileToState","on","successful","file","onload","readerEvt","base64","readAsDataURL","close","validTo","To","join","Subject","validCc","Cc","validBcc","Bcc","Fileattached","_ref3","headersClone","mimetype","fileData","fileName","encodedEmail","unescape","encodeURIComponent","send","resource","raw","btoa","sendMessage","_","resetFields","field","trimValue","defineProperty","fieldValue","addonType","tabIndex","invalid","isInvalid","react_quill_lib_default","item","width","hideAfterFinish","min-height","note","locale","strings","dropHereOr","browse","checkSignInStatus","apiKey","process","clientId","discoveryDocs","scope","googleAuthInstance","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","Ab","signOut","styles","root","fontWeight","marginLeft","MaterialTitlePanel","rootStyle","sidebarDocked","children","runScript","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","script","onerror","firstScript","getElementsByTagName","parentNode","insertBefore","stop","_x","loadReactApp","activityFunction","startsWith","sidebar","sidebarLink","divider","overflowY","LexonComponent","singleSpa","apps_material_title_panel","calendarContent","Main","getLabelList","renderLabelRoutes","loadLabelMessages","isVisible","fluid","customAnimation","slow","sidebarOpen","leftSideBar","sidebarComponent","onSetSidebarDocked","onSetSidebarOpenCalendar","onSetSidebarOpenLexon","onSetSidebarOpenQMemento","onSetSidebarOpenCompliance","onSetSidebarOpenDatabase","handleGetUserFromLexonConnector","toggleSideBar","toggleCollapsed","selectedMessage","selectedMessageId","sendMessagePutUser","calendar_content","lexon_content","addEventListener","event","alert","removeEventListener","signedInUser","labelPathMatch","toLowerCase","currentSearchQuery","newPathToPush","Route","exact","path","render","that","message_list_MessageList","_this4","react_sidebar_esm","pullRight","docked","background","zIndex","WebkitTransition","willChange","position","top","left","bottom","overflowX","WebkitOverflowScrolling","transition","overlay","opacity","visibility","dragHandle","header_Header","sidebar_Sidebar","handleShowLeftSidebarClick","Switch","ComposeMessage_fixed","message_content_MessageContent","renderInboxViewport","Login","react_google_button_es","onSignIn","Authenticating","mountScripts","async","defer","onreadystatechange","readyState","AppContainer","signInStatus","initClient","onSignInSuccess","stateStorageLexon","getItem","parse","getStateStorage","userLexon","setUser","load","signIn","main_Main","authenticating_Authenticating","login_Login","ACTIONS","UserLexon","readyToRedirect","App","BrowserRouter","Boolean","hostname","ReactDOM","es","store","dist_es","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02473e7a.chunk.js","sourcesContent":["export const SIGNED_OUT = \"SIGNED_OUT\";\r\nexport const SIGNED_IN = \"SIGNED_IN\";\r\nexport const AUTH_IN_PROGRESS = \"AUTH_IN_PROGRESS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_SIGNED_OUT = \"AUTH_SIGNED_OUT\";\r\nexport const PROVIDER = \"GOOGLE\";\r\n\r\n// const dev = {\r\n//   url: {\r\n//     URL_UPDATE_DEFAULTACCOUNT:\r\n//       \"http://localhost:60980/api/v1/accounts/emailuseraccount/updatedefaultaccount\",\r\n//     URL_RESET_DEFAULTACCOUNT:\r\n//       \"http://localhost:60980/api/v1/accounts/emailuseraccount/resetdefaultaccountbyuser\",\r\n//     URL_DELETE_ACCOUNT:\r\n//       \"http://localhost:60980/api/v1/accounts/emailuseraccount/deleteaccountbyuserandprovider\",\r\n//     URL_SELECT_ACCOUNT: \"http://localhost:3010\",\r\n//     URL_GET_ACCOUNTS:\r\n//       \"http://localhost:60980/api/v1/accounts/emailuseraccount/getbyuser\",\r\n//     URL_MF_GOOGLE: \"http://localhost:3001/user\",\r\n//     URL_MF_OUTLOOK: \"http://localhost:3002/user\",\r\n//     URL_MF_IMAP: \"http://localhost:9000/user\",\r\n//     URL_MF_LEXON: \"http://localhost:3004/static/js/main.js\"\r\n//   }\r\n// };\r\n\r\nconst dev = {\r\n  url: {\r\n    URL_UPDATE_DEFAULTACCOUNT:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/updatedefaultaccount\",\r\n    URL_RESET_DEFAULTACCOUNT:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/resetdefaultaccountbyuser\",\r\n    URL_DELETE_ACCOUNT:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/deleteaccountbyuserandprovider\",\r\n    URL_SELECT_ACCOUNT: \"http://localhost:3010\",\r\n    URL_GET_ACCOUNTS:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/getbyuser\",\r\n    URL_MF_GOOGLE: \"http://localhost:3001/user\",\r\n    URL_MF_OUTLOOK: \"http://localhost:3002/user\",\r\n    URL_MF_IMAP: \"http://localhost:9000/user\",\r\n    URL_MF_LEXON: \"http://localhost:3004/static/js/main.js\"\r\n  }\r\n};\r\n\r\nconst prod = {\r\n  url: {\r\n    URL_UPDATE_DEFAULTACCOUNT:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/updatedefaultaccount\",\r\n    URL_RESET_DEFAULTACCOUNT:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/resetdefaultaccountbyuser\",\r\n    URL_DELETE_ACCOUNT:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/deleteaccountbyuserandprovider\",\r\n    URL_SELECT_ACCOUNT: \"https://lefebvre.westeurope.cloudapp.azure.com:8087\",\r\n    URL_GET_ACCOUNTS:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8083/api/v1/accounts/emailuseraccount/getbyuser\",\r\n    URL_MF_GOOGLE: \"https://lefebvre.westeurope.cloudapp.azure.com:8088/user\",\r\n    URL_MF_OUTLOOK: \"https://lefebvre.westeurope.cloudapp.azure.com:8089/user\",\r\n    URL_MF_IMAP: \"http://lefebvre.westeurope.cloudapp.azure.com/user\",\r\n    URL_MF_LEXON:\r\n      \"https://lefebvre.westeurope.cloudapp.azure.com:8090/static/js/main.js\"\r\n  }\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\r\n\r\nexport const MAX_RESULTS = 20;\r\nexport const RESULT_OK = 1;\r\n","export const ActionTypes = {\r\n  LEXON_USER: \"LEXON_USER\"\r\n};\r\n\r\nexport const setUser = user => ({\r\n  type: ActionTypes.LEXON_USER, \r\n  payload: user\r\n});\r\n\r\nexport default {\r\n  setUser\r\n};","import { ActionTypes } from \"../actions/lexon\";\r\n\r\nconst defaultLexon = {\r\n  user: null,\r\n  userId: null,\r\n  provider: null,\r\n  isNewAccount: false  \r\n};\r\n\r\nexport const lexon = (state = defaultLexon, action = {}) => {\r\n  switch (action.type) {    \r\n    case ActionTypes.LEXON_USER:\r\n      const user = action.payload;\r\n      const provider = user.slice(0, 2);\r\n      const isNewAccount = user.slice(2, 3) === '1' ? true : false;\r\n      const userId = user.slice(3);\r\n      return {\r\n        ...state,\r\n        user: user,\r\n        provider: provider,\r\n        isNewAccount: isNewAccount,\r\n        userId: userId\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","\r\n\r\nexport const getBody = (message, mimeType) => {\r\n  let encodedBody = \"\";\r\n  if (typeof message.parts === \"undefined\") {\r\n    encodedBody = message.body.data;\r\n  } else {\r\n    encodedBody = getHTMLPart(message.parts, mimeType);\r\n  }\r\n  encodedBody = encodedBody\r\n    .replace(/-/g, \"+\")\r\n    .replace(/_/g, \"/\")\r\n    .replace(/\\s/g, \"\");\r\n  return decodeURIComponent(escape(window.atob(encodedBody)));\r\n};\r\n\r\nconst getHTMLPart = (arr, mimeType) => {\r\n  for (let x = 0; x < arr.length; x++) {\r\n    if (typeof arr[x].parts === \"undefined\") {\r\n      if (arr[x].mimeType === mimeType) {\r\n        return arr[x].body.data;\r\n      }\r\n    } else {\r\n      return getHTMLPart(arr[x].parts, mimeType);\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const isHTML = str => {\r\n  const doc = new DOMParser().parseFromString(str, \"text/html\");\r\n  return Array.from(doc.body.childNodes).some(node => node.nodeType === 1);\r\n}\r\n\r\nexport const base64MimeType = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n\r\n    if (mime && mime.length) {\r\n        result = mime[1];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const base64Data = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var data = encoded.split(\"base64,\")[1];\r\n\r\n    return data;\r\n}","import { MAX_RESULTS } from \"../constants\";\r\nimport { getBody, isHTML, base64MimeType, base64Data } from \"./utils\";\r\n\r\nconst getLabelDetailPromise = labelId => {\r\n  return new Promise((resolve, reject) => {\r\n    window.gapi.client.gmail.users.labels\r\n      .get({\r\n        userId: \"me\",\r\n        id: labelId\r\n      })\r\n      .then(response => resolve(response));\r\n  });\r\n};\r\n\r\nconst getLabelDetails = labelList => {\r\n  return new Promise((resolve, reject) => {\r\n    const labelPromises = labelList.result.labels.map(el => {\r\n      return getLabelDetailPromise(el.id);\r\n    });\r\n\r\n    Promise.all(labelPromises).then(response => resolve(response));\r\n  });\r\n};\r\n\r\nexport const getLabelList = () =>\r\n  new Promise((resolve, reject) => {\r\n    window.gapi.client.gmail.users.labels\r\n      .list({\r\n        userId: \"me\"\r\n      })\r\n      .then(getLabelDetails)\r\n      .then(response => {\r\n        resolve(response.map(el => el.result));\r\n      });\r\n  });\r\n\r\nexport const getMessageList = ({ labelIds, maxResults, q, pageToken }) =>\r\n  new Promise((resolve, reject) => {\r\n    getMessageRawList({ labelIds, maxResults, pageToken, q })\r\n      .then(getMessageHeaders)\r\n      .then(messageResult =>\r\n        flattenMessagesWithLabel(messageResult.messages, labelIds).then(\r\n          labelMessagesDetails =>\r\n            resolve({\r\n              ...messageResult,\r\n              messages: labelMessagesDetails.messages,\r\n              label: labelMessagesDetails.label\r\n            })\r\n        )\r\n      )\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n\r\nexport const flattenMessagesWithLabel = (messages, labelIds) =>\r\n  new Promise((resolve, reject) => {\r\n    if (!labelIds) {\r\n      resolve({\r\n        messages,\r\n        label: {\r\n          result: {\r\n            messagesTotal: 0\r\n          }\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    window.gapi.client.gmail.users.labels\r\n      .get({\r\n        userId: \"me\",\r\n        id: labelIds[0]\r\n      })\r\n      .then(response =>\r\n        resolve({\r\n          messages,\r\n          label: response\r\n        })\r\n      );\r\n  });\r\n\r\nconst getMessageRawList = ({ labelIds, maxResults, pageToken, q = \"\" }) =>\r\n  new Promise((resolve, reject) => {\r\n    window.gapi.client.gmail.users.messages\r\n      .list({\r\n        userId: \"me\",\r\n        q,\r\n        maxResults: maxResults || MAX_RESULTS,\r\n        ...(labelIds && { labelIds }),\r\n        ...(pageToken && { pageToken })\r\n      })\r\n      .then(response => resolve(response))\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n\r\nconst getMessageHeaders = response => {\r\n  const messageResult = response.result;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const headerPromises = (messageResult.messages || []).map(el => {\r\n      return getMessageHeader(el.id);\r\n    });\r\n\r\n    Promise.all(headerPromises).then(messages =>\r\n      resolve({\r\n        ...messageResult,\r\n        messages\r\n      })\r\n    );\r\n  });\r\n};\r\n\r\nconst getMessageHeader = id => {\r\n  return new Promise((resolve, reject) => {\r\n    window.gapi.client.gmail.users.messages\r\n      .get({\r\n        userId: \"me\",\r\n        id: id,\r\n        format: \"metadata\",\r\n        metadataHeaders: [\r\n          \"Delivered-To\",\r\n          \"X-Received\",\r\n          \"To\",\r\n          \"Message-ID\",\r\n          \"Date\",\r\n          \"Content-Type\",\r\n          \"MIME-Version\",\r\n          \"Reply-To\",\r\n          \"From\",\r\n          \"Subject\",\r\n          \"Return-Path\"\r\n          // See https://www.iana.org/assignments/message-headers/message-headers.xhtml\r\n          // for more headers\r\n        ]\r\n      })\r\n      .then(response => resolve(response.result));\r\n  });\r\n};\r\n\r\nexport const getMessage = messageId => {\r\n  return new Promise((resolve, reject) => {\r\n    window.gapi.client.gmail.users.messages\r\n      .get({\r\n        userId: \"me\",\r\n        id: messageId,\r\n        format: \"full\"\r\n      })\r\n      .then(response => {\r\n        const { result } = response;\r\n\r\n        let body = getBody(result.payload, \"text/html\");\r\n        let attach = result.payload.parts;\r\n\r\n        if (body === \"\") {\r\n          body = getBody(result.payload, \"text/plain\");\r\n          body = body\r\n            .replace(/(\\r\\n)+/g, '<br data-break=\"rn-1\">')\r\n            .replace(/[\\n\\r]+/g, '<br data-break=\"nr\">');\r\n        }\r\n\r\n        if (body !== \"\" && !isHTML(body)) {\r\n          body = body\r\n            .replace(\r\n              /(\\r\\n)+/g,\r\n              '<div data-break=\"rn-1\" style=\"margin-bottom:10px\"></div>'\r\n            )\r\n            .replace(/[\\n\\r]+/g, '<br data-break=\"nr\">');\r\n        }\r\n\r\n        resolve({\r\n          body,\r\n          attach,\r\n          headers: response.headers,\r\n          result: {\r\n            ...result,\r\n            messageHeaders: response.result.payload.headers,\r\n            payload: undefined\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n// Insert file attachments from Google Drive\r\n// function getAttachments_(ids) {\r\n//     var att = [];\r\n//     for (var i in ids) {\r\n//         var file = ids;\r\n//         att.push({\r\n//             mimeType: file.type(),\r\n//             fileName: file.name(),\r\n//             //bytes: Utilities.base64Encode(file.getBlob().getBytes())\r\n//         });\r\n//     }\r\n//     return att;\r\n// }\r\n\r\nexport const sendMessage = ({ headers, body, attachments }) => {\r\n  let email = \"\";\r\n\r\n  const headersClone = { ...headers };\r\n  headersClone[\"MIME-Version\"] = \"1.0\";\r\n  headersClone[\"Content-Type\"] = \"multipart/mixed; boundary=alternative\";\r\n\r\n  for (let header in headersClone) {\r\n    email += `${header}: ${headersClone[header]}\\r\\n`;\r\n  }\r\n\r\n  email += `\\r\\n`;\r\n  email += `--alternative\\r\\n`;\r\n  email += `Content-Type: multipart/alternative; boundary = \"attached\"\\r\\n`;\r\n  email += `\\r\\n`;\r\n\r\n  email += `--attached\\r\\n`;\r\n  email += `Content-Type: text/plain; charset = \"iso-8859-1\"\\r\\n`;\r\n  email += `Content-Transfer-Encoding: quoted-printable\\r\\n`;\r\n\r\n  //text plain\r\n  email += `\\r\\n`;\r\n  email += `${body}\\r\\n`;\r\n  email += `\\r\\n`;\r\n\r\n  email += `--attached\\r\\n`;\r\n  email += `Content-Type: text/html; charset = \"iso-8859-1\"\\r\\n`;\r\n  email += `Content-Transfer-Encoding: quoted-printable\\r\\n`;\r\n\r\n  //HTML\r\n  email += `\\r\\n`;\r\n  email += `\\r\\n<html><head></head><body>${body}</body></html>\\r\\n`;\r\n  email += `\\r\\n`;\r\n\r\n  email += `--attached--\\r\\n`;\r\n\r\n  for (var i = 0; i < headersClone.attachments.length; i++) {\r\n    var mimetype = base64MimeType(headersClone.attachments[i].base64);\r\n    var fileData = base64Data(headersClone.attachments[i].base64);\r\n    var fileName = headersClone.attachments[i].file.name;\r\n\r\n    console.log(mimetype); // \"image/png\"\r\n    console.log(fileData); // \"ZXN0byBlcyB1bmEgcHJ1ZWJhIGJhc2ljYQ==\"\r\n\r\n    email += `--alternative\\r\\n`;\r\n\r\n    email += `Content-Type: ${mimetype}\\r\\n`;\r\n\r\n    email += `Content-Transfer-Encoding: base64\\r\\n`;\r\n\r\n    email += `Content-Disposition: attachment; filename = \"${fileName}\"\\r\\n`;\r\n\r\n    email += `${fileData}\\r\\n`;\r\n  }\r\n\r\n  email += `--alternative--\\r\\n`;\r\n\r\n  const encodedEmail = unescape(encodeURIComponent(email));\r\n\r\n  return window.gapi.client.gmail.users.messages.send({\r\n    userId: \"me\",\r\n    resource: {\r\n      raw: window\r\n        .btoa(encodedEmail)\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\")\r\n    }\r\n  });\r\n};\r\n\r\n//export const base64MimeType = ( encoded ) => {\r\n//    var result = null;\r\n\r\n//    if (typeof encoded !== 'string') {\r\n//        return result;\r\n//    }\r\n\r\n//    var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n\r\n//    if (mime && mime.length) {\r\n//        result = mime[1];\r\n//    }\r\n\r\n//    return result;\r\n//}\r\n\r\n//export const base64Data = ( encoded ) => {\r\n//    var result = null;\r\n\r\n//    if (typeof encoded !== 'string') {\r\n//        return result;\r\n//    }\r\n\r\n//    var data = encoded.split(\"base64,\")[1];\r\n\r\n//    return data;\r\n//}\r\n\r\n//export const base64Data = ({ encoded }) => {\r\n//    return encoded.split(\"base64,\")[1];\r\n//}\r\n\r\n//function base64Data(encoded) {\r\n//    return encoded.split(\"base64,\")[1];\r\n//}\r\n\r\nexport const batchModify = ({ ids, addLabelIds = [], removeLabelIds = [] }) =>\r\n  new Promise((resolve, reject) => {\r\n    window.gapi.client.gmail.users.messages\r\n      .batchModify({\r\n        userId: \"me\",\r\n        ids,\r\n        addLabelIds,\r\n        removeLabelIds\r\n      })\r\n      .then(response => {\r\n        resolve(ids);\r\n      });\r\n  });\r\n","import { getLabelList } from \"../../api\";\r\n//import { setSearchQuery } from \"../content/message-list/actions/message-list.actions\";\r\n\r\nexport const GET_LABELS = \"GET_LABELS\";\r\nexport const SELECT_LABEL = \"SELECT_LABEL\";\r\n\r\nexport const getLabels = () => dispatch => {\r\n  getLabelList().then(labelList => {\r\n    dispatch({\r\n      type: GET_LABELS,\r\n      payload: labelList\r\n    });\r\n  });\r\n};\r\n\r\nexport const selectLabel = labelId => dispatch => {\r\n  //dispatch(setSearchQuery(\"\"));\r\n  dispatch({\r\n    type: SELECT_LABEL,\r\n    payload: labelId\r\n  });\r\n};\r\n","import { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\r\n\r\nconst defaultLabelState = {\r\n  labels: []\r\n};\r\n\r\nexport const labelsResult = (state = defaultLabelState, action) => {\r\n  switch (action.type) {\r\n    case GET_LABELS:\r\n      return {\r\n        ...state,\r\n        labels: action.payload\r\n      };\r\n    case SELECT_LABEL:\r\n      return {\r\n        ...state,\r\n        labels: state.labels.map(el => {\r\n          if (el.id === action.payload) {\r\n            return {\r\n              ...el,\r\n              selected: true\r\n            };\r\n          }\r\n          return {\r\n            ...el,\r\n            selected: false\r\n          };\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { getMessageList } from \"../../../../api\";\r\nimport { getMessage } from \"../../../../api\";\r\nimport { batchModify } from \"../../../../api\";\r\nimport { selectLabel } from \"../../../sidebar/sidebar.actions\";\r\n\r\nexport const GET_MESSAGES = \"GET_MESSAGES\";\r\nexport const GET_MESSAGES_LOAD_IN_PROGRESS = \"GET_MESSAGES_LOAD_IN_PROGRESS\";\r\nexport const GET_MESSAGES_FAILED = 'GET_MESSAGES_FAILED';\r\nexport const TOGGLE_SELECTED = \"TOGGLE_SELECTED\";\r\nexport const MESSAGE_LOAD_IN_PROGRESS = \"MESSAGE_LOAD_IN_PROGRESS\";\r\nexport const MESSAGE_LOAD_SUCCESS = \"MESSAGE_LOAD_SUCCESS\";\r\nexport const MESSAGE_LOAD_FAIL = \"MESSAGE_LOAD_FAIL\";\r\nexport const EMPTY_MESSAGES = \"EMPTY_MESSAGES\";\r\nexport const SET_PAGE_TOKENS = \"SET_PAGE_TOKENS\";\r\nexport const ADD_INITIAL_PAGE_TOKEN = \"ADD_INITIAL_PAGE_TOKEN\";\r\nexport const CLEAR_PAGE_TOKENS = \"CLEAR_PAGE_TOKENS\";\r\nexport const MODIFY_MESSAGES_SUCCESS = \"MODIFY_MESSAGES_SUCCESS\";\r\nexport const MODIFY_MESSAGES_FAILED = \"MODIFY_MESSAGES_FAILED\";\r\nexport const SET_SEARCH_QUERY = \"SET_SEARCH_QUERY\";\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\r\nexport const DELETE_LIST_MESSAGES = \"DELETE_LIST_MESSAGES\";\r\nexport const ADD_LIST_MESSAGES = \"ADD_LIST_MESSAGES\";\r\n\r\nexport const getLabelMessages = ({\r\n  labelIds,\r\n  q = \"\",\r\n  pageToken\r\n}) => (dispatch, getState) => {\r\n  dispatch(setMessageListLoadInProgress());\r\n\r\n  const state = getState();\r\n  const {searchQuery} = state;\r\n\r\n  if (searchQuery !== \"\") {\r\n    dispatch(selectLabel(\"-1\"));\r\n  }\r\n\r\n  getMessageList({ labelIds, maxResults: 20, q: searchQuery, pageToken }).then(response => {\r\n    dispatch({\r\n      type: GET_MESSAGES,\r\n      payload: response\r\n    });\r\n\r\n    dispatch(setPageTokens({\r\n      nextPageToken: response.nextPageToken || \"\"\r\n    }));\r\n    \r\n  }).catch(err => {\r\n    dispatch({\r\n      type: GET_MESSAGES_FAILED,\r\n      payload: err\r\n    })\r\n  });\r\n};\r\n\r\nexport const setSearchQuery = q => ({\r\n  type: SET_SEARCH_QUERY,\r\n  payload: q\r\n})\r\n\r\nexport const setPageTokens = tokens => ({\r\n  type: SET_PAGE_TOKENS,\r\n  payload: tokens\r\n});\r\n\r\nexport const emptyLabelMessages = () => ({\r\n  type: EMPTY_MESSAGES\r\n});\r\n\r\nexport const toggleSelected = (messageIds, selected) => ({\r\n  type: TOGGLE_SELECTED,\r\n  payload: {\r\n    messageIds,\r\n    selected\r\n  }\r\n});\r\n\r\nexport const getEmailMessage = messageId => dispatch => {\r\n  dispatch(setMessageLoadInProgress());\r\n  getMessage(messageId)\r\n    .then(response => {\r\n      dispatch({\r\n        type: MESSAGE_LOAD_SUCCESS,\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: MESSAGE_LOAD_FAIL,\r\n        payload: error\r\n      });\r\n    });\r\n};\r\n\r\nconst setMessageLoadInProgress = () => ({\r\n  type: MESSAGE_LOAD_IN_PROGRESS\r\n});\r\n\r\nconst setMessageListLoadInProgress = () => ({\r\n  type: GET_MESSAGES_LOAD_IN_PROGRESS\r\n});\r\n\r\nexport const addInitialPageToken = token => ({\r\n  type: ADD_INITIAL_PAGE_TOKEN,\r\n  payload: token\r\n})\r\n\r\nexport const clearPageTokens = () => ({\r\n  type: CLEAR_PAGE_TOKENS\r\n})\r\n\r\nexport const modifyMessages = ({ids, addLabelIds = [], removeLabelIds = []}) => dispatch => {\r\n  batchModify({ids, addLabelIds, removeLabelIds})\r\n    .then(modifiedIds => {\r\n      dispatch({\r\n       type: MODIFY_MESSAGES_SUCCESS,\r\n       payload: {modifiedIds, addLabelIds, removeLabelIds}\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n       type: MODIFY_MESSAGES_FAILED\r\n      })\r\n    })\r\n}\r\n\r\nexport const addMessage = (messageId) => dispatch => {\r\n  const data = {\r\n      id: messageId,\r\n      content: messageId\r\n  };\r\n\r\n  dispatch({\r\n      type: ADD_MESSAGE,\r\n      data\r\n  });\r\n};\r\n\r\nexport const deleteMessage = (messageId) => dispatch => {\r\n  const data = {\r\n      id: messageId,\r\n      content: messageId\r\n  };\r\n\r\n  dispatch({\r\n      type: DELETE_MESSAGE,\r\n      data     \r\n  });\r\n};\r\n\r\nexport const deleteListMessages = (listMessages) => dispatch => {\r\n  dispatch({\r\n      type: DELETE_LIST_MESSAGES,\r\n      listMessages\r\n  });    \r\n};\r\n\r\nexport const addListMessages = (listMessages) => dispatch => {\r\n  dispatch({\r\n      type: ADD_LIST_MESSAGES,\r\n      listMessages\r\n  });    \r\n};\r\n\r\n","import {\r\n  GET_MESSAGES,\r\n  GET_MESSAGES_FAILED,\r\n  TOGGLE_SELECTED,\r\n  MESSAGE_LOAD_IN_PROGRESS,\r\n  MESSAGE_LOAD_SUCCESS,\r\n  MESSAGE_LOAD_FAIL,\r\n  GET_MESSAGES_LOAD_IN_PROGRESS,\r\n  EMPTY_MESSAGES,\r\n  SET_PAGE_TOKENS,\r\n  ADD_INITIAL_PAGE_TOKEN,\r\n  CLEAR_PAGE_TOKENS,\r\n  MODIFY_MESSAGES_SUCCESS,\r\n  SET_SEARCH_QUERY,\r\n  ADD_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  DELETE_LIST_MESSAGES,\r\n  ADD_LIST_MESSAGES\r\n} from \"../actions/message-list.actions\";\r\n\r\nconst defaultMessagesState = {\r\n  messages: [],\r\n  loading: true,\r\n  pageTokens: []\r\n};\r\n\r\nexport const messagesResult = (state = defaultMessagesState, action) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES:\r\n      const stateClone = {...state};\r\n      stateClone.nextPageToken = null;\r\n      const pageTokens = [...stateClone.pageTokens];\r\n      const nextPageToken = action.payload.nextPageToken;\r\n      if (nextPageToken && pageTokens.indexOf(nextPageToken) === -1) {\r\n        pageTokens.push(nextPageToken);\r\n      }\r\n      return {\r\n        ...stateClone,\r\n        ...action.payload,\r\n        loading: false,\r\n        pageTokens: pageTokens\r\n      };\r\n    case GET_MESSAGES_FAILED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        failed: true,\r\n        error: action.payload\r\n      }\r\n    }\r\n    case EMPTY_MESSAGES:\r\n      return {...state, messages: []};\r\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        label: null,\r\n        nextPageToken: null,\r\n        loading: true\r\n      }\r\n    case TOGGLE_SELECTED:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.map(el => {\r\n          if (action.payload.messageIds.indexOf(el.id) > -1) {\r\n            return { ...el, selected: action.payload.selected };\r\n          }\r\n          return el;\r\n        })\r\n      };\r\n    case ADD_INITIAL_PAGE_TOKEN:\r\n      return {\r\n        ...state,\r\n        pageTokens: [action.payload]\r\n      }\r\n    case CLEAR_PAGE_TOKENS:\r\n      return {\r\n        ...state,\r\n        pageTokens: []\r\n      }\r\n    case MODIFY_MESSAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(el => action.payload.modifiedIds.indexOf(el.id) === -1)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const pageTokens = (\r\n  state = { prevPageToken: \"\", nextPageToken: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_PAGE_TOKENS:\r\n      return {...state, ...action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst defaultEmailMessageResult = {\r\n  body: \"\",\r\n  loading: false,\r\n  failed: false\r\n};\r\n\r\nexport const emailMessageResult = (\r\n  state = defaultEmailMessageResult,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\r\n    case MESSAGE_LOAD_IN_PROGRESS:\r\n      return { ...state, body: \"\", loading: true, failed: false };\r\n    case MESSAGE_LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        loading: false,\r\n        failed: false\r\n      };\r\n    case MESSAGE_LOAD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        failed: true,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const searchQuery = (state = \"\", action) => {\r\n  switch(action.type) {\r\n    case SET_SEARCH_QUERY:\r\n      return action.payload\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst defaultMessageList = {\r\n  selectedMessages: []\r\n};\r\n\r\nexport function messageList(state = defaultMessageList, action) {\r\n  switch(action.type) {\r\n      case ADD_MESSAGE: {\r\n          const index = state.selectedMessages.findIndex(message => message.id === action.data.id)\r\n          if (index === -1) {\r\n              return {\r\n                  ...state,\r\n                  selectedMessages: [...state.selectedMessages, action.data]                    \r\n              }\r\n          }\r\n          return state;     \r\n      }\r\n\r\n      case DELETE_MESSAGE: {\r\n          return {\r\n              ...state,\r\n              selectedMessages: state.selectedMessages.filter(message => message.id !== action.data.id)\r\n          }         \r\n      }\r\n\r\n      case DELETE_LIST_MESSAGES: {\r\n          for (let i=0; i < action.listMessages.length; i++) {\r\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\r\n              if (index > -1) {\r\n                  state.selectedMessages.splice(index, 1);\r\n              }    \r\n          }\r\n          return {\r\n              ...state,\r\n              selectedMessages: state.selectedMessages            }     \r\n      }\r\n\r\n      case ADD_LIST_MESSAGES: {\r\n          for (let i=0; i < action.listMessages.length; i++) {\r\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\r\n              if (index === -1) {\r\n                  const data = {id: action.listMessages[i], content: action.listMessages[i]}\r\n                  state.selectedMessages.push(data);\r\n              }    \r\n          }\r\n          return {\r\n              ...state,\r\n              selectedMessages: state.selectedMessages\r\n          }     \r\n      }\r\n\r\n      default: return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { signedOutReducer } from \"./gapi.reducers\";\r\nimport { signInStatusResult } from \"./gapi.reducers\";\r\nimport { lexon } from \"./lexon\";\r\n\r\nimport { labelsResult } from \"../components/sidebar/sidebar.reducers\";\r\nimport { messagesResult, emailMessageResult, pageTokens, searchQuery, messageList } from \"../components/content/message-list/reducers/message-list.reducers\";\r\n\r\nexport default combineReducers({\r\n  signedOutReducer,\r\n  signInStatusResult,\r\n  lexon,\r\n  labelsResult,\r\n  messagesResult,\r\n  emailMessageResult,\r\n  pageTokens,\r\n  searchQuery,  \r\n  messageList\r\n});\r\n","import {\r\n  SIGNED_OUT,\r\n  SIGNED_IN,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_IN_PROGRESS,\r\n  AUTH_SIGNED_OUT\r\n} from \"../constants\";\r\n\r\nexport const signedOutReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SIGNED_OUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const signInStatusResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case AUTH_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        status: AUTH_IN_PROGRESS\r\n      };\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: AUTH_SUCCESS,\r\n        currentUser: action.payload.currentUser\r\n      };\r\n    case AUTH_FAIL:\r\n      return {\r\n        ...state,\r\n        status: AUTH_FAIL\r\n      };\r\n    case SIGNED_IN:\r\n      return { ...action.payload };\r\n    case SIGNED_OUT:\r\n    return {\r\n        ...state,\r\n        status: AUTH_SIGNED_OUT,\r\n        currentUser: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport { setStateStorage } from \"./localstorage\";\r\n\r\nconst configureStore = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nconfigureStore.subscribe(() => {\r\n  setStateStorage({\r\n    lexon: configureStore.getState().lexon\r\n  });\r\n});\r\n\r\nexport default configureStore;\r\n","export const getStateStorage = () => {\r\n  const lexon = localStorage.getItem(\"lexon\");\r\n  if (lexon === null) {\r\n    return undefined;\r\n  }\r\n  return JSON.parse(lexon);\r\n};\r\n\r\nexport const setStateStorage = state => {\r\n  const lexonState = JSON.stringify(state);\r\n  localStorage.setItem(\"lexon\", lexonState);\r\n};\r\n","import i18n from 'i18next';\r\nimport XHR from 'i18next-xhr-backend';\r\n\r\nconst userLanguage = () => navigator.language;\r\n\r\ni18n\r\n  .use(XHR)\r\n  .init({\r\n    lng: userLanguage(),\r\n    fallbackLng: 'en',\r\n    ns: ['isotope'],\r\n    defaultNS: 'isotope',\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/{{ns}}.json'\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: 'languageChanged loaded',\r\n      bindStore: 'added removed',\r\n      nsMode: 'default',\r\n      useSuspense: false,\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Component } from \"react\";\r\nimport \"./account-user.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { config } from \"../../../constants\";\r\n\r\nclass AccountUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this._handleOnClick = this._handleOnClick.bind(this);\r\n  }\r\n\r\n  _handleOnClick(provider) {\r\n    const { userId } = this.props.lexon;\r\n\r\n    switch (provider) {\r\n      case \"GOOGLE\":\r\n        window.open(`${config.url.URL_MF_GOOGLE}/GO0${userId}`, \"_self\");\r\n\r\n        break;\r\n      case \"OUTLOOK\":\r\n        window.open(`${config.url.URL_MF_OUTLOOK}/OU0${userId}`, \"_self\");\r\n\r\n        break;\r\n\r\n      default:\r\n        window.open(`${config.url.URL_MF_IMAP}/IM0${userId}`, \"_self\");\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  getImage(provider) {\r\n    switch (provider) {\r\n      case \"GOOGLE\":\r\n        return \"/assets/img/logoGoogle.png\";\r\n      case \"OUTLOOK\":\r\n        return \"/assets/img/logoMicrosoft.png\";\r\n\r\n      default:\r\n        return \"/assets/img/logoImap.png\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { account } = this.props;\r\n\r\n    return (\r\n      <li>\r\n        <a\r\n          href=\"#/\"\r\n          className=\"d-flex align-items-center account-text\"\r\n          onClick={() => this._handleOnClick(account.provider)}\r\n        >\r\n          <span>\r\n            <img src={this.getImage(account.provider)} alt={account.provider} />\r\n          </span>\r\n          <span>{account.email}</span>\r\n          <span className=\"lf-icon-arrow-exchange\"></span>\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nAccountUser.propTypes = {\r\n  account: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lexon: state.lexon\r\n});\r\n\r\nexport default connect(mapStateToProps)(AccountUser);\r\n","import React, { Component } from \"react\";\r\nimport \"./menu-user.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from \"reactstrap\";\r\nimport { config, RESULT_OK, PROVIDER } from \"../../constants\";\r\nimport AccountUser from \"./account-user/account-user\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport i18n from \"i18next\";\r\n\r\nclass MenuUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      accounts: []\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this._handleOnClick = this._handleOnClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { lexon } = this.props;\r\n    const _this = this;\r\n    if (lexon.userId) {\r\n      const url = `${config.url.URL_GET_ACCOUNTS}/${lexon.userId}`;\r\n      fetch(url, {\r\n        method: \"GET\"\r\n      })\r\n        .then(data => data.json())\r\n        .then(result => {\r\n          if (result.status === RESULT_OK) {\r\n            _this.setState({\r\n              accounts: result.result.filter(\r\n                account => account.provider !== PROVIDER\r\n              )\r\n            });\r\n          } else {\r\n            console.log(\"error ->\", result.despcription);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  _handleOnClick() {\r\n    const { userId } = this.props.lexon;\r\n    if (userId !== null) {\r\n      const url = `${config.url.URL_RESET_DEFAULTACCOUNT}/${userId}`;\r\n      fetch(url, {\r\n        method: \"GET\"\r\n      })\r\n        .then(() => {\r\n          const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user/${userId}/encrypt/0`;\r\n          window.open(urlRedirect, \"_self\");\r\n        })\r\n        .catch(error => {\r\n          console.log(\"error =>\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { dropdownOpen, accounts } = this.state;\r\n    const { picUrl, fullName, onSignout, lexon } = this.props;\r\n\r\n    let acronym = undefined;\r\n    if (!picUrl) {\r\n      if (fullName) {\r\n        acronym = fullName\r\n          .split(/\\s/)\r\n          .reduce((response, word) => (response += word.slice(0, 1)), \"\")\r\n          .substring(0, 2);\r\n      } else {\r\n        acronym = \" \";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"menu-user\">\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem className=\"d-md-down-none\">\r\n            <NavLink href=\"#\">\r\n              <i className=\"icon-location-pin\"></i>\r\n            </NavLink>\r\n          </NavItem>\r\n          <Dropdown nav isOpen={dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle nav>\r\n              <img\r\n                className=\"mx-2 profile-pic\"\r\n                src=\"assets/img/icon-user.png\"\r\n                alt={fullName}\r\n              />\r\n            </DropdownToggle>\r\n            <DropdownMenu right id=\"user-box\">\r\n              <DropdownItem header tag=\"div\" className=\"user-image-and-name\">\r\n                <span className=\"dropdown-menu-arrow\"></span>\r\n                <a\r\n                  href=\"#/\"\r\n                  className=\"text-right d-block pr-3 pt-3\"\r\n                  id=\"userInfo\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <span\r\n                    className=\"lf-icon-close\"\r\n                    onClick={() => this.toggle()}\r\n                  ></span>\r\n                </a>\r\n                <div className=\"content\">\r\n                  <div className=\"menu-title mb-5\">\r\n                    <span>{i18n.t(\"menu-user.user\")}</span>\r\n                  </div>\r\n                  {/* <div className=\"user-options\">\r\n                    <ul className=\"p-0\">\r\n                      <li>\r\n                        <a\r\n                          href=\"#/\"\r\n                          className=\"d-flex align-items-center\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#basicData\"\r\n                        >\r\n                          <span className=\"lf-icon-lead\"></span>{\" \"}\r\n                          <span>{i18n.t(\"menu-user.edit-basic-data\")}</span>\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          href=\"#/\"\r\n                          className=\"d-flex align-items-center\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#resetPassword\"\r\n                        >\r\n                          <span className=\"lf-icon-lock\"></span>{\" \"}\r\n                          <span>{i18n.t(\"menu-user.reset-pwd\")}</span>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div> */}\r\n                  <div className=\"user-image-and-name text-center\">\r\n                    <div className=\"user-image\">\r\n                      <a href=\"#/\">\r\n                        {acronym === undefined ? (\r\n                          <img src={picUrl} alt={fullName} />\r\n                        ) : (\r\n                          <strong>{acronym}</strong>\r\n                        )}\r\n                      </a>\r\n                    </div>\r\n                    <span className=\"user-name\">{fullName}</span>\r\n                    <span className=\"company-name\">\r\n                      Lefebvre-El Derecho, S.A.\r\n                    </span>\r\n\r\n                    <PerfectScrollbar>\r\n                      <ul className=\"other-accounts\">\r\n                        {accounts.map(account => (\r\n                          <AccountUser key={account.id} account={account} />\r\n                        ))}\r\n                      </ul>\r\n                    </PerfectScrollbar>\r\n\r\n                    {lexon.user ? (\r\n                      <a\r\n                        href=\"#/\"\r\n                        className=\"d-flex align-items-center add-more-accounts\"\r\n                        onClick={this._handleOnClick}\r\n                      >\r\n                        <span className=\"lf-icon-add-round\"></span>\r\n                        <strong>{i18n.t(\"menu-user.add-other-account\")}</strong>\r\n                      </a>\r\n                    ) : null}\r\n\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"col-6 btn btn-primary mt-3 mb-3\"\r\n                      onClick={onSignout}\r\n                    >\r\n                      {i18n.t(\"menu-user.close-session\")}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuUser.propTypes = {\r\n  picUrl: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  fullName: PropTypes.string.isRequired,\r\n  onSignout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lexon: state.lexon\r\n});\r\n\r\nexport default connect(mapStateToProps)(MenuUser);\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./header.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport debounce from \"lodash/debounce\";\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from \"reactstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { config } from \"../../constants\";\r\nimport MenuUser from \"../menu-user/menu-user\";\r\n\r\nexport class Header extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSearchClick = this.handleSearchClick.bind(this);\r\n    this._handleOnClick = this._handleOnClick.bind(this);\r\n    this.performSearch = debounce(this.performSearch.bind(this), 1000);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      dropdownMenuOpen: false\r\n    };\r\n  }\r\n\r\n  _handleOnClick(e) {\r\n    const { userId } = this.props.lexon;\r\n    if (userId !== null) {\r\n      const url = `${config.url.URL_RESET_DEFAULTACCOUNT}/${userId}`;\r\n      fetch(url, {\r\n        method: \"GET\"\r\n      })\r\n        .then(() => {\r\n          const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user/${userId}/encrypt/0`;\r\n          window.open(urlRedirect, \"_self\");\r\n        })\r\n        .catch(error => {\r\n          console.log(\"error =>\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.setState({\r\n      dropdownMenuOpen: !this.state.dropdownMenuOpen\r\n    });\r\n  }\r\n\r\n  handleSearchClick(evt) {\r\n    if (this.props.searhQuery !== \"\") {\r\n      this.performSearch();\r\n    }\r\n  }\r\n\r\n  handleInputChange(evt) {\r\n    this.props.setSearchQuery(evt.target.value);\r\n    this.performSearch();\r\n  }\r\n\r\n  performSearch() {\r\n    const searchParams = {};\r\n    if (!this.props.searchQuery || this.props.searchQuery === \"\") {\r\n      searchParams.labelIds = [\"INBOX\"];\r\n    }\r\n    this.props.getLabelMessages({ ...searchParams });\r\n  }\r\n\r\n  render() {\r\n    const userInfo = this.props.googleUser.w3;\r\n    const email = userInfo.U3;\r\n    const fullName = userInfo.ig;\r\n    const picUrl = userInfo.Paa;\r\n\r\n    return (\r\n      <header className=\"d-flex p-3 align-content-center align-items-center header \">\r\n        <div className=\"justify-content-left\">\r\n          <Link to=\"/inbox\">\r\n            <img\r\n              border=\"0\"\r\n              alt=\"lefebvre\"\r\n              src=\"assets/img/LogoLefebvre.png\"\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n        <div className=\"header-logo justify-content-center\">\r\n          {/*<Link to=\"/inbox\"><img border=\"0\" alt=\"gmail\" src=\"assets/img/logo-elderecho.png\"></img></Link>\r\n                    <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"otulook\" src=\"assets/img/gmail.png\"></img></Link> */}\r\n        </div>\r\n        <div className=\"header-search\">\r\n          <div className=\"input-group w-75 ml-1 mr-auto\">\r\n            <input\r\n              type=\"search\"\r\n              className=\"form-control search\"\r\n              placeholder=\"Search mail\"\r\n              value={this.props.searchQuery}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <div\r\n              className=\"input-group-append\"\r\n              onClick={this.handleSearchClick}\r\n            >\r\n              <button\r\n                className=\"btn btn-light  bg-white text-dark btn-search\"\r\n                type=\"button\"\r\n              >\r\n                <FontAwesomeIcon icon={faSearch} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/*<div className=\"header-logo justify-content-center\">\r\n                        <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"otulook\" src=\"assets/img/gmail.png\"></img></Link>                       \r\n                    </div>*/}\r\n\r\n          <MenuUser\r\n            picUrl={picUrl}\r\n            email={email}\r\n            fullName={fullName}\r\n            onSignout={this.props.onSignout}\r\n          />\r\n\r\n          <div>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem className=\"d-md-down-none\">\r\n                <NavLink href=\"#\">\r\n                  <i className=\"icon-location-pin\"></i>\r\n                </NavLink>\r\n              </NavItem>\r\n              <Dropdown\r\n                nav\r\n                isOpen={this.state.dropdownMenuOpen}\r\n                toggle={this.toggleMenu}\r\n              >\r\n                <DropdownToggle nav>\r\n                  <img src=\"assets/img/icon-products.png\" alt=\"\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {/* <DropdownItem>\r\n                    <i className=\"fa fa-shield\"></i> Calendar\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <i className=\"fa fa-shield\"></i> File Manager\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <i className=\"fa fa-shield\"></i>\r\n                    <span onClick={this._handleOnClick}>\r\n                      {\" \"}\r\n                      Configure New Account\r\n                    </span>\r\n                  </DropdownItem>\r\n                  <DropdownItem divider /> */}\r\n                  <DropdownItem>\r\n                    <span\r\n                      onClick={() =>\r\n                        window.open(\"https://www.lex-on.es/\", \"_self\")\r\n                      }\r\n                    >\r\n                      <i className=\"fa fa-lock\"></i> Return to Lex-on\r\n                    </span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n            </Nav>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lexon: state.lexon\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\n// export default Header;\r\n","import React, { PureComponent } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class LabelItem extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n  }\r\n\r\n  onClick(evt) {\r\n    this.props.onClick(evt, this.props.id);\r\n  }\r\n\r\n  render() {\r\n    const {name, messagesUnread} = this.props;\r\n    const iconProps = this.props.iconProps;\r\n\r\n    let selected = this.props.selected ? \" selected\" : \"\";\r\n\r\n    const messagesUnreadLocale = messagesUnread.toLocaleString();\r\n    return (\r\n      <li\r\n        className={`text-truncate text-left text-dark pl-4 pr-5 py-2 border-0 ${selected}`}\r\n        title={\r\n          name + (messagesUnread > 0 ? ` (${messagesUnreadLocale})` : \"\")\r\n        }\r\n        onClick={this.onClick}\r\n      >\r\n        <FontAwesomeIcon size=\"sm\" {...iconProps} />\r\n        {name}\r\n\r\n        {messagesUnread > 0 ? (\r\n          <div className={\"msg-count\"}>{messagesUnreadLocale}</div>\r\n        ) : null}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport {\r\n  faInbox,\r\n  faEnvelopeSquare,\r\n  faTrashAlt,\r\n  faFolderOpen,\r\n  faExclamationTriangle,\r\n  faChevronLeft\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport LabelItem from \"./LabelItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./sidebar.scss\";\r\n\r\nexport class Sidebar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedLabel: props.pathname,\r\n      leftSideBarOpen: true\r\n    };\r\n\r\n    //this.renderLabels = this.renderLabels.bind(this);\r\n    this.navigateToList = this.navigateToList.bind(this);\r\n    this.composeClick = this.composeClick.bind(this);\r\n    this.sidebarAction = this.sidebarAction.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.props.getLabelList(); //.then(labels => {});\r\n    /*  */\r\n    //this.props.getLabelMessages();\r\n  }\r\n\r\n  composeClick() {\r\n    this.props.history.push(\"/compose\");\r\n  }\r\n\r\n  navigateToList(evt, labelId) {\r\n    const label = this.props.labelsResult.labels.find(el => el.id === labelId);\r\n    this.props.onLabelClick(label || { id: \"\" });\r\n  }\r\n\r\n  sidebarAction() {\r\n    this.props.onSidebarCloseClick(this.state.leftSideBarOpen);\r\n  }\r\n\r\n  renderItems(labelList) {\r\n    if (labelList.length === 0) {\r\n      return <div />;\r\n    }\r\n\r\n    const labels = labelList.reduce((acc, el) => {\r\n      acc.push(el);\r\n      return acc;\r\n    }, []);\r\n\r\n    const labelGroups = groupBy(labels, \"type\");\r\n    var visibleLabels = [];\r\n    var sortedLabels = [];\r\n\r\n    if (labelGroups.user != null) {\r\n      visibleLabels = labelGroups.user.filter(\r\n        el =>\r\n          //el.labelListVisibility === \"labelShow\" ||\r\n          //el.labelListVisibility === \"labelShowIfUnread\" ||\r\n          !el.labelListVisibility || true\r\n      );\r\n      sortedLabels = sortBy(visibleLabels, \"name\");\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderFolders(labelGroups.system)}\r\n        {this.renderLabels(sortedLabels)}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderFolders(labels) {\r\n    const { t } = this.props;\r\n\r\n    const inboxLabel = {\r\n      ...labels.find(el => el.id === \"INBOX\"),\r\n      name: t(\"sidebar.inbox\"),\r\n      icon: faInbox\r\n    };\r\n    const sentLabel = {\r\n      ...labels.find(el => el.id === \"SENT\"),\r\n      messagesUnread: 0,\r\n      name: t(\"sidebar.sent\"),\r\n      icon: faEnvelopeSquare\r\n    };\r\n    const trashLabel = {\r\n      ...labels.find(el => el.id === \"TRASH\"),\r\n      messagesUnread: 0,\r\n      name: t(\"sidebar.trash\"),\r\n      icon: faTrashAlt\r\n    };\r\n    const spamLabel = {\r\n      ...labels.find(el => el.id === \"SPAM\"),\r\n      name: t(\"sidebar.spam\"),\r\n      icon: faExclamationTriangle\r\n    };\r\n\r\n    const folders = [inboxLabel, sentLabel, trashLabel, spamLabel];\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\r\n          <img\r\n            className=\"logo-ext\"\r\n            border=\"0\"\r\n            alt=\"otulook\"\r\n            src=\"assets/img/gmail.png\"\r\n          ></img>\r\n          {t(\"sidebar.folders\")}\r\n        </li>\r\n        {folders.map(el => {\r\n          const iconProps = { icon: el.icon, size: \"lg\" };\r\n          return (\r\n            <LabelItem\r\n              key={el.id + \"_label\"}\r\n              onClick={this.navigateToList}\r\n              name={el.name}\r\n              id={el.id}\r\n              messagesUnread={el.messagesUnread}\r\n              iconProps={iconProps}\r\n              selected={el.selected}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderLabels(labels) {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\r\n          {t(\"sidebar.labels\")}\r\n        </li>\r\n        {labels.map(el => {\r\n          const iconProps = {\r\n            icon: faFolderOpen,\r\n            color: \"#001978\",\r\n            size: \"lg\"\r\n          };\r\n          return (\r\n            <LabelItem\r\n              key={el.id + \"_label\"}\r\n              onClick={this.navigateToList}\r\n              name={el.name}\r\n              id={el.id}\r\n              messagesUnread={el.messagesUnread}\r\n              iconProps={iconProps}\r\n              selected={el.selected}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    const collapsed = this.props.sideBarCollapsed;\r\n\r\n    const composeProps = {\r\n      subject: \"\",\r\n      to: \"\",\r\n      content: \"\"\r\n    };\r\n\r\n    return (\r\n      //${ collapsed ? '' : styles['with-side-bar'] }\r\n      <nav\r\n        id=\"left-sidebar\"\r\n        className={\r\n          collapsed\r\n            ? \"d-flex flex-column text-truncate left-panel sidebar-close\"\r\n            : \"d-flex flex-column text-truncate left-panel sidebar-open\"\r\n        }\r\n      >\r\n        <div className=\"compose-panel\">\r\n          <div className=\"d-flex justify-content-center p-2 compose-btn\">\r\n            <div className=\"compose-div\">\r\n              <Link\r\n                className=\"btn font-weight-bold BtnLfcolor uppercase compose-btn\"\r\n                to={{\r\n                  pathname: \"/compose\",\r\n                  search: \"\",\r\n                  state: { composeProps }\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"ImgLf\"\r\n                  border=\"0\"\r\n                  alt=\"otulook\"\r\n                  src=\"assets/img/plus.png\"\r\n                ></img>\r\n                {t(\"sidebar.compose\")}\r\n              </Link>\r\n              <Button\r\n                onClick={this.props.sideBarToggle}\r\n                className=\"btn-transparent margin-right-20 float-right margin-top-10\"\r\n              >\r\n                <FontAwesomeIcon icon={faChevronLeft} size=\"1x\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar\r\n          component=\"ul\"\r\n          className=\"d-flex flex-column border-0 m-0 sidebar\"\r\n        >\r\n          {this.renderItems(this.props.labelsResult.labels)}\r\n        </PerfectScrollbar>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\n//Sidebar.propTypes = {\r\n//    sideBarToggle: PropTypes.func.isRequired,\r\n//    collapsed: PropTypes.bool.isRequired\r\n//};\r\n\r\n//export default Sidebar;\r\nexport default withTranslation()(Sidebar);\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"d-flex w-100 h-100 flex-column justify-content-center align-items-center\">\r\n    <div>\r\n      <FontAwesomeIcon icon={faExclamationTriangle} size=\"5x\" />\r\n    </div>\r\n      <div className=\"h1\">404 ERROR</div>\r\n      <div>The requested content was not found.</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport './checkbox.scss';\r\n\r\nexport class Checkbox extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isChecked: !!props.checked\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.checked !== this.props.checked) {\r\n      this.setState({\r\n        isChecked: this.props.checked\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange(evt) {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked\r\n    })\r\n    this.props.onChange(evt);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"custom-control fill-checkbox\">\r\n        <input checked={this.state.isChecked} \r\n          type=\"checkbox\" \r\n          onChange={this.props.onChange} \r\n          className=\"fill-control-input\" \r\n        />\r\n        <span className=\"fill-control-indicator\" />\r\n        {\r\n          this.props.label ? (\r\n            <span className=\"fill-control-description\">\r\n             {this.props.label}\r\n            </span>\r\n          ) : null\r\n        }\r\n      </label>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkbox;","import React from \"react\";\r\nimport Checkbox from \"../../../common/Checkbox\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"d-flex ml-2 justify-content-center align-items-center\">\r\n      <Checkbox checked={props.selected} onChange={props.onChange} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"wrapper text-4\">\r\n      <div className=\"wrapper align-items-center text-2\">\r\n        <div className=\"text from-name\">{props.fromName}</div>\r\n        <div className=\"text\">{props.subject}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperclip } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"wrapper num-4\">\r\n      <div className=\"wrapper num-2\">\r\n        <div className=\"num pr-4\">\r\n          {props.hasAttachment ? (\r\n            <FontAwesomeIcon icon={faPaperclip} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"num pr-4\">{props.formattedDate}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const getValidEmails = (emailInput) => {\r\n  let result = [];\r\n  if (!emailInput || emailInput.trim() === '') {\r\n    return result;\r\n  }\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  \r\n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\r\n\r\n  for (let i = 0; i < emails.length; i++) {\r\n    const e = emails[i];\r\n    if (e === '') {continue;}\r\n\r\n    if (regex.test(e)) {\r\n      result.push(e);\r\n    }\r\n    else {\r\n      result = [];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport const getNameEmail = (value) => {\r\n  if (!value) {return null;}\r\n  \r\n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\r\n  let m, name, email;\r\n  if ((m = regex.exec(value)) !== null) {\r\n    email = m[2];\r\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\r\n  }\r\n  return { name, email };\r\n}","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport MesssageCheckbox from \"./MessageCheckbox\";\r\n\r\nimport NameSubjectFields from \"./NameSubjectFields\";\r\nimport AttachmentDateFields from \"./AttachmentDateFields\";\r\nimport {getNameEmail} from '../../../../utils';\r\n\r\nexport class MessageItem extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.getMessage = this.getMessage.bind(this);\r\n  }\r\n\r\n  onSelectionChange(evt) {\r\n    this.props.onSelectionChange(evt.target.checked, this.props.data.id);\r\n  }\r\n\r\n  getMessage(evt) {\r\n    this.props.history.push(`/${this.props.data.id}`);\r\n  }\r\n\r\n  getFromName(from) {\r\n    const nameEmail = getNameEmail(from);\r\n    return nameEmail.name;\r\n  }\r\n\r\n  getFormattedDate(date, fallbackDateObj) {\r\n    let messageDate = moment(date);\r\n    if (!messageDate.isValid()) {\r\n      messageDate = moment(fallbackDateObj.parserFn(fallbackDateObj.date));\r\n    }\r\n    const nowDate = moment(new Date());\r\n    const isMessageFromToday = messageDate.format(\"YYYYMMDD\") === nowDate.format(\"YYYYMMDD\");\r\n    let formattedDate;\r\n    if (isMessageFromToday) {\r\n      formattedDate = messageDate.format(\"h:mm A\");\r\n    }\r\n    else {\r\n      if (messageDate.year() !== nowDate.year()) {\r\n        formattedDate = messageDate.format(\"YYYY/MM/DD\");\r\n      }\r\n      else {\r\n        formattedDate = messageDate.format(\"MMM D\");\r\n      }\r\n    }\r\n    return formattedDate;\r\n  }\r\n\r\n  render() {\r\n    const receivedHeader = this.props.data.payload.headers.find(el => el.name.toUpperCase() === \"X-RECEIVED\");\r\n    const date = receivedHeader ? receivedHeader.value.split(\";\")[1].trim() : \"\";\r\n    let formattedDate = this.getFormattedDate(date, {date: this.props.data.internalDate, parserFn: parseInt});\r\n    const unread = this.props.data.labelIds.indexOf(\"UNREAD\") > -1 ? \" font-weight-bold\" : \"\";\r\n    const selected = this.props.data.selected ? \" selected\" : \"\";\r\n    const subjectHeader = this.props.data.payload.headers.find(el => el.name.toUpperCase() === \"SUBJECT\");\r\n    const subject = subjectHeader ? subjectHeader.value : \"\";\r\n    const fromHeader = this.props.data.payload.headers.find(el => el.name.toUpperCase() === \"FROM\");\r\n    let fromName = fromHeader ? this.getFromName(fromHeader.value) : \"undefined\";\r\n\r\n    return (\r\n      <div className={`d-flex table-row-wrapper${selected}`}>\r\n        <MesssageCheckbox\r\n          selected={this.props.data.selected}\r\n          onChange={this.onSelectionChange}\r\n        />\r\n        <div\r\n          onClick={this.getMessage}\r\n          className={`table-row px-2 py-3${unread}`}\r\n        >\r\n          <NameSubjectFields fromName={fromName} subject={subject} />\r\n          <AttachmentDateFields\r\n            formattedDate={formattedDate}\r\n            hasAttachment={\r\n              this.props.data.payload.mimeType === \"multipart/mixed\"\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MessageItem);\r\n","import React from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"btn-group ml-auto\">\r\n      <button\r\n        onClick={props.navigateToPrevPage}\r\n        disabled={props.prevToken == null}\r\n        className=\"btn btn-light bg-white border-1 border-dark px-3 btn-sm\"\r\n        title={t('pager-buttons.previous-page')}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronLeft} />\r\n      </button>\r\n      <button\r\n        onClick={props.navigateToNextPage}\r\n        disabled={props.nextToken == null}\r\n        className=\"btn btn-light bg-white border-1  border-dark px-3 btn-sm\"\r\n        title={t('pager-buttons.next-page')}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './listToolbar.scss';\r\n\r\nexport class ListActionButtons extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getClickHandler = this.getClickHandler.bind(this);\r\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\r\n  }\r\n\r\n  getClickHandler(action) {\r\n    return evt => {\r\n      this.props.onClick(action);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"action-btn\">\r\n          <FontAwesomeIcon\r\n            title={t('message-list.move-to-trash')}\r\n            onClick={this.trashHandler}\r\n            icon={faTrash}\r\n            size=\"lg\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ListActionButtons);\r\n","import React, { PureComponent } from \"react\";\r\nimport Checkbox from \"../../../common/Checkbox\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  toggleSelected,\r\n  modifyMessages\r\n} from \"../actions/message-list.actions\";\r\nimport Pager from \"../pager-buttons/PagerButtons\";\r\nimport ListActionButtons from \"./ListActionButtons\";\r\nimport { deleteListMessages, addListMessages } from \"../actions/message-list.actions\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport class MessageToolbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n    this.modifyMessages = this.modifyMessages.bind(this);\r\n\r\n    this.state = {\r\n      selectedMessageIds: []\r\n    };\r\n    }\r\n\r\n \r\n\r\n  onSelectionChange(evt) {\r\n    const checked = evt.target.checked;\r\n\r\n    const messageIds = this.props.messagesResult.messages.reduce((acc, el) => {\r\n      acc.push(el.id);\r\n      return acc;\r\n    }, []);\r\n\r\n    this.setState({\r\n      selectedMessageIds: messageIds\r\n    });\r\n\r\n    this.props.toggleSelected(messageIds, checked);\r\n\r\n    window.dispatchEvent(new CustomEvent(\"CheckAllclick\", {\r\n      detail: {\r\n          listMessages: messageIds,\r\n          chkselected : checked\r\n      }         \r\n    }));\r\n\r\n    checked ? this.props.addListMessages(messageIds) : this.props.deleteListMessages(messageIds);\r\n  }\r\n\r\n  navigateToNextPage() {\r\n    this.props.navigateToNextPage(this.props.nextToken);\r\n  }\r\n\r\n  navigateToPrevPage() {\r\n    this.props.navigateToPrevPage(this.props.prevToken);\r\n  }\r\n\r\n  modifyMessages(addLabelIds, removeLabelIds) {\r\n    const ids = this.props.messagesResult.messages.filter(el => el.selected).map(el => el.id);\r\n    const actionParams = {\r\n      ...addLabelIds && {addLabelIds},\r\n      ...removeLabelIds && {removeLabelIds}\r\n    };\r\n    this.props.modifyMessages({ ids, ...actionParams});\r\n  }\r\n\r\n  render() {\r\n\r\n    const collapsed = this.props.sideBarCollapsed;\r\n\r\n    let checked = false;\r\n    let selectedMessages = [];\r\n\r\n    if (this.props.messagesResult) {\r\n      selectedMessages = this.props.messagesResult.messages.filter(el => el.selected);\r\n      checked = this.props.messagesResult.messages.length > 0 &&  selectedMessages.length === this.props.messagesResult.messages.length;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"msg-toolbar\">\r\n        <div className=\"pl-2 py-2 pr-4 d-flex align-items-center bd-highlight  align-center \">\r\n          <div className=\"d-flex align-content-center align-items-center \">\r\n            <div className=\"padding-top-10\">\r\n                <span className={collapsed ? \"\" : \"with-side-bar\"}>\r\n                   <Button\r\n                      onClick={this.props.sideBarToggle}\r\n                      className=\"btn-transparent margin-right-10 margin-bottom-10\">\r\n                      <FontAwesomeIcon icon={faBars} size=\"1x\" />\r\n                   </Button>\r\n                </span>\r\n                \r\n              <Checkbox checked={checked} onChange={this.onSelectionChange} />\r\n            </div>\r\n            <div />\r\n\r\n            <div className=\"ml-auto p-2 bd-highlight\">\r\n              <div>\r\n                {selectedMessages.length ? (\r\n                  <ListActionButtons onClick={this.modifyMessages} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Pager\r\n            nextToken={this.props.nextToken}\r\n            prevToken={this.props.prevToken}\r\n            navigateToPrevPage={this.navigateToPrevPage}\r\n            navigateToNextPage={this.navigateToNextPage}\r\n          />         \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  messagesResult: state.messagesResult,\r\n  selectedMessages: state.messageList.selectedMessages\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      toggleSelected,\r\n      modifyMessages,\r\n      deleteListMessages,\r\n      addListMessages\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MessageToolbar);","import React, { PureComponent } from \"react\";\r\nimport './ListFooter.scss';\r\n\r\nexport class Footer extends PureComponent {\r\n  render() {\r\n    const { messagesTotal } = this.props;\r\n    let totalLabel = '';\r\n    if (messagesTotal > 0) {\r\n      totalLabel = `${messagesTotal.toLocaleString()} messages`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-auto p-2  list-footer\" >\r\n        <div className=\"d-flex px-4 h-100 align-items-center\">\r\n          <div className=\"total-count\">{totalLabel}</div>\r\n          <div className=\"ml-auto \"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { PureComponent } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport MessageRow from \"./message-row/MessageRow\";\r\n\r\nimport { addMessage, deleteMessage } from \"./actions/message-list.actions\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ListToolbar from \"./list-toolbar/ListToolbar\";\r\nimport ListFooter from \"./list-footer/ListFooter\";\r\nimport \"./messageList.scss\";\r\n\r\nconst ViewMode = {\r\n  LIST: 1,\r\n  CONTENT: 2,\r\n  EDIT: 3\r\n};\r\n\r\nexport class MessageList extends PureComponent {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewMode: ViewMode.LIST,\r\n      contentMessageId: undefined,\r\n      currentLabel: \"\"\r\n    };\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.renderView = this.renderView.bind(this);\r\n    this.renderMessages = this.renderMessages.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const searchParam = this.props.location.search;\r\n    const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n\r\n    if (token && this.props.messagesResult.pageTokens.length === 0) {\r\n      this.props.addInitialPageToken(token);\r\n    }\r\n\r\n    const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\r\n\r\n    this.props.getLabelMessages({\r\n      ...labelIds && {labelIds},\r\n      pageToken: token\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n      const searchParam = this.props.location.search;\r\n      const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n\r\n      const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\r\n\r\n      this.props.getLabelMessages({\r\n        ...labelIds && {labelIds},\r\n        pageToken: token\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onSelectionChange(selected, msgId) {\r\n      this.props.toggleSelected([msgId], selected);\r\n      //e.emit('received', { text: \"Id: \" + msgId + \" selected: \" + selected })\r\n      window.dispatchEvent(new CustomEvent(\"Checkclick\", {\r\n          detail: {\r\n              name: msgId,\r\n              chkselected : selected\r\n          }         \r\n      }));\r\n      \r\n      selected ? this.props.addMessage(msgId) : this.props.deleteMessage(msgId);\r\n  }\r\n  \r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMessages() {   \r\n    const { t } = this.props;\r\n\r\n    if (this.props.messagesResult.loading) {\r\n      return this.renderSpinner();\r\n    } else if (this.props.messagesResult.messages.length === 0) {\r\n      return (\r\n        <div className=\"p-4 text-center\">        \r\n            {t('message-list.no-message')}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.messagesResult.messages.map(el => {\r\n      if (this.props.selectedMessages.find(x => x.id === el.id)) {\r\n        el.selected = true;\r\n      }\r\n\r\n      return (\r\n        <MessageRow\r\n          data={el}\r\n          key={el.id}\r\n          onSelectionChange={this.onSelectionChange}\r\n          onClick={this.getMessage}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  renderView() {\r\n    const { viewMode } = this.state;\r\n\r\n    switch (viewMode) {\r\n\r\n      case ViewMode.EDIT:\r\n        return this.renderEditView();\r\n\r\n      default:\r\n        return this.renderMessages();\r\n    }\r\n  }\r\n\r\n  getPageTokens() {\r\n    if (this.props.messagesResult.loading) {\r\n      return { nextToken: null, prevToken: null }\r\n    }\r\n    const { messagesResult, location } = this.props;\r\n    const pathname = location.pathname;\r\n    let prevToken;\r\n    let nextToken = messagesResult.nextPageToken;\r\n    const searchParam = location.search;\r\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n    if (currentToken) {\r\n      const tokenIndex = messagesResult.pageTokens.indexOf(currentToken);\r\n      if (tokenIndex > -1) {\r\n        nextToken = messagesResult.pageTokens[tokenIndex + 1];\r\n        prevToken = messagesResult.pageTokens[tokenIndex - 1];\r\n        if (!prevToken) {\r\n          if (tokenIndex > 0) {\r\n          }\r\n        }\r\n        prevToken = prevToken ? `${pathname}?${prevToken}` : pathname;\r\n      }\r\n      else {\r\n        prevToken = pathname;\r\n      }\r\n    }\r\n    nextToken = nextToken ? `${pathname}?${nextToken}` : null;\r\n    return { nextToken, prevToken };\r\n  }\r\n\r\n  render() {\r\n    const { messagesResult } = this.props;\r\n    const messagesTotal = messagesResult.label ? messagesResult.label.result.messagesTotal : 0;\r\n    const { nextToken, prevToken } = this.getPageTokens();\r\n\r\n    const collapsed = this.props.sideBarCollapsed;\r\n          \r\n    return (\r\n      <React.Fragment>       \r\n        <ListToolbar\r\n          sideBarCollapsed={collapsed} sideBarToggle={this.props.sideBarToggle}\r\n          nextToken={nextToken}\r\n          prevToken={prevToken}\r\n          navigateToNextPage={this.props.navigateToNextPage}\r\n          navigateToPrevPage={this.props.navigateToPrevPage}\r\n        />\r\n        <PerfectScrollbar className=\"container-fluid no-gutters px-0 message-list-container\">\r\n          {this.renderView()}\r\n        </PerfectScrollbar>\r\n        <ListFooter messagesTotal={messagesTotal} />\r\n      </React.Fragment>\r\n    );\r\n  }  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      selectedMessages: state.messageList.selectedMessages\r\n  }    \r\n};  \r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      addMessage,\r\n      deleteMessage\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default compose(\r\n  withRouter,\r\n  withTranslation(),\r\n  connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n  )\r\n)(MessageList);\r\n","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNameEmail } from \"../../../../utils\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"reactstrap\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./messageToolbar.scss\";\r\n\r\nexport class MessageToolbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\r\n  }\r\n\r\n  getClickHandler(action) {\r\n    return evt => {\r\n      this.props.onClick(action);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    if (!this.props.messageResult.result) {\r\n      return null;\r\n    }\r\n\r\n    const message = this.props.messageResult.result;\r\n    const { messageHeaders } = message;\r\n\r\n    let replyTo, cc, subject;\r\n\r\n    for (let i = 0; i < messageHeaders.length; i++) {\r\n      const header = messageHeaders[i];\r\n      switch (header.name) {\r\n        case \"Subject\":\r\n          subject = header;\r\n          break;\r\n        case \"From\":\r\n          if (!replyTo) {\r\n            replyTo = header;\r\n          }\r\n          break;\r\n        case \"Reply-To\":\r\n          replyTo = header;\r\n          break;\r\n        case \"Cc\":\r\n          cc = header;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    const nameEmail = getNameEmail(replyTo.value);\r\n    const receivedHeader = messageHeaders.find(el => el.name === \"X-Received\");\r\n    const date = receivedHeader\r\n      ? receivedHeader.value.split(\";\")[1].trim()\r\n      : \"\";\r\n\r\n    let parsedDate = moment(date);\r\n\r\n    if (!parsedDate.isValid()) {\r\n      parsedDate = moment(\r\n        parseInt(this.props.messageResult.result.internalDate)\r\n      );\r\n    }\r\n    const replyHeader = `<p>On ${parsedDate.format(\r\n      \"MMMM Do YYYY, h:mm:ss a\"\r\n    )} < ${nameEmail.email} > wrote:</p>`;\r\n\r\n    const composeProps = {\r\n      subject: `Re: ${subject.value}`,\r\n      to: nameEmail.email,\r\n      content: `<p>&nbsp;</p>\r\n          <p>&nbsp;</p>\r\n          <p>&nbsp;</p>\r\n          ${replyHeader}\r\n          <blockquote>${this.props.messageResult.body}</blockquote>`,\r\n      ...(cc && { cc: cc.value })\r\n    };\r\n\r\n    const collapsed = this.props.sideBarCollapsed;\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center message-toolbar\">\r\n        <div className=\"action-btns\">\r\n          <span\r\n            className={\r\n              collapsed ? \"action-btn mr-2\" : \"action-btn mr-2 with-side-bar\"\r\n            }\r\n          >\r\n            <Button\r\n              onClick={this.props.sideBarToggle}\r\n              className=\"btn-transparent\"\r\n            >\r\n              <FontAwesomeIcon icon={faBars} size=\"1x\" />\r\n            </Button>\r\n          </span>\r\n          <div className=\"action-btn mr-2\">\r\n            <button className=\"btn\" onClick={this.trashHandler}>\r\n              <FontAwesomeIcon\r\n                title={t(\"message-toolbar.move-to-trash\")}\r\n                icon={faTrash}\r\n                size=\"lg\"\r\n              />\r\n            </button>\r\n          </div>\r\n          <div className=\"action-btn mr-2\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/compose\",\r\n                search: \"\",\r\n                sideBarCollapsed: this.props.sideBarCollapsed,\r\n                sideBarToggle: this.props.sideBarToggle,\r\n                state: { composeProps }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                title={t(\"message-toolbar.reply\")}\r\n                icon={faReply}\r\n                size=\"lg\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(MessageToolbar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport {\r\n  getEmailMessage,\r\n  modifyMessages\r\n} from \"../actions/message-list.actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport MessageToolbar from \"../message-toolbar/MessageToolbar\";\r\nimport \"./messageContent.scss\";\r\n\r\n//BEGIN functions for attachment functionality\r\n\r\nfunction b64toBlob(b64Data, contentType, sliceSize) {\r\n    contentType = contentType || '';\r\n    sliceSize = sliceSize || 512;\r\n\r\n    var byteCharacters = atob(b64Data);\r\n    var byteArrays = [];\r\n\r\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        var byteNumbers = new Array(slice.length);\r\n        for (var i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        var byteArray = new Uint8Array(byteNumbers);\r\n\r\n        byteArrays.push(byteArray);\r\n    }\r\n\r\n    var blob = new Blob(byteArrays, { type: contentType });\r\n    return blob;\r\n}\r\n\r\n\r\nfunction getAttachments(messageID, parts, callback) {\r\n    var attachId = parts.body.attachmentId;\r\n    var request = window.gapi.client.gmail.users.messages.attachments.get({\r\n        'id': attachId,\r\n        'messageId': messageID,\r\n        'userId': 'me'\r\n    });\r\n    request.execute(function (attachment) {\r\n        callback(parts.filename, parts.mimeType, attachment);\r\n    });\r\n}\r\n\r\nfunction addAttachmentElement(blobUrl, filename) {   \r\n    var aLink = document.createElement('a');\r\n    var linkText = document.createTextNode(filename);   \r\n    aLink.appendChild(linkText);    \r\n    aLink.href = blobUrl\r\n    aLink.title = filename\r\n    aLink.download = filename\r\n    aLink.style.textDecoration = \"none\";\r\n    aLink.style.padding = \"5px\";\r\n    aLink.style.margin = \"15px 0\";\r\n    aLink.style.clear = \"both\";    \r\n    return aLink\r\n}\r\n\r\nfunction addAttachmentContainer(mimeType) {\r\n    var aDiv = document.createElement('span');\r\n    aDiv.style.whiteSpace = \"nowrap\";\r\n    aDiv.style.backgroundColor = \"#fafafa\";\r\n    aDiv.style.border= \"solid 1px #aaa\";\r\n    aDiv.style.padding = \"5px\";    \r\n    aDiv.style.margin = \"10px\";    \r\n    aDiv.style.display = \"inline-block\";\r\n    var Img = addAttachmentImg(mimeType);\r\n    aDiv.appendChild(Img);    \r\n    return aDiv\r\n} \r\n\r\nfunction addAttachmentImg(mimeType) {\r\n    var aImg = document.createElement('img');\r\n    var imgPath;\r\n\r\n    switch (mimeType) {\r\n        case \"image/png\":\r\n            imgPath = \"../assets/img/file-extensions/png.png\"\r\n            break;\r\n        case \"image/jpeg\":\r\n            imgPath = \"../assets/img/file-extensions/jpg.png\"\r\n            break;\r\n        case \"application/pdf\":\r\n            imgPath = \"../assets/img/file-extensions/pdf.png\";\r\n            break;\r\n        case \"text/plain\":\r\n            imgPath = \"../assets/img/file-extensions/txt.png\";\r\n            break;\r\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n            imgPath = \"../assets/img/file-extensions/doc.png\";\r\n            break\r\n        default:\r\n            imgPath = \"../assets/img/file-extensions/default.png\";\r\n            break\r\n        // code block\r\n    }  \r\n    aImg.src = imgPath;\r\n    aImg.style.alt = \"Attached file\";    \r\n    //aImg.height = 42;\r\n    //aImg.width = 42;\r\n    aImg.style.display = \"inline-block\";\r\n    aImg.style.verticalAlign= \"middle\";\r\n    return aImg\r\n}\r\n\r\nfunction addDivDivider() {\r\n    var aDiv = document.createElement('div');    \r\n    aDiv.style.height = \"30px\";    \r\n    aDiv.id=\"Dividier\"\r\n    return aDiv\r\n} \r\n\r\n//END functions for attachment functionality\r\n\r\n\r\nexport class MessageContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorMessage: undefined\r\n    };\r\n\r\n    this.iframeRef = React.createRef();\r\n    this.modifyMessage = this.modifyMessage.bind(this);\r\n  }\r\n\r\n  componentDidMount(prevProps) {\r\n    const messageId = this.props.match.params.id;\r\n    this.props.getEmailMessage(messageId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { emailMessageResult } = this.props;\r\n    if (!emailMessageResult.loading) {\r\n      if (!emailMessageResult.failed) {\r\n          if (this.iframeRef.current) {\r\n\r\n            const { body } = this.iframeRef.current.contentWindow.document;\r\n            body.style.margin = \"0px\";\r\n            body.style.fontFamily = \"Arial, Helvetica, sans-serif\";\r\n            body.style.fontSize = \"13px\";\r\n            body.innerHTML = this.props.emailMessageResult.body;\r\n\r\n            //Adding attach files  \r\n            var attach = emailMessageResult.attach;   \r\n            if (typeof attach !== 'undefined' && attach.length > 0) {\r\n                var iframe = document.getElementById('message-iframe');\r\n                var Divider = addDivDivider(); \r\n                iframe.contentDocument.body.appendChild(Divider);\r\n                for (var i = 0; i < attach.length; i++) {\r\n                    if (attach[i].filename && attach[i].filename.length > 0) {\r\n                        getAttachments(emailMessageResult.id, attach[i], function (filename, mimeType, attachment) {\r\n                            //console.log('File Name is ' + filename);\r\n                            let dataBase64Rep = attachment.data.replace(/-/g, '+').replace(/_/g, '/')\r\n                            let urlBlob = b64toBlob(dataBase64Rep, mimeType, attachment.size);\r\n                            //console.log(urlBlob);\r\n                            var blobUrl = URL.createObjectURL(urlBlob);\r\n                            var Attachment = addAttachmentElement(blobUrl,filename);                            \r\n                            var AttachmentDiv = addAttachmentContainer(mimeType);\r\n                            AttachmentDiv.appendChild(Attachment);                            \r\n                            iframe.contentDocument.body.appendChild(AttachmentDiv);\r\n                        });\r\n                    };\r\n                };\r\n            }  \r\n        }\r\n      } else {\r\n        if (!this.state.errorMessage) {\r\n          this.setState({\r\n            errorMessage: emailMessageResult.error.result.error.message,\r\n            modal: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n    }   \r\n   \r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderErrorModal() {\r\n    return <Redirect to=\"/notfound\" />;\r\n  }  \r\n\r\n  modifyMessage(addLabelIds, removeLabelIds) {\r\n    const id = this.props.emailMessageResult.result.id;\r\n    const actionParams = {\r\n      ...(addLabelIds && { addLabelIds }),\r\n      ...(removeLabelIds && { removeLabelIds })\r\n    };\r\n    this.props.modifyMessages({ ids: [id], ...actionParams });\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.emailMessageResult.loading) {\r\n      return this.renderSpinner();\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessageToolbar \r\n          sideBarCollapsed={this.props.sideBarCollapsed}\r\n          sideBarToggle={this.props.sideBarToggle}\r\n          history={this.props.history}\r\n          onClick={this.modifyMessage} \r\n          messageResult={this.props.emailMessageResult}\r\n        />\r\n        \r\n        <div className=\"d-flex justify-content-center align-items-center message-content\">\r\n          {this.props.emailMessageResult.loading ? this.renderSpinner() : null}\r\n          {this.state.errorMessage ? (\r\n            this.renderErrorModal()\r\n          ) : (\r\n            <iframe\r\n              ref={this.iframeRef}\r\n              title=\"Message contents\"\r\n              id=\"message-iframe\"\r\n              style={{\r\n                display: this.props.emailMessageResult.loading\r\n                  ? \"none\"\r\n                  : \"block\"\r\n              }}\r\n            />\r\n          )}\r\n            </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  emailMessageResult: state.emailMessageResult\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      getEmailMessage,\r\n      modifyMessages\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(MessageContent);\r\n","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { sendMessage } from \"../../api\";\r\nimport { getValidEmails } from \"../../utils\";\r\n\r\nimport { Button, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"../../../node_modules/react-quill/dist/quill.snow.css\";\r\n\r\nimport \"./composeMessage.scss\";\r\n\r\nconst Uppy = require(\"@uppy/core\");\r\nconst Tus = require(\"@uppy/tus\");\r\nconst GoogleDrive = require(\"@uppy/google-drive\");\r\nconst { DragDrop, ProgressBar } = require(\"@uppy/react\");\r\n\r\nexport class ComposeMessage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      to: props.history.location.state.composeProps.to || \"\",\r\n      cc: props.history.location.state.composeProps.cc || \"\",\r\n      bcc: props.history.location.state.composeProps.bcc || \"\",\r\n      subject: props.history.location.state.composeProps.subject || \"\",\r\n      content: props.history.location.state.composeProps.content || \"\",\r\n      showInlineDashboard: false,\r\n      open: false,\r\n      uppyPreviews: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.sendEmail = this.sendEmail.bind(this);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.setField = this.setField.bind(this);\r\n    this.uppy = new Uppy({ id: \"uppy1\", autoProceed: false, debug: true })\r\n      .use(Tus, { endpoint: \"https://master.tus.io/files/\" })\r\n      .use(GoogleDrive, { serverUrl: \"https://companion.uppy.io\" });\r\n    this.reader = new FileReader();\r\n\r\n    //this.uppy2 = new Uppy({ id: 'uppy2', autoProceed: false, debug: true })\r\n    //    .use(Tus, { endpoint: 'https://master.tus.io/files/' })\r\n\r\n    this.uploadFile = this.uploadFile.bind(this);\r\n    this.addFileToState = this.addFileToState.bind(this);\r\n    this.uppy.on(\"complete\", result => {\r\n      console.log(\r\n        \"Upload complete! We�ve uploaded these files:\",\r\n        result.successful\r\n      );\r\n    });\r\n    this.uppy.on(\"file-added\", file => {\r\n      console.log(\"Added file\", file);\r\n      this.reader.onload = readerEvt =>\r\n        this.addFileToState({ file, base64: readerEvt.target.result });\r\n      // Define this onload every time to get file and base64 every time\r\n      this.reader.readAsDataURL(file.data);\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.props.history.push(\"/inbox\");\r\n  }\r\n\r\n  goBack() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  addFileToState({ file, base64 }) {\r\n    this.setState({\r\n      uppyPreviews: [{ file, base64 }, ...this.state.uppyPreviews]\r\n    });\r\n  }\r\n\r\n  uploadFile() {\r\n    console.log(this.state.uppyPreviews);\r\n    // this.uppyOne.upload();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.uppy.close();\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({ content: value });\r\n  }\r\n\r\n  sendEmail() {\r\n    const validTo = getValidEmails(this.state.to);\r\n\r\n    if (\r\n      !validTo.length ||\r\n      this.state.subject.trim() === \"\" ||\r\n      this.state.content === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const headers = {\r\n      To: validTo.join(\", \"),\r\n      Subject: this.state.subject,\r\n      attachments: this.state.uppyPreviews\r\n    };\r\n\r\n    const validCc = getValidEmails(this.state.cc);\r\n    if (validCc.length) {\r\n      headers.Cc = validCc.join(\", \");\r\n    }\r\n\r\n    const validBcc = getValidEmails(this.state.bcc);\r\n    if (validBcc.length) {\r\n      headers.Bcc = validBcc.join(\", \");\r\n    }\r\n\r\n    const Fileattached = this.state.uppyPreviews;\r\n\r\n    sendMessage({\r\n      headers,\r\n      body: this.state.content,\r\n      attachments: Fileattached\r\n    }).then(_ => {\r\n      this.resetFields();\r\n      this.closeModal();\r\n    });\r\n  }\r\n\r\n  resetFields() {\r\n    this.setState({\r\n      to: this.props.to || \"\",\r\n      cc: this.props.cc || \"\",\r\n      bcc: this.props.bcc || \"\",\r\n      subject: this.props.subject || \"\",\r\n      content: this.props.content || \"\",\r\n      uppyPreviews: []\r\n    });\r\n  }\r\n\r\n  setField(field, trimValue = true) {\r\n    return evt => {\r\n      this.setState({\r\n        [field]: trimValue ? evt.target.value.trim() : evt.target.value\r\n      });\r\n    };\r\n  }\r\n\r\n  isInvalid(field) {\r\n    const fieldValue = this.state[field].trim();\r\n    return fieldValue.length > 0 && !getValidEmails(fieldValue).length;\r\n  }\r\n\r\n  render() {\r\n    const collapsed = this.props.sideBarCollapsed;\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"compose-dialog\">\r\n          <div className=\"compose-panel\">\r\n            <div className=\"d-flex justify-content-center align-items-center message-toolbar\">\r\n              <div className=\"action-btns\">\r\n                <span\r\n                  className={\r\n                    collapsed\r\n                      ? \"action-btn mr-2\"\r\n                      : \"action-btn mr-2 with-side-bar\"\r\n                  }\r\n                >\r\n                  <Button\r\n                    onClick={this.props.sideBarToggle}\r\n                    className=\"btn-transparent\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faBars} size=\"1x\" />\r\n                  </Button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container-panel\">\r\n            <div className=\"compose-message\">\r\n              <div className=\"message-fields\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    {t(\"compose-message.to\")}\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={1}\r\n                    value={this.state.to}\r\n                    placeholder={t(\"compose-message.comma-separated\")}\r\n                    invalid={this.isInvalid(\"to\")}\r\n                    onChange={this.setField(\"to\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">Cc:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={2}\r\n                    value={this.state.cc}\r\n                    placeholder={t(\"compose-message.comma-separated\")}\r\n                    invalid={this.isInvalid(\"cc\")}\r\n                    onChange={this.setField(\"cc\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">Bcc:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={3}\r\n                    placeholder={t(\"compose-message.comma-separated\")}\r\n                    invalid={this.isInvalid(\"bcc\")}\r\n                    onChange={this.setField(\"bcc\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    {t(\"compose-message.subject\")}\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={4}\r\n                    placeholder=\"\"\r\n                    value={this.state.subject}\r\n                    onChange={this.setField(\"subject\", false)}\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <div>\r\n                <div className=\"editor-wrapper\">\r\n                  <ReactQuill\r\n                    tabIndex={5}\r\n                    value={this.state.content}\r\n                    onChange={this.handleChange}\r\n                    className=\"autoResizeHeight\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ImagePreviewContainer compose-dropcontainer\">\r\n              {this.state.uppyPreviews.map(item => {\r\n                return (\r\n                  <object\r\n                    className=\"FileList\"\r\n                    key={item.file.id}\r\n                    type={item.file.type}\r\n                    width=\"80px\"\r\n                    height=\"auto\"\r\n                    data={item.base64}\r\n                  >\r\n                    {item.file.name}\r\n                  </object>\r\n                );\r\n              })}\r\n            </div>\r\n            <ProgressBar uppy={this.uppy} hideAfterFinish={false} />\r\n            <div id=\"Divfooter\" className=\"compose-droppanel\">\r\n              <DragDrop\r\n                uppy={this.uppy}\r\n                width=\"100%\"\r\n                height=\"130px\"\r\n                min-height=\"130px\"\r\n                note={t(\"compose-message.add-attachments\")}\r\n                locale={{\r\n                  strings: {\r\n                    dropHereOr:\r\n                      t(\"compose-message.drag-and-drop\") +\r\n                      \" \" +\r\n                      t(\"compose-message.or\") +\r\n                      \" %{browse}\",\r\n                    browse: t(\"compose-message.browse\")\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"footer compose-footer\">\r\n              <Button\r\n                className=\"mr-auto font-weight-bold\"\r\n                color=\"primary\"\r\n                onClick={this.sendEmail}\r\n                title={t(\"compose-message.send-message\")}\r\n              >\r\n                {t(\"compose-message.send\")}\r\n              </Button>{\" \"}\r\n              <Button\r\n                className=\"mr-left font-weight-bold btn-outline-primary\"\r\n                title={t(\"compose-message.discard\")}\r\n                color=\"secondary\"\r\n                onClick={this.closeModal}\r\n              >\r\n                {t(\"compose-message.discard\")}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ComposeMessage);\r\n","export const signIn = () => {\r\n  return window.gapi.auth2.getAuthInstance().signIn();\r\n};\r\n\r\nexport const initGmailClient = (apiKey, clientId) => {\r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\n\r\n  // Array of API discovery doc URLs for APIs\r\n  const DISCOVERY_DOCS = [\r\n    \"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"\r\n  ];\r\n\r\n  // Authorization scopes required by the API; multiple scopes can be\r\n  // included, separated by spaces.\r\n  // More info: https://developers.google.com/identity/protocols/googlescopes\r\n  const SCOPES = \"https://mail.google.com/\"; // Scope for Read, send, delete, and manage your email\r\n\r\n  const gapi = window.gapi;\r\n\r\n  return gapi.client.init({\r\n    apiKey: API_KEY,\r\n    clientId: CLIENT_ID,\r\n    discoveryDocs: DISCOVERY_DOCS,\r\n    scope: SCOPES\r\n  });\r\n};\r\n\r\nexport const checkSignInStatus = () => {\r\n  return new Promise((resolve, reject) => {\r\n    initGmailClient()\r\n      .then(_ => {\r\n        const gapi = window.gapi;\r\n\r\n        const googleAuthInstance = gapi.auth2.getAuthInstance();\r\n\r\n        const isSignedIn = googleAuthInstance.isSignedIn.get();\r\n\r\n        if (isSignedIn) {\r\n          // Listen for sign-in state changes.\r\n          googleAuthInstance.isSignedIn.listen(isSignedIn => {\r\n            updateSigninStatus(isSignedIn);\r\n          });\r\n\r\n          resolve(googleAuthInstance.currentUser.Ab);\r\n        } else {\r\n          reject();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n// Listener for sign-in state\r\nexport const updateSigninStatus = isSignedIn => {\r\n  if (!isSignedIn) {\r\n    // TODO: react to logged out status\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return window.gapi.auth2.getAuthInstance().signOut();\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./material_title_panel.css\";\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily:\r\n      '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\r\n    fontWeight: 300\r\n  },\r\n  header: {\r\n    backgroundColor: \"#001978\",\r\n    color: \"white\",\r\n    padding: \"16px\",\r\n    fontSize: \"16px\",\r\n    height: \"65px\",\r\n    marginLeft: \"1px\"\r\n  }\r\n};\r\n\r\nconst MaterialTitlePanel = props => {\r\n  const rootStyle = props.style\r\n    ? { ...styles.root, ...props.style }\r\n    : styles.root;\r\n\r\n  const _handleOnClick = () => {\r\n    props.sidebarDocked();\r\n  };\r\n\r\n  return (\r\n    <div style={rootStyle}>\r\n      <div style={styles.header}>\r\n        <span>{props.title}</span>\r\n        <img\r\n          className=\"headerButtons\"\r\n          alt={props.title}\r\n          border=\"0\"\r\n          src=\"assets/img/buttons.png\"\r\n          onClick={() => _handleOnClick()}\r\n        ></img>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nMaterialTitlePanel.propTypes = {\r\n  style: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  children: PropTypes.object\r\n};\r\n\r\nexport default MaterialTitlePanel;\r\n","export const runScript = async (url) => {\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        script.src = url;\r\n        script.onload = resolve;\r\n        script.onerror = reject;\r\n\r\n        const firstScript = document.getElementsByTagName('script')[0];\r\n        firstScript.parentNode.insertBefore(script, firstScript);\r\n    });\r\n};\r\n\r\nexport const matchingPathname = (pathnames) =>\r\n    (location) =>\r\n        pathnames.some(pathname => location.pathname === pathname);\r\n","import * as singleSpa from \"single-spa\";\r\nimport { runScript } from \"./utils\";\r\nimport { config } from \"../constants\";\r\n\r\nconst loadReactApp = async () => {\r\n  // await runScript('http://localhost:3004/static/js/main.js');\r\n  await runScript(config.url.URL_MF_LEXON);\r\n  return window.lexon;\r\n};\r\n\r\nconst activityFunction = location => location.pathname.startsWith(\"/\");\r\n\r\nexport const registerLexonApp = () => {\r\n  singleSpa.registerApplication(\"lexon-app\", loadReactApp, activityFunction);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MaterialTitlePanel from \"./material_title_panel\";\r\nimport * as singleSpa from \"single-spa\";\r\nimport { registerLexonApp } from \"./lexonconn-app\";\r\n\r\nconst styles = {\r\n  sidebar: {\r\n    width: 319,\r\n    height: \"100%\"\r\n  },\r\n  sidebarLink: {\r\n    display: \"block\",\r\n    padding: \"16px 0px\",\r\n    color: \"#757575\",\r\n    textDecoration: \"none\"\r\n  },\r\n  divider: {\r\n    margin: \"8px 0\",\r\n    height: 1,\r\n    backgroundColor: \"#757575\"\r\n  },\r\n  content: {\r\n    padding: 0,\r\n    height: \"100%\",\r\n    backgroundColor: \"#fff\",\r\n    overflowY: \"hidden\"\r\n  }\r\n};\r\n\r\nexport class LexonComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      style: this.props.style\r\n        ? { ...styles.sidebar, ...this.props.style }\r\n        : styles.sidebar\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const status = singleSpa.getAppStatus(\"lexon-app\");\r\n      if (status === \"MOUNTED\") {\r\n        singleSpa.unloadApplication(\"lexon-app\", false);\r\n        singleSpa.start();\r\n      } else {\r\n        registerLexonApp();\r\n        singleSpa.start();\r\n      }\r\n    } catch (error) {\r\n      singleSpa.unloadApplication(\"lexon-app\", false);\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sidebarDocked } = this.props;\r\n    const { style } = this.state;\r\n\r\n    return (\r\n      <MaterialTitlePanel\r\n        title=\"LEX-ON\"\r\n        style={style}\r\n        sidebarDocked={sidebarDocked}\r\n      >\r\n        <div style={styles.content}>\r\n          <div id=\"lexon-app\"></div>\r\n        </div>\r\n      </MaterialTitlePanel>\r\n    );\r\n  }\r\n}\r\n\r\nLexonComponent.propTypes = {\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LexonComponent;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MaterialTitlePanel from \"./material_title_panel\";\r\n\r\nconst styles = {\r\n  sidebar: {\r\n    width: 319,\r\n    height: \"100%\"\r\n  },\r\n  sidebarLink: {\r\n    display: \"block\",\r\n    padding: \"16px 0px\",\r\n    color: \"#757575\",\r\n    textDecoration: \"none\"\r\n  },\r\n  divider: {\r\n    margin: \"8px 0\",\r\n    height: 1,\r\n    backgroundColor: \"#757575\"\r\n  },\r\n  content: {\r\n    padding: 0,\r\n    height: \"100%\",\r\n    backgroundColor: \"#fff\"\r\n  }\r\n};\r\n\r\nconst calendarContent = props => {\r\n  const style = props.style\r\n    ? { ...styles.sidebar, ...props.style }\r\n    : styles.sidebar;\r\n\r\n  const { sidebarDocked } = props;\r\n\r\n  return (\r\n    <MaterialTitlePanel\r\n      title=\"CALENDARIO\"\r\n      style={style}\r\n      sidebarDocked={sidebarDocked}\r\n    >\r\n      <div style={styles.content}>\r\n        <img border=\"0\" alt=\"Lefebvre\" src=\"assets/img/calendar-fake.png\"></img>\r\n      </div>\r\n    </MaterialTitlePanel>\r\n  );\r\n};\r\n\r\ncalendarContent.propTypes = {\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default calendarContent;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport Header from \"../header/Header\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport NotFound from \"../not-found/NotFound\";\r\nimport \"./main.scss\";\r\nimport MessageList from \"../content/message-list/MessageList\";\r\nimport MessageContent from \"../content/message-list/message-content/MessageContent\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { getLabels } from \"../sidebar/sidebar.actions\";\r\nimport ComposeMessage from \"../compose-message/ComposeMessage-fixed\";\r\nimport {\r\n  getLabelMessages,\r\n  emptyLabelMessages,\r\n  toggleSelected,\r\n  setPageTokens,\r\n  addInitialPageToken,\r\n  clearPageTokens,\r\n  setSearchQuery\r\n} from \"../content/message-list/actions/message-list.actions\";\r\nimport { selectLabel } from \"../sidebar/sidebar.actions\";\r\nimport { signOut } from \"../../api/authentication\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SidebarCnn from \"react-sidebar\";\r\nimport LexonComponent from \"../../apps/lexon_content\";\r\nimport CalendarComponent from \"../../apps/calendar_content\";\r\nimport \"react-reflex/styles.css\";\r\n\r\nimport { config, PROVIDER } from \"../../constants\";\r\n\r\nexport class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getLabelList = this.getLabelList.bind(this);\r\n    this.getLabelMessages = this.getLabelMessages.bind(this);\r\n    this.renderLabelRoutes = this.renderLabelRoutes.bind(this);\r\n    this.loadLabelMessages = this.loadLabelMessages.bind(this);\r\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n    this.addInitialPageToken = this.addInitialPageToken.bind(this);\r\n    this.onSignout = this.onSignout.bind(this);\r\n\r\n    //this.leftSidebarOpen = leftSidebarOpen;\r\n\r\n    this.state = {\r\n      isVisible: true,\r\n      fluid: true,\r\n      customAnimation: false,\r\n      slow: false,\r\n      size: 0.25,\r\n      sidebarOpen: false,\r\n      sidebarDocked: false,\r\n      leftSideBar: {\r\n        collapsed: false\r\n      },\r\n      sidebarComponent: (\r\n        <img border=\"0\" alt=\"Lefebvre\" src=\"assets/img/lexon-fake.png\"></img>\r\n      )\r\n    };\r\n\r\n    this.onSetSidebarDocked = this.onSetSidebarDocked.bind(this);\r\n    this.onSetSidebarOpenCalendar = this.onSetSidebarOpenCalendar.bind(this);\r\n    this.onSetSidebarOpenLexon = this.onSetSidebarOpenLexon.bind(this);\r\n    this.onSetSidebarOpenQMemento = this.onSetSidebarOpenQMemento.bind(this);\r\n    this.onSetSidebarOpenCompliance = this.onSetSidebarOpenCompliance.bind(\r\n      this\r\n    );\r\n    this.onSetSidebarOpenDatabase = this.onSetSidebarOpenDatabase.bind(this);\r\n    this.handleGetUserFromLexonConnector = this.handleGetUserFromLexonConnector.bind(\r\n      this\r\n    );\r\n\r\n    this.toggleSideBar = this.toggleSideBar.bind(this);\r\n  }\r\n\r\n  toggleSideBar() {\r\n    const toggleCollapsed = !this.state.leftSideBar.collapsed;\r\n    this.setState({\r\n      leftSideBar: {\r\n        collapsed: toggleCollapsed\r\n      }\r\n    });\r\n  }\r\n\r\n  //handleShowLeftSidebarClick() {\r\n  //    this.setState({\r\n  //        leftSidebarOpen: !this.leftSidebarOpen\r\n  //    })\r\n  //}\r\n\r\n  sendMessagePutUser(user) {\r\n    const { selectedMessages } = this.props;\r\n    const listMessages = selectedMessages.map(\r\n      selectedMessage => selectedMessage.id\r\n    );\r\n\r\n    window.dispatchEvent(\r\n      new CustomEvent(\"PutUserFromLexonConnector\", {\r\n        detail: {\r\n          user,\r\n          selectedMessageId: listMessages\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  handleGetUserFromLexonConnector() {\r\n    const { userId } = this.props.lexon;\r\n\r\n    // Comentar esto (es para pruebas)\r\n    // const userId = 120;\r\n    // Comentar esto (es para pruebas)\r\n\r\n    if (userId) {\r\n      this.sendMessagePutUser(userId);\r\n    }\r\n  }\r\n\r\n  onSetSidebarOpenCalendar(open) {\r\n    this.setState({\r\n      sidebarComponent: (\r\n        <CalendarComponent sidebarDocked={this.onSetSidebarDocked} />\r\n      )\r\n    });\r\n    this.setState({ sidebarDocked: open });\r\n  }\r\n\r\n  onSetSidebarOpenLexon(open) {\r\n    this.setState({\r\n      sidebarComponent: (\r\n        <LexonComponent sidebarDocked={this.onSetSidebarDocked} />\r\n      )\r\n    });\r\n    this.setState({ sidebarDocked: open });\r\n  }\r\n\r\n  onSetSidebarOpenQMemento(open) {\r\n    let lexon = (\r\n      <img border=\"0\" alt=\"Lefebvre\" src=\"assets/img/lexon-fake-null.png\"></img>\r\n    );\r\n    this.setState({ sidebarComponent: lexon });\r\n    this.setState({ sidebarDocked: open });\r\n  }\r\n\r\n  onSetSidebarOpenCompliance(open) {\r\n    let lexon = (\r\n      <img border=\"0\" alt=\"Lefebvre\" src=\"assets/img/lexon-fake-null.png\"></img>\r\n    );\r\n    this.setState({ sidebarComponent: lexon });\r\n    this.setState({ sidebarDocked: open });\r\n  }\r\n\r\n  onSetSidebarOpenDatabase(open) {\r\n    let lexon = (\r\n      <img border=\"0\" alt=\"Lefebvre\" src=\"assets/img/lexon-fake-null.png\"></img>\r\n    );\r\n    this.setState({ sidebarComponent: lexon });\r\n    this.setState({ sidebarDocked: open });\r\n  }\r\n\r\n  onSetSidebarDocked(open) {\r\n    this.setState({ sidebarDocked: open });\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* Label list is fetched from here \r\n    so that we can declare Routes by labelId \r\n    before rendering anything else */\r\n\r\n    this.getLabelList();\r\n\r\n    window.addEventListener(\"toggleClock\", function(event) {\r\n      alert(event.detail.name);\r\n    });\r\n    window.addEventListener(\r\n      \"GetUserFromLexonConnector\",\r\n      this.handleGetUserFromLexonConnector\r\n    );\r\n\r\n    const { userId } = this.props.lexon;\r\n    const { googleUser } = this.props;\r\n    const email = googleUser.w3.U3;\r\n    if (userId !== null && email !== null) {\r\n      const { googleUser } = this.props;\r\n      const email = googleUser.w3.U3;\r\n      const url = `${config.url.URL_UPDATE_DEFAULTACCOUNT}/${userId}/${PROVIDER}/${email}`;\r\n      fetch(url, {\r\n        method: \"GET\"\r\n      }).then(result => {\r\n        this.props.history.push(\"/inbox\");\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"GetUserFromLexonConnector\",\r\n      this.handleGetUserFromLexonConnector\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.signedInUser !== this.props.signedInUser) {\r\n      this.setState({\r\n        signedInUser: this.props.signedInUser\r\n      });\r\n    }\r\n\r\n    const { labels } = this.props.labelsResult;\r\n    const { pathname } = this.props.location;\r\n    const selectedLabel = labels.find(el => el.selected);\r\n    const labelPathMatch = labels.find(\r\n      el => el.id.toLowerCase() === pathname.slice(1)\r\n    );\r\n    if (!selectedLabel) {\r\n      if (labelPathMatch && this.props.searchQuery === \"\") {\r\n        this.props.selectLabel(labelPathMatch.id);\r\n      }\r\n    } else {\r\n      if (labelPathMatch && selectedLabel.id !== labelPathMatch.id) {\r\n        this.props.selectLabel(labelPathMatch.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  navigateToNextPage(token) {\r\n    const searchParam = this.props.location.search;\r\n    const currentToken =\r\n      searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : \"\";\r\n    this.props.setPageTokens({\r\n      prevPageToken: currentToken\r\n    });\r\n    this.props.history.push(token);\r\n  }\r\n\r\n  navigateToPrevPage(token) {\r\n    this.props.history.push(token);\r\n  }\r\n\r\n  loadLabelMessages(label) {\r\n    const currentSearchQuery = this.props.searchQuery;\r\n    this.props.clearPageTokens();\r\n    this.props.selectLabel(label.id);\r\n\r\n    const newPathToPush = `/${label.id.toLowerCase()}`;\r\n\r\n    if (currentSearchQuery && currentSearchQuery !== \"\") {\r\n      this.props.setSearchQuery(\"\");\r\n      const { pathname } = this.props.location;\r\n      if (newPathToPush === pathname) {\r\n        this.getLabelMessages({ labelIds: [label.id] });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.props.history.push(`/${label.id.toLowerCase()}`);\r\n  }\r\n\r\n  getLabelList() {\r\n    this.props.getLabels();\r\n  }\r\n\r\n  getLabelMessages({ labelIds, q, pageToken }) {\r\n    this.props.emptyLabelMessages();\r\n    this.props.getLabelMessages({ labelIds, q, pageToken });\r\n    //this.registerConnectorApp();\r\n  }\r\n\r\n  addInitialPageToken(token) {\r\n    this.props.addInitialPageToken(token);\r\n  }\r\n\r\n  renderLabelRoutes() {\r\n    const { leftSideBar } = this.state;\r\n    return this.props.labelsResult.labels.map(el => (\r\n      <Route\r\n        key={el.id + \"_route\"}\r\n        exact\r\n        path={\"/\" + el.id}\r\n        render={props => {\r\n          const that = this;\r\n          return (\r\n            <MessageList\r\n              {...props}\r\n              sideBarCollapsed={leftSideBar.collapsed}\r\n              sideBarToggle={this.toggleSideBar}\r\n              getLabelMessages={this.getLabelMessages}\r\n              messagesResult={this.props.messagesResult}\r\n              toggleSelected={this.props.toggleSelected}\r\n              navigateToNextPage={this.navigateToNextPage}\r\n              navigateToPrevPage={this.navigateToPrevPage}\r\n              pageTokens={this.props.pageTokens}\r\n              addInitialPageToken={this.addInitialPageToken}\r\n              parentLabel={that.props.labelsResult.labels.find(\r\n                el => el.id === props.match.path.slice(1)\r\n              )}\r\n              searchQuery={this.props.searchQuery}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    ));\r\n  }\r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSignout() {\r\n    console.log(\"IN ... onSignout\");\r\n    const { userId } = this.props.lexon;\r\n    const url = `${config.url.URL_RESET_DEFAULTACCOUNT}/${userId}`;\r\n    fetch(url, {\r\n      method: \"GET\"\r\n    })\r\n      .then(result => {\r\n        signOut();\r\n      })\r\n      .then(_ => {\r\n        const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user/${userId}/encrypt/0`;\r\n        window.open(urlRedirect, \"_self\");\r\n      });\r\n  }\r\n\r\n  renderInboxViewport() {\r\n    const { leftSideBar } = this.state;\r\n    const { lexon } = this.props;\r\n\r\n    if (this.props.labelsResult.labels.length < 1) {\r\n      return this.renderSpinner();\r\n    }\r\n\r\n    return (\r\n      <SidebarCnn\r\n        sidebar={this.state.sidebarComponent}\r\n        open={this.state.sidebarOpen}\r\n        pullRight={true}\r\n        docked={this.state.sidebarDocked}\r\n        styles={{\r\n          sidebar: {\r\n            background: \"white\",\r\n            zIndex: 100,\r\n            overflowY: \"hidden\",\r\n            WebkitTransition: \"-webkit-transform 0s\",\r\n            willChange: \"transform\"\r\n          },\r\n          content: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            overflowY: \"hidden\",\r\n            overflowX: \"hidden\",\r\n            WebkitOverflowScrolling: \"touch\",\r\n            transition: \"left .0s ease-out, right .0s ease-out\"\r\n          },\r\n          overlay: {\r\n            zIndex: 1,\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            opacity: 0,\r\n            visibility: \"hidden\",\r\n            //transition: \"opacity .3s ease-out, visibility .0s ease-out\",\r\n            backgroundColor: \"rgba(0,0,0,.3)\"\r\n          },\r\n          dragHandle: {\r\n            zIndex: 1,\r\n            position: \"fixed\",\r\n            top: 0,\r\n            bottom: 0\r\n          }\r\n        }}\r\n      >\r\n        <Fragment>\r\n          <Header\r\n            googleUser={this.props.googleUser}\r\n            onSignout={this.onSignout}\r\n            setSearchQuery={this.props.setSearchQuery}\r\n            getLabelMessages={this.getLabelMessages}\r\n            searchQuery={this.props.searchQuery}\r\n          />\r\n          <section className=\"main hbox space-between\">\r\n            <Sidebar\r\n              sideBarCollapsed={leftSideBar.collapsed}\r\n              sideBarToggle={this.toggleSideBar}\r\n              getLabelList={this.getLabelList}\r\n              pathname={this.props.location.pathname}\r\n              labelsResult={this.props.labelsResult}\r\n              onLabelClick={this.loadLabelMessages}\r\n              onSidebarCloseClick={this.handleShowLeftSidebarClick}\r\n            />\r\n            <article className=\"d-flex flex-column position-relative\">\r\n              <Switch>\r\n                {this.renderLabelRoutes()}\r\n                <Route\r\n                  exact\r\n                  path=\"/compose\"\r\n                  component={() => (\r\n                    <ComposeMessage\r\n                      history={this.props.history}\r\n                      sideBarCollapsed={leftSideBar.collapsed}\r\n                      sideBarToggle={this.toggleSideBar}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route exact path=\"/notfound\" component={NotFound} />\r\n                <Route\r\n                  exact\r\n                  path=\"/:id([a-zA-Z0-9]+)\"\r\n                  component={() => (\r\n                    <MessageContent\r\n                      sideBarCollapsed={leftSideBar.collapsed}\r\n                      sideBarToggle={this.toggleSideBar}\r\n                    />\r\n                  )}\r\n                />\r\n              </Switch>\r\n            </article>\r\n\r\n            <div className=\"productpanel\">\r\n              <span className=\"productsbutton\">\r\n                <div onClick={() => this.onSetSidebarOpenLexon(true)}>\r\n                  <img\r\n                    className={lexon.user ? \"imgproduct\" : \"imgproductdisable\"}\r\n                    border=\"0\"\r\n                    alt=\"Lex-On\"\r\n                    src=\"assets/img/icon-lexon.png\"\r\n                  ></img>\r\n                </div>\r\n              </span>\r\n              <span className=\"productsbutton\">\r\n                <div onClick={() => this.onSetSidebarOpenCalendar(true)}>\r\n                  <img\r\n                    className=\"imgproduct\"\r\n                    border=\"0\"\r\n                    alt=\"Calendar\"\r\n                    src=\"assets/img/icon-calendar.png\"\r\n                  ></img>\r\n                </div>\r\n              </span>\r\n              <span className=\"productsbutton\">\r\n                <div onClick={() => this.onSetSidebarOpenQMemento(true)}>\r\n                  <img\r\n                    className=\"imgproductdisable\"\r\n                    border=\"0\"\r\n                    alt=\"Calendar\"\r\n                    src=\"assets/img/icon-qmemento.png\"\r\n                  ></img>\r\n                </div>\r\n              </span>\r\n              <span className=\"productsbutton\">\r\n                <div onClick={() => this.onSetSidebarOpenCompliance(true)}>\r\n                  <img\r\n                    className=\"imgproductdisable\"\r\n                    border=\"0\"\r\n                    alt=\"Calendar\"\r\n                    src=\"assets/img/icon-compliance.png\"\r\n                  ></img>\r\n                </div>\r\n              </span>\r\n              {/* <span className=\"productsbutton\">\r\n                <button\r\n                  onClick={() => this.onSetSidebarDocked(false)}\r\n                  className=\"btn compose-btn\"\r\n                >\r\n                  <img\r\n                    className=\"\"\r\n                    border=\"0\"\r\n                    alt=\"Calendar\"\r\n                    src=\"assets/img/icon-close-empty.png\"\r\n                  ></img>\r\n                </button>\r\n              </span> */}\r\n              <span className=\"spaceproduct\"></span>\r\n            </div>\r\n          </section>\r\n        </Fragment>\r\n      </SidebarCnn>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.renderInboxViewport();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  labelsResult: state.labelsResult,\r\n  messagesResult: state.messagesResult,\r\n  pageTokens: state.pageTokens,\r\n  searchQuery: state.searchQuery,\r\n  lexon: state.lexon,\r\n  selectedMessages: state.messageList.selectedMessages\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      getLabels,\r\n      getLabelMessages,\r\n      emptyLabelMessages,\r\n      toggleSelected,\r\n      selectLabel,\r\n      setPageTokens,\r\n      addInitialPageToken,\r\n      clearPageTokens,\r\n      setSearchQuery\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport GoogleButton from \"react-google-button\";\r\n\r\nexport class Login extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center\">\r\n        <div className=\"mx-auto\">\r\n          <GoogleButton\r\n            onClick={this.props.onSignIn}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport GoogleButton from \"react-google-button\";\r\n\r\nexport class Authenticating extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center\">\r\n        <div className=\"mx-auto\">\r\n          <GoogleButton\r\n            label='Signing in...'\r\n            disabled\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Authenticating;\r\n","export const mountScripts = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://apis.google.com/js/api.js\";\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => {\r\n      script.onload = () => {};\r\n      resolve();\r\n    };\r\n    script.onreadystatechange = () => {\r\n      if (script.readyState === \"complete\") script.onload();\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport Main from \"./components/main/Main\";\r\nimport Login from \"./components/login/Login\";\r\nimport Authenticating from \"./components/authenticating/Authenticating\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { signIn, checkSignInStatus } from \"./api/authentication\";\r\nimport { mountScripts } from \"./api/scripts\";\r\nimport {\r\n  SIGNED_OUT,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_IN_PROGRESS\r\n} from \"./constants\";\r\nimport { getStateStorage } from \"./localstorage\";\r\nimport ACTIONS from \"./actions/lexon\";\r\n\r\nclass AppContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signInStatus: SIGNED_OUT,\r\n      googleUser: undefined\r\n    };\r\n\r\n    this.init = this.init.bind(this);\r\n    this.initClient = this.initClient.bind(this);\r\n    this.onSignout = this.onSignout.bind(this);\r\n    this.onSignInSuccess = this.onSignInSuccess.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.match.params.id;\r\n    const stateStorageLexon = getStateStorage();\r\n    if (!user && stateStorageLexon) {\r\n      const userLexon = stateStorageLexon.lexon;\r\n      if (userLexon && userLexon.user) {\r\n        this.props.setUser(userLexon.user);\r\n      }\r\n    }\r\n\r\n    const { isNewAccount } = this.props.lexon;\r\n    if (!isNewAccount) {\r\n      mountScripts().then(this.init);\r\n    }\r\n\r\n    this.props.location.pathname = \"/inbox\";\r\n  }\r\n\r\n  init() {\r\n    window.gapi.load(\"client:auth2\", this.initClient);\r\n  }\r\n\r\n  initClient() {\r\n    checkSignInStatus()\r\n      .then(this.onSignInSuccess)\r\n      .catch(_ => {\r\n        this.setState({\r\n          signInStatus: AUTH_FAIL\r\n        });\r\n      });\r\n  }\r\n\r\n  onSignout() {\r\n    this.props.signOut();\r\n  }\r\n\r\n  onSignIn() {\r\n    signIn().then(this.onSignInSuccess);\r\n  }\r\n\r\n  onSignInSuccess(googleUser) {\r\n    this.setState({\r\n      signInStatus: AUTH_SUCCESS,\r\n      googleUser\r\n    });\r\n  }\r\n\r\n  renderView() {\r\n    const { signInStatus } = this.state;\r\n\r\n    if (signInStatus === AUTH_SUCCESS) {\r\n      return <Main googleUser={this.state.googleUser} />;\r\n    } else if (signInStatus === AUTH_IN_PROGRESS) {\r\n      return <Authenticating />;\r\n    } else {\r\n      return <Login onSignIn={this.onSignIn} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment>{this.renderView()}</React.Fragment>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lexon: state.lexon\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUser: user => dispatch(ACTIONS.setUser(user))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppContainer);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ACTIONS from \"../../actions/lexon\";\r\nimport { mountScripts } from \"../../api/scripts\";\r\nimport { checkSignInStatus, signOut } from \"../../api/authentication\";\r\n\r\nclass UserLexon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      readyToRedirect: false\r\n    };\r\n\r\n    this.init = this.init.bind(this);\r\n    this.initClient = this.initClient.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.match.params.id;\r\n    this.props.setUser(user);\r\n\r\n    const isNewAccount = user.slice(2, 3) === \"1\" ? true : false;\r\n    if (isNewAccount) {\r\n      mountScripts().then(this.init);\r\n    } else {\r\n      this.setState({\r\n        readyToRedirect: true\r\n      });\r\n    }\r\n  }\r\n\r\n  init() {\r\n    window.gapi.load(\"client:auth2\", this.initClient);\r\n  }\r\n\r\n  initClient() {\r\n    checkSignInStatus()\r\n      .then(_ => {\r\n        this.onSignout();\r\n        this.setState({\r\n          readyToRedirect: true\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error === undefined) {\r\n          this.setState({\r\n            readyToRedirect: true\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignout() {\r\n    signOut();\r\n  }\r\n\r\n  render() {\r\n    const { readyToRedirect } = this.state;\r\n    if (readyToRedirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lexon: state.lexon\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUser: user => dispatch(ACTIONS.setUser(user))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserLexon);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport AppContainer from \"./AppContainer\";\r\nimport UserLexon from \"./components/user-lexon/UserLexon\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/user/:id\" component={UserLexon} />\r\n          <Route path=\"/\" component={AppContainer} />\r\n          {/* <AppContainer /> */}\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./store\";\r\n\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"./services/i18n\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore}>\r\n    <I18nextProvider i18n={i18n}>\r\n      <App />\r\n    </I18nextProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}