{"version":3,"sources":["constants/index.jsx","actions/settings.actions.jsx","reducers/settings.reducers.jsx","api/utils.jsx","api/index.jsx","components/content/message-list/actions/message-list.actions.jsx","components/sidebar/sidebar.actions.jsx","components/sidebar/sidebar.reducers.jsx","components/content/message-list/reducers/message-list.reducers.jsx","lex-on_connector/actions/lex-on_message-list.actions.jsx","lex-on_connector/reducers/lex-on_message-list.reducrers.jsx","reducers/rootReducer.jsx","reducers/gapi.reducers.jsx","services/i18n.js","components/header/Header.jsx","utils/index.jsx","components/compose-message/ComposeMessage.jsx","components/sidebar/LabelItem.jsx","components/sidebar/Sidebar.jsx","lex-on_connector/lex-on_connector.jsx","components/not-found/NotFound.jsx","components/common/Checkbox.jsx","components/content/message-list/message-row/MessageCheckbox.jsx","components/content/message-list/message-row/NameSubjectFields.jsx","components/content/message-list/message-row/AttachmentDateFields.jsx","components/content/message-list/message-row/MessageRow.jsx","components/content/message-list/pager-buttons/PagerButtons.jsx","components/content/message-list/list-toolbar/ListActionButtons.jsx","components/content/message-list/list-toolbar/ListToolbar.jsx","components/content/message-list/list-footer/ListFooter.jsx","components/content/message-list/MessageList.jsx","components/content/message-list/message-toolbar/MessageToolbar.jsx","components/content/message-list/message-content/MessageContent.jsx","api/authentication.jsx","components/main/Main.jsx","components/login/Login.jsx","components/authenticating/Authenticating.jsx","AppContainer.jsx","api/scripts.jsx","App.js","serviceWorker.js","index.js","store.jsx"],"names":["SIGNED_OUT","config","url","URL_UPDATE_DEFAULTACCOUNT","URL_RESET_DEFAULTACCOUNT","URL_SELECT_ACCOUNT","storeUser","userId","dispatch","type","defaultSettings","getBody","message","mimeType","encodedBody","parts","body","data","getHTMLPart","replace","decodeURIComponent","escape","window","atob","arr","x","length","base64MimeType","encoded","result","mime","match","getLabelDetails","labelList","Promise","resolve","reject","labelPromises","labels","map","el","labelId","id","gapi","client","gmail","users","get","then","response","all","flattenMessagesWithLabel","messages","labelIds","label","messagesTotal","getMessageRawList","_ref2","maxResults","pageToken","_ref2$q","q","list","Object","objectSpread","catch","err","getMessageHeaders","messageResult","headerPromises","getMessageHeader","format","metadataHeaders","getMessage","messageId","payload","attach","str","doc","DOMParser","parseFromString","Array","from","childNodes","some","node","nodeType","isHTML","headers","messageHeaders","undefined","error","ADD_MESSAGE","DELETE_MESSAGE","DELETE_LIST_MESSAGES","ADD_LIST_MESSAGES","getLabelMessages","_ref","getState","setMessageListLoadInProgress","searchQuery","selectLabel","labelMessagesDetails","getMessageList","setPageTokens","nextPageToken","setSearchQuery","tokens","emptyLabelMessages","toggleSelected","messageIds","selected","getEmailMessage","setMessageLoadInProgress","addInitialPageToken","token","clearPageTokens","modifyMessages","ids","_ref2$addLabelIds","addLabelIds","_ref2$removeLabelIds","removeLabelIds","_ref4","_ref4$addLabelIds","_ref4$removeLabelIds","batchModify","modifiedIds","addMessage","content","deleteMessage","deleteListMessages","listMessages","addListMessages","getLabels","defaultLabelState","defaultMessagesState","loading","pageTokens","defaultEmailMessageResult","failed","defaultMessageList","selectedMessages","combineReducers","signedOutReducer","state","arguments","signInStatusResult","action","status","currentUser","labelsResult","console","log","messagesResult","stateClone","toConsumableArray","indexOf","push","filter","emailMessageResult","_action$payload","objectWithoutProperties","prevPageToken","messageList","findIndex","concat","_loop","i","index","splice","_loop2","lexonMessageListReducer","i18n","use","XHR","init","lng","navigator","language","fallbackLng","ns","defaultNS","backend","loadPath","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","useSuspense","Header","_PureComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","handleSearchClick","_handleOnClick","performSearch","debounce","toggle","toggleMenu","dropdownOpen","dropdownMenuOpen","inherits","createClass","key","value","e","fetch","method","r","json","urlRedirect","open","setState","evt","searhQuery","target","searchParams","userInfo","googleUser","w3","email","U3","fullName","ig","picUrl","Paa","react_default","a","createElement","className","Link","to","border","alt","src","placeholder","onChange","onClick","index_es","icon","faSearch","reactstrap_es","navbar","href","nav","isOpen","right","divider","header","tag","title","onSignout","PureComponent","connect","bindActionCreators","getValidEmails","emailInput","trim","regex","emails","split","test","getNameEmail","m","name","exec","slice","Uppy","require","Tus","GoogleDrive","DragDrop","Dashboard","DashboardModal","ProgressBar","Compose","displayModal","cc","bcc","subject","showInlineDashboard","uppyPreviews","showModal","closeModal","handleChange","sendEmail","setField","uppy","autoProceed","debug","endpoint","serverUrl","reader","FileReader","handleModalClick","uploadFile","addFileToState","on","successful","file","onload","readerEvt","base64","readAsDataURL","close","reset","_this2","validTo","To","join","Subject","attachments","validCc","Cc","validBcc","Bcc","Fileattached","_ref3","headersClone","mimetype","fileData","fileName","encodedEmail","unescape","encodeURIComponent","send","resource","raw","btoa","sendMessage","_","resetFields","field","_this3","trimValue","defineProperty","fieldValue","t","Fragment","React","cloneElement","children","size","overflow-y","onOpened","onModalOpened","backdrop","centered","addonType","tabIndex","invalid","isInvalid","lib_default","color","faTrash","item","width","height","hideAfterFinish","min-height","withTranslation","LabelItem","_this$props","messagesUnread","iconProps","messagesUnreadLocale","toLocaleString","assign","Sidebar","selectedLabel","pathname","navigateToList","find","onLabelClick","reduce","acc","labelGroups","groupBy","visibleLabels","sortedLabels","user","labelListVisibility","sortBy","renderFolders","system","renderLabels","folders","faInbox","faEnvelope","faExclamationCircle","sidebar_LabelItem","faCircle","backgroundColor","ComposeMessage","react_perfect_scrollbar_lib_default","component","renderItems","LexonConnector","_Component","toggleClock","timerID","clearInterval","running","setInterval","tick","date","Date","handleEnter","handleKeyPress","handleCheckAllclick","dispatchEvent","CustomEvent","detail","addEventListener","removeEventListener","event","chkselected","clockStateClass","toLocaleTimeString","Component","compose","withRouter","NotFound","faExclamationTriangle","Checkbox","isChecked","checked","prevProps","MessageCheckbox","common_Checkbox","NameSubjectFields","fromName","AttachmentDateFields","hasAttachment","faPaperclip","formattedDate","MessageItem","onSelectionChange","history","fallbackDateObj","messageDate","moment","isValid","parserFn","nowDate","year","receivedHeader","toUpperCase","getFormattedDate","internalDate","parseInt","unread","subjectHeader","fromHeader","getFromName","PagerButtons","useTranslation","navigateToPrevPage","disabled","prevToken","faChevronLeft","navigateToNextPage","nextToken","faChevronRight","ListActionButtons","getClickHandler","trashHandler","MessageToolbar","selectedMessageIds","actionParams","list_toolbar_ListActionButtons","Footer","apply","totalLabel","ViewMode","LIST","CONTENT","EDIT","MessageList","viewMode","contentMessageId","currentLabel","renderView","renderMessages","searchParam","location","search","parentLabel","prevState","msgId","faSpinner","spin","renderSpinner","MessageRow","renderEditView","currentToken","tokenIndex","_this$getPageTokens","getPageTokens","ListToolbar","list_footer_ListFooter","replyTo","nameEmail","parsedDate","replyHeader","composeProps","faReply","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","getAttachments","messageID","callback","attachId","attachmentId","execute","attachment","filename","addAttachmentElement","blobUrl","aLink","document","linkText","createTextNode","appendChild","download","style","textDecoration","padding","margin","clear","addAttachmentContainer","aDiv","whiteSpace","display","Img","imgPath","aImg","verticalAlign","addAttachmentImg","MessageContent","errorMessage","iframeRef","createRef","modifyMessage","params","modal","current","contentWindow","fontFamily","fontSize","innerHTML","iframe","getElementById","Divider","addDivDivider","contentDocument","urlBlob","Attachment","URL","createObjectURL","AttachmentDiv","Redirect","goBack","message_toolbar_MessageToolbar","renderErrorModal","ref","checkSignInStatus","apiKey","process","clientId","discoveryDocs","scope","googleAuthInstance","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","Ab","Main","getLabelList","renderLabelRoutes","loadLabelMessages","isVisible","fluid","customAnimation","slow","alert","signedInUser","labelPathMatch","toLowerCase","currentSearchQuery","newPathToPush","registerApplication","__webpack_require__","startsWith","start","registerConnectorApp","Route","exact","path","render","that","message_list_MessageList","signOut","reload","header_Header","react_reflex_dist_es","orientation","maxSize","minSize","propagateDimensionsRate","propagateDimensions","flex","sidebar_Sidebar","propagate","Switch","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","lex_on_connector","renderInboxViewport","Login","react_google_button_es","onSignIn","Authenticating","AppContainer","signInStatus","updateDefaultAccount","fetchUpdateDefaultAccount","userIdisNull","initClient","onSignInSuccess","script","async","defer","onreadystatechange","readyState","constants","load","signIn","main_Main","authenticating_Authenticating","login_Login","App","BrowserRouter","Boolean","hostname","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","dist_es","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c497e256.chunk.js","sourcesContent":["export const SIGNED_OUT = 'SIGNED_OUT';\nexport const SIGNED_IN = 'SIGNED_IN';\nexport const AUTH_IN_PROGRESS = 'AUTH_IN_PROGRESS';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_SIGNED_OUT = 'AUTH_SIGNED_OUT';\nexport const PROVIDER = 'GOOGLE';\n\nconst dev = {\n    url: {\n        URL_UPDATE_DEFAULTACCOUNT: 'http://localhost:3500/api/accounts/defaultaccount',\n        URL_RESET_DEFAULTACCOUNT: 'http://localhost:3500/api/accounts/resetdefaultaccount',\n        URL_SELECT_ACCOUNT: 'http://localhost:3000'     \n    }\n}\n\nconst prod = {\n    url: {\n        URL_UPDATE_DEFAULTACCOUNT: 'https://lefebvreservernode.azurewebsites.net/api/accounts/defaultaccount',\n        URL_RESET_DEFAULTACCOUNT: 'https://lefebvreservernode.azurewebsites.net/api/accounts/resetdefaultaccount',\n        URL_SELECT_ACCOUNT: 'https://Lefebvrerootapp'\n    }\n}\n\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\n\nexport const MAX_RESULTS = 20;","export const STORE_USER = 'STORE_USER';\r\n\r\nexport const storeUser = (userId) => dispatch => {\r\n    dispatch({\r\n        type: STORE_USER,\r\n        userId\r\n    });\r\n};","import { STORE_USER } from \"../actions/settings.actions\";\r\n\r\nconst defaultSettings = {\r\n    userId: ''\r\n};\r\n\r\nexport const storeUser = (state = defaultSettings, action) => {\r\n    switch (action.type) {\r\n        case STORE_USER:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            };      \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n  ","\n\nexport const getBody = (message, mimeType) => {\n  let encodedBody = \"\";\n  if (typeof message.parts === \"undefined\") {\n    encodedBody = message.body.data;\n  } else {\n    encodedBody = getHTMLPart(message.parts, mimeType);\n  }\n  encodedBody = encodedBody\n    .replace(/-/g, \"+\")\n    .replace(/_/g, \"/\")\n    .replace(/\\s/g, \"\");\n  return decodeURIComponent(escape(window.atob(encodedBody)));\n};\n\nconst getHTMLPart = (arr, mimeType) => {\n  for (let x = 0; x < arr.length; x++) {\n    if (typeof arr[x].parts === \"undefined\") {\n      if (arr[x].mimeType === mimeType) {\n        return arr[x].body.data;\n      }\n    } else {\n      return getHTMLPart(arr[x].parts, mimeType);\n    }\n  }\n  return \"\";\n};\n\nexport const isHTML = str => {\n  const doc = new DOMParser().parseFromString(str, \"text/html\");\n  return Array.from(doc.body.childNodes).some(node => node.nodeType === 1);\n}\n\nexport const base64MimeType = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n\r\n    if (mime && mime.length) {\r\n        result = mime[1];\r\n    }\r\n\r\n    return result;\r\n}\n\nexport const base64Data = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var data = encoded.split(\"base64,\")[1];\r\n\r\n    return data;\r\n}","import { MAX_RESULTS } from \"../constants\";\nimport { getBody, isHTML, base64MimeType, base64Data } from './utils';\n\nconst getLabelDetailPromise = labelId => {\n  return new Promise((resolve, reject) => {\n    window.gapi.client.gmail.users.labels\n      .get({\n        userId: \"me\",\n        id: labelId\n      })\n      .then(response => resolve(response));\n  });\n};\n\nconst getLabelDetails = labelList => {\n  return new Promise((resolve, reject) => {\n    const labelPromises = labelList.result.labels.map(el => {\n      return getLabelDetailPromise(el.id);\n    });\n\n    Promise.all(labelPromises).then(response => resolve(response));\n  });\n};\n\nexport const getLabelList = () =>\n  new Promise((resolve, reject) => {\n    window.gapi.client.gmail.users.labels\n      .list({\n        userId: \"me\"\n      })\n      .then(getLabelDetails)\n      .then(response => {\n        resolve(response.map(el => el.result));\n      });\n  });\n\nexport const getMessageList = ({ labelIds, maxResults, q, pageToken }) =>\n  new Promise((resolve, reject) => {\n    getMessageRawList({ labelIds, maxResults, pageToken, q })\n      .then(getMessageHeaders)\n      .then(messageResult =>\n        flattenMessagesWithLabel(messageResult.messages, labelIds).then(\n          labelMessagesDetails => resolve({\n            ...messageResult,\n            messages: labelMessagesDetails.messages,\n            label: labelMessagesDetails.label\n          })\n        )\n      )\n      .catch(err => {\n        reject(err);\n      });\n  });\n\nexport const flattenMessagesWithLabel = (messages, labelIds) =>\n  new Promise((resolve, reject) => {\n\n    if (!labelIds) {\n      resolve({\n        messages,\n        label: {\n          result: {\n            messagesTotal: 0\n          }\n        }\n      });\n      return;\n    }\n\n    window.gapi.client.gmail.users.labels\n      .get({\n        userId: \"me\",\n        id: labelIds[0]\n      })\n      .then(response =>\n        resolve({\n          messages,\n          label: response\n        })\n      );\n  });\n\nconst getMessageRawList = ({ labelIds, maxResults, pageToken, q = \"\" }) =>\n  new Promise((resolve, reject) => {\n    window.gapi.client.gmail.users.messages\n      .list({\n        userId: \"me\",\n        q,\n        maxResults: maxResults || MAX_RESULTS,\n        ...(labelIds && {labelIds}),\n        ...(pageToken && { pageToken })\n      })\n      .then(response => resolve(response))\n      .catch(err => {\n        reject(err);\n      });\n  });\n\nconst getMessageHeaders = response => {\n  const messageResult = response.result;\n\n  return new Promise((resolve, reject) => {\n    const headerPromises = (messageResult.messages || []).map(el => {\n      return getMessageHeader(el.id);\n    });\n\n    Promise.all(headerPromises).then(messages =>\n      resolve({\n        ...messageResult,\n        messages\n      })\n    );\n  });\n};\n\nconst getMessageHeader = id => {\n  return new Promise((resolve, reject) => {\n    window.gapi.client.gmail.users.messages\n      .get({\n        userId: \"me\",\n        id: id,\n        format: \"metadata\",\n        metadataHeaders: [\n          \"Delivered-To\",\n          \"X-Received\",\n          \"To\",\n          \"Message-ID\",\n          \"Date\",\n          \"Content-Type\",\n          \"MIME-Version\",\n          \"Reply-To\",\n          \"From\",\n          \"Subject\",\n          \"Return-Path\",\n          // See https://www.iana.org/assignments/message-headers/message-headers.xhtml\n          // for more headers\n        ]\n      })\n      .then(response => resolve(response.result));\n  });\n};\r\n\n\nexport const getMessage = messageId => {\n  return new Promise((resolve, reject) => {\n    window.gapi.client.gmail.users.messages\n      .get({\n        userId: \"me\",\n        id: messageId,\n        format: \"full\"\n      })\n      .then(response => {\n        const { result } = response;\n\n        let body = getBody(result.payload, \"text/html\");\n        let attach = result.payload.parts;   \r\n        \n        if (body === \"\") {\n          body = getBody(result.payload, \"text/plain\");\n          body = body.replace(/(\\r\\n)+/g, '<br data-break=\"rn-1\">').replace(/[\\n\\r]+/g, '<br data-break=\"nr\">');\n        }\n\n        if (body !== \"\" && !isHTML(body)) {\n          body = body.replace(/(\\r\\n)+/g, '<div data-break=\"rn-1\" style=\"margin-bottom:10px\"></div>').replace(/[\\n\\r]+/g, '<br data-break=\"nr\">');\n        }\n          \n        resolve({\n            body,\n            attach,\n          headers: response.headers,\n          result: { ...result, messageHeaders: response.result.payload.headers, payload: undefined }\n        });\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\n\n// Insert file attachments from Google Drive\r\nfunction getAttachments_(ids) {\r\n    var att = [];\r\n    for (var i in ids) {\r\n        var file = ids;\r\n        att.push({\r\n            mimeType: file.type(),\r\n            fileName: file.name(),\r\n            //bytes: Utilities.base64Encode(file.getBlob().getBytes())\r\n        });\r\n    }\r\n    return att;\r\n}\n\n\n\n\nexport const sendMessage = ({ headers, body, attachments }) => {\n\n    let email = \"\";\n\n    const headersClone = { ...headers };\n    headersClone[\"MIME-Version\"] = \"1.0\";    \n    headersClone[\"Content-Type\"] = \"multipart/mixed; boundary=\" + \"alternative\";   \n\n    for (let header in headersClone) {\n        email += `${header}: ${headersClone[header]}\\r\\n`;\n    }\n\n    email += `\\r\\n`;\n    email += `--alternative\\r\\n`;\n    email += `Content-Type: multipart/alternative; boundary = \"attached\"\\r\\n`;\r\n    email += `\\r\\n`;\r\n\r\n    email += `--attached\\r\\n`;\n    email += `Content-Type: text/plain; charset = \"iso-8859-1\"\\r\\n`;\n    email += `Content-Transfer-Encoding: quoted-printable\\r\\n`;\n\n    //text plain\n    email += `\\r\\n`;\n    email += `${body}\\r\\n`;\r\n    email += `\\r\\n`;\n\n    email += `--attached\\r\\n`;\n    email += `Content-Type: text/html; charset = \"iso-8859-1\"\\r\\n`;\r\n    email += `Content-Transfer-Encoding: quoted-printable\\r\\n`;\r\n\r\n    //HTML\r\n    email += `\\r\\n`;\r\n    email += `\\r\\n<html><head></head><body>${body}</body></html>\\r\\n`;\r\n    email += `\\r\\n`;   \r\n\r\n    email += `--attached--\\r\\n`; \n\n    for (var i = 0; i < headersClone.attachments.length; i++) {              \r\n                   \r\n        var mimetype = base64MimeType(headersClone.attachments[i].base64);  \r\n        var fileData = base64Data(headersClone.attachments[i].base64); \r\n        var fileName = headersClone.attachments[i].file.name;\r\n\r\n        console.log(mimetype); // \"image/png\"\r\n        console.log(fileData); // \"ZXN0byBlcyB1bmEgcHJ1ZWJhIGJhc2ljYQ==\"\r\n\r\n        email += `--alternative\\r\\n`;                  \r\n\r\n        email += `Content-Type: ${mimetype}\\r\\n`;\r\n\r\n        email += `Content-Transfer-Encoding: base64\\r\\n`;\r\n                 \r\n        email += `Content-Disposition: attachment; filename = \"${fileName}\"\\r\\n`; \r\n\r\n        email += `${fileData}\\r\\n`;  \n    } \r\n   \n    email += `--alternative--\\r\\n`;\n\n    const encodedEmail = unescape(encodeURIComponent(email));\n\n    return window.gapi.client.gmail.users.messages.send({\n        userId: \"me\",\n        resource: {\n            raw: window.btoa(encodedEmail).replace(/\\+/g, \"-\").replace(/\\//g, \"_\")\n        }\n    });\n};\n\n//export const base64MimeType = ( encoded ) => {\r\n//    var result = null;\r\n\r\n//    if (typeof encoded !== 'string') {\r\n//        return result;\r\n//    }\r\n\r\n//    var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n\r\n//    if (mime && mime.length) {\r\n//        result = mime[1];\r\n//    }\r\n\r\n//    return result;\r\n//}\n\n//export const base64Data = ( encoded ) => {\r\n//    var result = null;\r\n\r\n//    if (typeof encoded !== 'string') {\r\n//        return result;\r\n//    }\r\n\r\n//    var data = encoded.split(\"base64,\")[1];      \r\n\r\n//    return data;\r\n//}\n\n//export const base64Data = ({ encoded }) => {\n//    return encoded.split(\"base64,\")[1];\n//}\n\n//function base64Data(encoded) {\r\n//    return encoded.split(\"base64,\")[1];\r\n//}\r\n\n\nexport const batchModify = ({ids, addLabelIds = [], removeLabelIds = []}) => new Promise((resolve, reject) => {\n  window.gapi.client.gmail.users.messages\n    .batchModify({\n      userId: \"me\",\n      ids,\n      addLabelIds,\n      removeLabelIds\n    })\n    .then(response =>\n      {\n        resolve(ids)\n      }\n    );\n});\n","import { getMessageList } from \"../../../../api\";\nimport { getMessage } from \"../../../../api\";\nimport { batchModify } from \"../../../../api\";\nimport { selectLabel } from \"../../../sidebar/sidebar.actions\";\n\nexport const GET_MESSAGES = \"GET_MESSAGES\";\nexport const GET_MESSAGES_LOAD_IN_PROGRESS = \"GET_MESSAGES_LOAD_IN_PROGRESS\";\nexport const GET_MESSAGES_FAILED = 'GET_MESSAGES_FAILED';\nexport const TOGGLE_SELECTED = \"TOGGLE_SELECTED\";\nexport const MESSAGE_LOAD_IN_PROGRESS = \"MESSAGE_LOAD_IN_PROGRESS\";\nexport const MESSAGE_LOAD_SUCCESS = \"MESSAGE_LOAD_SUCCESS\";\nexport const MESSAGE_LOAD_FAIL = \"MESSAGE_LOAD_FAIL\";\nexport const EMPTY_MESSAGES = \"EMPTY_MESSAGES\";\nexport const SET_PAGE_TOKENS = \"SET_PAGE_TOKENS\";\nexport const ADD_INITIAL_PAGE_TOKEN = \"ADD_INITIAL_PAGE_TOKEN\";\nexport const CLEAR_PAGE_TOKENS = \"CLEAR_PAGE_TOKENS\";\nexport const MODIFY_MESSAGES_SUCCESS = \"MODIFY_MESSAGES_SUCCESS\";\nexport const MODIFY_MESSAGES_FAILED = \"MODIFY_MESSAGES_FAILED\";\nexport const SET_SEARCH_QUERY = \"SET_SEARCH_QUERY\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_LIST_MESSAGES = \"DELETE_LIST_MESSAGES\";\nexport const ADD_LIST_MESSAGES = \"ADD_LIST_MESSAGES\";\n\nexport const getLabelMessages = ({\n  labelIds,\n  q = \"\",\n  pageToken\n}) => (dispatch, getState) => {\n  dispatch(setMessageListLoadInProgress());\n\n  const state = getState();\n  const {searchQuery} = state;\n\n  if (searchQuery !== \"\") {\n    dispatch(selectLabel(\"-1\"));\n  }\n\n  getMessageList({ labelIds, maxResults: 20, q: searchQuery, pageToken }).then(response => {\n    dispatch({\n      type: GET_MESSAGES,\n      payload: response\n    });\n\n    dispatch(setPageTokens({\n      nextPageToken: response.nextPageToken || \"\"\n    }));\n    \n  }).catch(err => {\n    dispatch({\n      type: GET_MESSAGES_FAILED,\n      payload: err\n    })\n  });\n};\n\nexport const setSearchQuery = q => ({\n  type: SET_SEARCH_QUERY,\n  payload: q\n})\n\nexport const setPageTokens = tokens => ({\n  type: SET_PAGE_TOKENS,\n  payload: tokens\n});\n\nexport const emptyLabelMessages = () => ({\n  type: EMPTY_MESSAGES\n});\n\nexport const toggleSelected = (messageIds, selected) => ({\n  type: TOGGLE_SELECTED,\n  payload: {\n    messageIds,\n    selected\n  }\n});\n\nexport const getEmailMessage = messageId => dispatch => {\n  dispatch(setMessageLoadInProgress());\n  getMessage(messageId)\n    .then(response => {\n      dispatch({\n        type: MESSAGE_LOAD_SUCCESS,\n        payload: response\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: MESSAGE_LOAD_FAIL,\n        payload: error\n      });\n    });\n};\n\nconst setMessageLoadInProgress = () => ({\n  type: MESSAGE_LOAD_IN_PROGRESS\n});\n\nconst setMessageListLoadInProgress = () => ({\n  type: GET_MESSAGES_LOAD_IN_PROGRESS\n});\n\nexport const addInitialPageToken = token => ({\n  type: ADD_INITIAL_PAGE_TOKEN,\n  payload: token\n})\n\nexport const clearPageTokens = () => ({\n  type: CLEAR_PAGE_TOKENS\n})\n\nexport const modifyMessages = ({ids, addLabelIds = [], removeLabelIds = []}) => dispatch => {\n  batchModify({ids, addLabelIds, removeLabelIds})\n    .then(modifiedIds => {\n      dispatch({\n       type: MODIFY_MESSAGES_SUCCESS,\n       payload: {modifiedIds, addLabelIds, removeLabelIds}\n      })\n    })\n    .catch(error => {\n      dispatch({\n       type: MODIFY_MESSAGES_FAILED\n      })\n    })\n}\n\nexport const addMessage = (messageId) => dispatch => {\n  const data = {\n      id: messageId,\n      content: messageId\n  };\n\n  dispatch({\n      type: ADD_MESSAGE,\n      data\n  });\n};\n\nexport const deleteMessage = (messageId) => dispatch => {\n  const data = {\n      id: messageId,\n      content: messageId\n  };\n\n  dispatch({\n      type: DELETE_MESSAGE,\n      data     \n  });\n};\n\nexport const deleteListMessages = (listMessages) => dispatch => {\n  dispatch({\n      type: DELETE_LIST_MESSAGES,\n      listMessages\n  });    \n};\n\nexport const addListMessages = (listMessages) => dispatch => {\n  dispatch({\n      type: ADD_LIST_MESSAGES,\n      listMessages\n  });    \n};\n\n","import { getLabelList } from \"../../api\";\nimport { setSearchQuery } from \"../content/message-list/actions/message-list.actions\";\n\nexport const GET_LABELS = \"GET_LABELS\";\nexport const SELECT_LABEL = \"SELECT_LABEL\";\n\n\nexport const getLabels = () => dispatch => {\n  getLabelList().then(labelList => {\n    dispatch({\n      type: GET_LABELS,\n      payload: labelList\n    });\n  });\n};\n\nexport const selectLabel = (labelId) => dispatch => {\n  //dispatch(setSearchQuery(\"\"));\n  dispatch({\n    type: SELECT_LABEL,\n    payload: labelId\n  });\n};","import { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\n\nconst defaultLabelState = {\n    labels: []\n}\n\nexport const labelsResult = (state = defaultLabelState, action) => {\n  switch (action.type) {\n    case GET_LABELS:\n    console.log(action.payload);\n      return {\n        ...state,\n        labels: action.payload\n      };\n    case SELECT_LABEL:\n      return {\n        ...state, \n        labels: state.labels.map(el => {\n          if (el.id === action.payload) {\n            return {\n              ...el, \n              selected: true\n            }\n          }\n          return {\n            ...el, \n            selected: false\n          };\n        })\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MESSAGES,\n  GET_MESSAGES_FAILED,\n  TOGGLE_SELECTED,\n  MESSAGE_LOAD_IN_PROGRESS,\n  MESSAGE_LOAD_SUCCESS,\n  MESSAGE_LOAD_FAIL,\n  GET_MESSAGES_LOAD_IN_PROGRESS,\n  EMPTY_MESSAGES,\n  SET_PAGE_TOKENS,\n  ADD_INITIAL_PAGE_TOKEN,\n  CLEAR_PAGE_TOKENS,\n  MODIFY_MESSAGES_SUCCESS,\n  SET_SEARCH_QUERY,\n  ADD_MESSAGE,\n  DELETE_MESSAGE,\n  DELETE_LIST_MESSAGES,\n  ADD_LIST_MESSAGES\n} from \"../actions/message-list.actions\";\n\nconst defaultMessagesState = {\n  messages: [],\n  loading: true,\n  pageTokens: []\n};\n\nexport const messagesResult = (state = defaultMessagesState, action) => {\n  switch (action.type) {\n    case GET_MESSAGES:\n      const stateClone = {...state};\n      stateClone.nextPageToken = null;\n      const pageTokens = [...stateClone.pageTokens];\n      const nextPageToken = action.payload.nextPageToken;\n      if (nextPageToken && pageTokens.indexOf(nextPageToken) === -1) {\n        pageTokens.push(nextPageToken);\n      }\n      return {\n        ...stateClone,\n        ...action.payload,\n        loading: false,\n        pageTokens: pageTokens\n      };\n    case GET_MESSAGES_FAILED: {\n      return {\n        ...state,\n        loading: false,\n        failed: true,\n        error: action.payload\n      }\n    }\n    case EMPTY_MESSAGES:\n      return {...state, messages: []};\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\n      return {\n        ...state,\n        label: null,\n        nextPageToken: null,\n        loading: true\n      }\n    case TOGGLE_SELECTED:\n      return {\n        ...state,\n        messages: state.messages.map(el => {\n          if (action.payload.messageIds.indexOf(el.id) > -1) {\n            return { ...el, selected: action.payload.selected };\n          }\n          return el;\n        })\n      };\n    case ADD_INITIAL_PAGE_TOKEN:\n      return {\n        ...state,\n        pageTokens: [action.payload]\n      }\n    case CLEAR_PAGE_TOKENS:\n      return {\n        ...state,\n        pageTokens: []\n      }\n    case MODIFY_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        messages: state.messages.filter(el => action.payload.modifiedIds.indexOf(el.id) === -1)\n      }\n    default:\n      return state;\n  }\n};\n\nexport const pageTokens = (\n  state = { prevPageToken: \"\", nextPageToken: \"\" },\n  action\n) => {\n  switch (action.type) {\n    case SET_PAGE_TOKENS:\n      return {...state, ...action.payload};\n    default:\n      return state;\n  }\n};\n\nconst defaultEmailMessageResult = {\n  body: \"\",\n  loading: false,\n  failed: false\n};\n\nexport const emailMessageResult = (\n  state = defaultEmailMessageResult,\n  action\n) => {\n  switch (action.type) {\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\n    case MESSAGE_LOAD_IN_PROGRESS:\n      return { ...state, body: \"\", loading: true, failed: false };\n    case MESSAGE_LOAD_SUCCESS:\n      const {body, ...rest} = action.payload;\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n        failed: false\n      };\n    case MESSAGE_LOAD_FAIL:\n      return {\n        ...state,\n        loading: false,\n        failed: true,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport const searchQuery = (state = \"\", action) => {\n  switch(action.type) {\n    case SET_SEARCH_QUERY:\n      return action.payload\n    default:\n      return state;\n  }\n}\n\nconst defaultMessageList = {\n  selectedMessages: []\n};\n\nexport function messageList(state = defaultMessageList, action) {\n  switch(action.type) {\n      case ADD_MESSAGE: {\n          const index = state.selectedMessages.findIndex(message => message.id === action.data.id)\n          if (index === -1) {\n              return {\n                  ...state,\n                  selectedMessages: [...state.selectedMessages, action.data]                    \n              }\n          }\n          return state;     \n      }\n\n      case DELETE_MESSAGE: {\n          return {\n              ...state,\n              selectedMessages: state.selectedMessages.filter(message => message.id !== action.data.id)\n          }         \n      }\n\n      case DELETE_LIST_MESSAGES: {\n          for (let i=0; i < action.listMessages.length; i++) {\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\n              if (index > -1) {\n                  state.selectedMessages.splice(index, 1);\n              }    \n          }\n          return {\n              ...state,\n              selectedMessages: state.selectedMessages            }     \n      }\n\n      case ADD_LIST_MESSAGES: {\n          for (let i=0; i < action.listMessages.length; i++) {\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\n              if (index === -1) {\n                  const data = {id: action.listMessages[i], content: action.listMessages[i]}\n                  state.selectedMessages.push(data);\n              }    \n          }\n          return {\n              ...state,\n              selectedMessages: state.selectedMessages\n          }     \n      }\n\n      default: return state;\n  }\n}","export const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\r\nexport const DELETE_LIST_MESSAGES = \"DELETE_LIST_MESSAGES\";\r\nexport const ADD_LIST_MESSAGES = \"ADD_LIST_MESSAGES\";\r\n\r\nexport const addMessage = (messageId) => dispatch => {\r\n    const data = {\r\n        id: messageId,\r\n        content: messageId\r\n    };\r\n\r\n    dispatch({\r\n        type: ADD_MESSAGE,\r\n        data\r\n    });\r\n};\r\n\r\nexport const deleteMessage = (messageId) => dispatch => {\r\n    const data = {\r\n        id: messageId,\r\n        content: messageId\r\n    };\r\n\r\n    dispatch({\r\n        type: DELETE_MESSAGE,\r\n        data     \r\n    });\r\n};\r\n\r\nexport const deleteListMessages = (listMessages) => dispatch => {\r\n    dispatch({\r\n        type: DELETE_LIST_MESSAGES,\r\n        listMessages\r\n    });    \r\n};\r\n\r\nexport const addListMessages = (listMessages) => dispatch => {\r\n    dispatch({\r\n        type: ADD_LIST_MESSAGES,\r\n        listMessages\r\n    });    \r\n};\r\n","import {\r\n    ADD_MESSAGE,\r\n    DELETE_MESSAGE,\r\n    DELETE_LIST_MESSAGES,\r\n    ADD_LIST_MESSAGES\r\n} from \"../actions/lex-on_message-list.actions\";\r\n\r\nconst defaultMessageList = {\r\n    selectedMessages: []\r\n};\r\n\r\nexport function lexonMessageListReducer(state = defaultMessageList, action) {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE: {\r\n            const index = state.selectedMessages.findIndex(message => message.id === action.data.id)\r\n            if (index === -1) {\r\n                return {\r\n                    ...state,\r\n                    selectedMessages: [...state.selectedMessages, action.data]                    \r\n                }\r\n            }\r\n            return state;     \r\n        }\r\n\r\n        case DELETE_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                selectedMessages: state.selectedMessages.filter(message => message.id !== action.data.id)\r\n            }         \r\n        }\r\n\r\n        case DELETE_LIST_MESSAGES: {\r\n            for (let i=0; i < action.listMessages.length; i++) {\r\n                const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\r\n                if (index > -1) {\r\n                    state.selectedMessages.splice(index, 1);\r\n                }    \r\n            }\r\n            return {\r\n                ...state,\r\n                selectedMessages: state.selectedMessages            }     \r\n        }\r\n\r\n        case ADD_LIST_MESSAGES: {\r\n            for (let i=0; i < action.listMessages.length; i++) {\r\n                const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\r\n                if (index === -1) {\r\n                    const data = {id: action.listMessages[i], content: action.listMessages[i]}\r\n                    state.selectedMessages.push(data);\r\n                }    \r\n            }\r\n            return {\r\n                ...state,\r\n                selectedMessages: state.selectedMessages\r\n            }     \r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\nimport { signedOutReducer } from \"./gapi.reducers\";\nimport { signInStatusResult } from \"./gapi.reducers\";\nimport { storeUser } from \"./settings.reducers\";\n\nimport { labelsResult } from \"../components/sidebar/sidebar.reducers\";\nimport { messagesResult, emailMessageResult, pageTokens, searchQuery, messageList } from \"../components/content/message-list/reducers/message-list.reducers\";\nimport { lexonMessageListReducer } from \"../lex-on_connector/reducers/lex-on_message-list.reducrers.jsx\";\n\nexport default combineReducers({\n  signedOutReducer,\n  signInStatusResult,\n  storeUser,\n  labelsResult,\n  messagesResult,\n  emailMessageResult,\n  pageTokens,\n  searchQuery,\n  messageList,\n  lexonMessageListReducer\n});\n","import {\n  SIGNED_OUT,\n  SIGNED_IN,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  AUTH_IN_PROGRESS,\n  AUTH_SIGNED_OUT\n} from \"../constants\";\n\nexport const signedOutReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SIGNED_OUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const signInStatusResult = (state = {}, action) => {\n  switch (action.type) {\n    case AUTH_IN_PROGRESS:\n      return {\n        ...state,\n        status: AUTH_IN_PROGRESS\n      };\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        status: AUTH_SUCCESS,\n        currentUser: action.payload.currentUser\n      };\n    case AUTH_FAIL:\n      return {\n        ...state,\n        status: AUTH_FAIL\n      };\n    case SIGNED_IN:\n      return { ...action.payload };\n    case SIGNED_OUT:\n    return {\n        ...state,\n        status: AUTH_SIGNED_OUT,\n        currentUser: {}\n      };\n    default:\n      return state;\n  }\n};\n","import i18n from 'i18next';\r\nimport XHR from 'i18next-xhr-backend';\r\n\r\nconst userLanguage = () => navigator.language;\r\n\r\ni18n\r\n  .use(XHR)\r\n  .init({\r\n    lng: userLanguage(),\r\n    fallbackLng: 'en',\r\n    ns: ['isotope'],\r\n    defaultNS: 'isotope',\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/{{ns}}.json'\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: 'languageChanged loaded',\r\n      bindStore: 'added removed',\r\n      nsMode: 'default',\r\n      useSuspense: false,\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { PureComponent } from \"react\";\nimport \"./header.scss\";\n//import Signout from \"../signout/Signout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport debounce from \"lodash/debounce\";\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\n\nimport { config } from \"../../constants\";\nimport { storeUser } from \"../../actions/settings.actions\";\n\nexport class Header extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this._handleOnClick = this._handleOnClick.bind(this);\n        this.performSearch = debounce(this.performSearch.bind(this), 1000);\n\n        this.toggle = this.toggle.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.state = {\n            dropdownOpen: false,\n            dropdownMenuOpen: false,\n        };\n    }\n\n    _handleOnClick(e) {\n        const userId = this.props.userId;\n        if (userId !== '' && userId !== undefined) {\n            const url = `${config.url.URL_RESET_DEFAULTACCOUNT}/${userId}`;\n            fetch(url, {\n                method:'POST'\n            })\n            .then(r => r.json())\n            .then(result => {\n                console.log(result);\n                const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user/${userId}/encrypt/0`;\n                window.open(urlRedirect, '_self');\n            });            \n        }\n        else {\n            const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user`;\n            window.open(urlRedirect, '_self');\n        }\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    toggleMenu() {\n        this.setState({\n            dropdownMenuOpen: !this.state.dropdownMenuOpen,\n        });\n    }\n\n    handleSearchClick(evt) {\n        if (this.props.searhQuery !== \"\") {\n            this.performSearch();\n        }\n    }\n\n    handleInputChange(evt) {\n        this.props.setSearchQuery(evt.target.value);\n        this.performSearch();\n    }\n\n    performSearch() {\n        const searchParams = {}\n        if (!this.props.searchQuery || this.props.searchQuery === \"\") {\n            searchParams.labelIds = [\"INBOX\"];\n        }\n        this.props.getLabelMessages({ ...searchParams })\n    }\n\n    render() {\n        const userInfo = this.props.googleUser.w3;\n        const email = userInfo.U3;\n        const fullName = userInfo.ig;\n        const picUrl = userInfo.Paa;\n\n        return (\n            <header className=\"d-flex p-3 align-content-center align-items-center header \">\n                <div className=\"justify-content-left\">\n                    <Link to=\"/inbox\"><img border=\"0\" alt=\"lefebvre\" src=\"assets/img/lefebvre-logo.png\"></img></Link>\n                </div>\n                <div className=\"header-logo justify-content-center\">\n                    {/*<Link to=\"/inbox\"><img border=\"0\" alt=\"gmail\" src=\"assets/img/logo-elderecho.png\"></img></Link>*/}\n                    <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"otulook\" src=\"assets/img/gmail.png\"></img></Link>      \n                </div>\n                <div className=\"header-search\">\n                    <div className=\"input-group w-75 ml-1 mr-auto\">\n                        <input\n                            type=\"search\"\n                            className=\"form-control search\"\n                            placeholder=\"Search mail\"\n                            value={this.props.searchQuery}\n                            onChange={this.handleInputChange}\n                        />\n                        <div className=\"input-group-append\" onClick={this.handleSearchClick}>\n                            <button\n                                className=\"btn btn-light  bg-white text-dark btn-search\"\n                                type=\"button\"\n                            >\n                                <FontAwesomeIcon icon={faSearch} />\n                            </button>\n                        </div>\n                    </div>\n                    {/*<div className=\"header-logo justify-content-center\">\n                        <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"otulook\" src=\"assets/img/gmail.png\"></img></Link>                       \n                    </div>*/}\n                    <div>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem className=\"d-md-down-none\">\n                                <NavLink href=\"#\"><i className=\"icon-location-pin\"></i></NavLink>\n                            </NavItem>\n                            <Dropdown nav isOpen={this.state.dropdownMenuOpen} toggle={this.toggleMenu}>\n                                <DropdownToggle nav>\n                                    <img className=\"img-menu\" src=\"assets/img/menu.png\" alt=\"\" />\n                                </DropdownToggle>\n                                <DropdownMenu right>                                   \n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Calendar</DropdownItem>\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> File Manager</DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem><i className=\"fa fa-lock\"></i><span onClick={this._handleOnClick}> Return to Lex-on</span></DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </Nav>\n                    </div>   \n                    <div>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem className=\"d-md-down-none\">\n                                <NavLink href=\"#\"><i className=\"icon-location-pin\"></i></NavLink>\n                            </NavItem>\n                            <Dropdown nav isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                                <DropdownToggle nav>\n                                    <img className=\"mx-2 profile-pic img-circle\" src={picUrl} alt=\"\" />\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem header tag=\"div\" className=\"text-center\"><strong title={email}>{fullName}</strong></DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Add Account</DropdownItem>\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Create Account</DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem onClick={this.props.onSignout}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </Nav>\n                    </div> \n                </div>                \n            </header>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userId: state.storeUser.userId\n    }    \n};  \n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      storeUser\n    },\n    dispatch\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n\n// export default Header;\n","export const getValidEmails = (emailInput) => {\n  let result = [];\n  if (!emailInput || emailInput.trim() === '') {\n    return result;\n  }\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\n\n  for (let i = 0; i < emails.length; i++) {\n    const e = emails[i];\n    if (e === '') {continue;}\n\n    if (regex.test(e)) {\n      result.push(e);\n    }\n    else {\n      result = [];\n      break;\n    }\n  }\n  \n  return result;\n}\n\nexport const getNameEmail = (value) => {\n  if (!value) {return null;}\n  \n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\n  let m, name, email;\n  if ((m = regex.exec(value)) !== null) {\n    email = m[2];\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\n  }\n  return { name, email };\n}","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport { sendMessage } from \"../../api\";\nimport { getValidEmails } from \"../../utils\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport ReactQuill from \"react-quill\";\nimport \"../../../node_modules/react-quill/dist/quill.snow.css\";\nimport \"./composeMessage.scss\";\n\n\n//import '@uppy/core/dist/style.css'\n//import '@uppy/drag-drop/dist/style.css'\n\nconst Uppy = require('@uppy/core')\nconst Tus = require('@uppy/tus')\nconst GoogleDrive = require('@uppy/google-drive')\nconst { Dashboard, DashboardModal, DragDrop, ProgressBar } = require('@uppy/react')\n\n\nexport class Compose extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayModal: false,\n      to: props.to || \"\",\n      cc: props.cc || \"\",\n      bcc: props.bcc || \"\",\n      subject: props.subject || \"\",\n      content: props.content || \"\",       \n      showInlineDashboard: false,\n      open: false,\n      uppyPreviews: []       \n    };   \n\n    this.showModal = this.showModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendEmail = this.sendEmail.bind(this);\n    this.setField = this.setField.bind(this);\n\n\n      this.uppy = new Uppy({ id: 'uppy1', autoProceed: false, debug: true })\n          .use(Tus, { endpoint: 'https://master.tus.io/files/' })\n          .use(GoogleDrive, { serverUrl: 'https://companion.uppy.io' })\n          \n      this.reader = new FileReader();      \n\n      //this.uppy2 = new Uppy({ id: 'uppy2', autoProceed: false, debug: true })\n      //    .use(Tus, { endpoint: 'https://master.tus.io/files/' }) \n          \n\n      this.handleModalClick = this.handleModalClick.bind(this)\n\n      this.uploadFile = this.uploadFile.bind(this);\n      this.addFileToState = this.addFileToState.bind(this);\n\n      this.uppy.on('complete', (result) => {\n          console.log('Upload complete! We�ve uploaded these files:', result.successful)\n      })\n\n\n\n      this.uppy.on('file-added', (file) => {\n          console.log('Added file', file);  \n          this.reader.onload = (readerEvt) =>\n          this.addFileToState({ file, base64: readerEvt.target.result });\n          // Define this onload every time to get file and base64 every time\n          this.reader.readAsDataURL(file.data);\n      });      \n      \n    \n    }  \n\n    addFileToState({ file, base64 }) {\n        this.setState({ uppyPreviews: [{ file, base64 }, ...this.state.uppyPreviews] });\n    }\n\n    uploadFile() {\n        console.log(this.state.uppyPreviews);\n        // this.uppyOne.upload();\n    }\n\n\n    componentWillUnmount() {\n        this.uppy.close()      \n    }\n\n    handleModalClick() {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    \n\n  showModal() {\n    this.setState({\n      displayModal: true\n    });   \n\n  }\n\n  closeModal() {\n    this.setState({\n      displayModal: false\n    });\n      this.uppy.close();\n      this.state.uppyPreviews = [];\n      this.uppy.reset();\n  }\n\n  \n\n  handleChange(value) {\n      this.setState({ content: value });      \n\n  }\n\n    sendEmail() {                 \n        \n    const validTo = getValidEmails(this.state.to);\n\n    if (\n      !validTo.length ||\n      this.state.subject.trim() === \"\" ||\n      this.state.content === \"\"\n    ) {\n      return;\n    }\n\n    const headers = {\n      To: validTo.join(\", \"),\n      Subject: this.state.subject,\n      attachments: this.state.uppyPreviews\n    };\n\n    const validCc = getValidEmails(this.state.cc);\n    if (validCc.length) {\n      headers.Cc = validCc.join(\", \");\n    }\n\n    const validBcc = getValidEmails(this.state.bcc);\n    if (validBcc.length) {\n      headers.Bcc = validBcc.join(\", \");\n    }\n\n     const Fileattached = this.state.uppyPreviews;      \n\n  sendMessage({\n      headers,\n      body: this.state.content,\n      attachments: Fileattached\n      \n    }).then(_ => {      \n      this.closeModal();\n      this.resetFields();\n    });\n\n    this.closeModal();\n  }\n\n  resetFields() {\n    this.setState({\n      to: this.props.to || \"\",\n      cc: this.props.cc || \"\",\n      bcc: this.props.bcc || \"\",\n      subject: this.props.subject || \"\",\n      content: this.props.content || \"\",\n      uppyPreviews: []\n    });\n  }\n\n  setField(field, trimValue = true) {\n    return evt => {\n      this.setState({\n        [field]: trimValue ? evt.target.value.trim() : evt.target.value \n      });\n    };\n  }\n\n  isInvalid(field) {\n    const fieldValue = this.state[field].trim();\n    return fieldValue.length > 0 && !getValidEmails(fieldValue).length;\n  }\n\n  \n    render() {\n        const { showInlineDashboard } = this.state;\n        const { t } = this.props;\n\n    return (\n      <React.Fragment>\n        {\n          React.cloneElement(this.props.children, {\n            onClick: this.showModal\n          })\n        }\n        {this.state.displayModal ? (\n          <Modal          \n            isOpen={this.state.displayModal}\n            className=\"compose-dialog\"\n            size=\"lg\"\n            overflow-y= \"initial !important\"\n            onOpened={this.onModalOpened}\n            backdrop=\"static\"\n            centered={true}\n          >\n            <ModalHeader toggle={this.closeModal}>{t('compose-message.compose-message')}</ModalHeader>\n            <ModalBody>\n              <div className=\"message-fields\">\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">{t('compose-message.to')}</InputGroupAddon>\n                  <Input\n                    tabIndex={1}\n                    value={this.state.to}\n                    placeholder={t('compose-message.comma-separated')}\n                    invalid={this.isInvalid(\"to\")}\n                    onChange={this.setField(\"to\")}\n                  />\n                </InputGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">Cc:</InputGroupAddon>\n                  <Input\n                    tabIndex={2}\n                    value={this.state.cc}\n                    placeholder={t('compose-message.comma-separated')}\n                    invalid={this.isInvalid(\"cc\")}\n                    onChange={this.setField(\"cc\")}\n                  />\n                </InputGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">Bcc:</InputGroupAddon>\n                  <Input\n                    tabIndex={3}\n                    placeholder={t('compose-message.comma-separated')}\n                    invalid={this.isInvalid(\"bcc\")}\n                    onChange={this.setField(\"bcc\")}\n                  />\n                </InputGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    {t('compose-message.subject')}\n                  </InputGroupAddon>\n                  <Input\n                    tabIndex={4}\n                    placeholder=\"\"\n                    value={this.state.subject}\n                    onChange={this.setField(\"subject\", false)}\n                  />\n                </InputGroup>\n              </div>\n              <div className=\"editor-wrapper\">\n                <ReactQuill\n                  tabIndex={5}\n                  value={this.state.content}\n                  onChange={this.handleChange}\n                />\n              </div>  \n                                           \n            </ModalBody>                  \n            <ModalFooter className=\"footer\">\n              <Button\n                className=\"mr-auto font-weight-bold\"\n                size=\"lg\"\n                color=\"primary\"\n                onClick={this.sendEmail}\n                title={t('compose-message.send-message')}\n              >\n                {t('compose-message.send')}\n              </Button>{\" \"}            \n                            \n              <Button title={t('compose-message.discard')} color=\"light\" onClick={this.closeModal}>\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n                        \n            </ModalFooter> \n                    <div className=\"ImagePreviewContainer\">\n                        {\n                            this.state.uppyPreviews.map(\n                                item => {\n                                    return (                                       \n                                        <object className=\"FileList\"\n                                            key={item.file.id}\n                                            type={item.file.type}\n                                            width=\"80px\"\n                                            height=\"auto\"\n                                            data={item.base64}                                            \n                                        >\n                                            {item.file.name}\n                                        </object>\n                                    );\n                                }\n                            )\n                        }\n                    </div>\n                    <ProgressBar\n                        uppy={this.uppy}\n                        hideAfterFinish={false}\n                    />\n                    <div id=\"Divfooter\">                       \n                        <DragDrop\n                            uppy={this.uppy}\n                            width='100%'\n                            height='130px'\n                            min-height='130px'\n                     />\n                       \n                    </div>\n                     \n          </Modal>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withTranslation()(Compose);\n","import React, { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport class LabelItem extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n\n  }\n\n  onClick(evt) {\n    this.props.onClick(evt, this.props.id);\n  }\n\n  render() {\n    const {name, messagesUnread} = this.props;\n    const iconProps = this.props.iconProps;\n\n    let selected = this.props.selected ? \" selected\" : \"\";\n\n    const messagesUnreadLocale = messagesUnread.toLocaleString();\n    return (\n      <li\n        className={`text-truncate text-left text-dark pl-4 pr-5 py-2 border-0 ${selected}`}\n        title={\n          name + (messagesUnread > 0 ? ` (${messagesUnreadLocale})` : \"\")\n        }\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon size=\"sm\" {...iconProps} />\n        {name}\n\n        {messagesUnread > 0 ? (\n          <div className={\"msg-count\"}>{messagesUnreadLocale}</div>\n        ) : null}\n      </li>\n    );\n  }\n}\n\nexport default LabelItem;\n","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport ComposeMessage from \"../compose-message/ComposeMessage\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport groupBy from \"lodash/groupBy\";\nimport sortBy from \"lodash/sortBy\";\n\nimport {\n  faInbox,\n  faEnvelope,\n  faTrash,\n  faCircle,\n  faExclamationCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport LabelItem from \"./LabelItem\";\n\nimport \"./sidebar.scss\";\n\nexport class Sidebar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLabel: props.pathname\n    };\n\n    //this.renderLabels = this.renderLabels.bind(this);\n    this.navigateToList = this.navigateToList.bind(this);\n  }\n\n  componentDidMount() {\n    //this.props.getLabelList(); //.then(labels => {});\n    /*  */\n    //this.props.getLabelMessages();\n  }\n\n  navigateToList(evt, labelId) {\n    const label = this.props.labelsResult.labels.find(el => el.id === labelId);\n    this.props.onLabelClick(label || { id: \"\" });\n  }\n\n  renderItems(labelList) {\n    if (labelList.length === 0) {\n      return <div />;\n    }\n\n    const labels = labelList.reduce((acc, el) => {\n      acc.push(el);\n      return acc;\n    }, []);\n\n      const labelGroups = groupBy(labels, \"type\");\n      var visibleLabels=[];\n      var sortedLabels = [];\n\n      if (labelGroups.user != null) {      \n          visibleLabels = labelGroups.user.filter(\n              el =>\n                  //el.labelListVisibility === \"labelShow\" ||\n                  //el.labelListVisibility === \"labelShowIfUnread\" ||\n                  !el.labelListVisibility || true\n          );\n         sortedLabels = sortBy(visibleLabels, \"name\");\n      }\n\n    return (\n      <React.Fragment>\n        {this.renderFolders(labelGroups.system)}\n        {this.renderLabels(sortedLabels)}\n      </React.Fragment>\n    );\n  }\n\n  renderFolders(labels) {\n    const { t } = this.props;\n\n    const inboxLabel = {\n      ...labels.find(el => el.id === \"INBOX\"),\n      name: t('sidebar.inbox'),\n      icon: faInbox\n    };\n    const sentLabel = {\n      ...labels.find(el => el.id === \"SENT\"),\n      messagesUnread: 0,\n      name: t('sidebar.sent'),\n      icon: faEnvelope\n    };\n    const trashLabel = {\n      ...labels.find(el => el.id === \"TRASH\"),\n      messagesUnread: 0,\n      name: t('sidebar.trash'),\n      icon: faTrash\n    };\n    const spamLabel = {\n      ...labels.find(el => el.id === \"SPAM\"),\n      name: t('sidebar.spam'),\n      icon: faExclamationCircle\n    };\n\n    const folders = [inboxLabel, sentLabel, trashLabel, spamLabel];\n\n    return (\n      <React.Fragment>\n        <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\n          {t('sidebar.folders')}\n        </li>\n        {folders.map(el => {\n          const iconProps = { icon: el.icon, size: \"lg\" };\n          return (\n            <LabelItem\n              key={el.id + \"_label\"}\n              onClick={this.navigateToList}\n              name={el.name}\n              id={el.id}\n              messagesUnread={el.messagesUnread}\n              iconProps={iconProps}\n              selected={el.selected}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  renderLabels(labels) {\n    const { t } = this.props;\n\n    return (\n      <React.Fragment>\n        <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\n          {t('sidebar.labels')}\n        </li>\n        {labels.map(el => {\n          const iconProps = {\n            icon: faCircle,\n            color: el.color ? el.color.backgroundColor : \"gainsboro\",\n            size: \"sm\"\n          };\n          return (\n            <LabelItem\n              key={el.id + \"_label\"}\n              onClick={this.navigateToList}\n              name={el.name}\n              id={el.id}\n              messagesUnread={el.messagesUnread}\n              iconProps={iconProps}\n              selected={el.selected}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    \n    return (\n      <nav className=\"d-flex flex-column text-truncate left-panel\">\n        <div className=\"compose-panel\">\n          <div className=\"d-flex justify-content-center p-2 compose-btn\">\n            <ComposeMessage\n              subject=\"\"\n              to=\"\"\n            >\n                <button className=\"btn btn btn-outline-secondary uppercase align-self-center w-75 font-weight-bold uppercase\">\n                {t('sidebar.compose')}\n              </button>\n            </ComposeMessage>\n          </div>\n        </div>\n        <PerfectScrollbar\n          component=\"ul\"\n          className=\"d-flex flex-column border-0 m-0 sidebar\"\n        >\n          {this.renderItems(this.props.labelsResult.labels)}\n        </PerfectScrollbar>\n      </nav>\n    );\n  }\n}\n\n//export default Sidebar;\nexport default withTranslation()(Sidebar);\n","import React, {Component} from 'react'\r\nimport './main.scss';\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { addMessage, deleteMessage, deleteListMessages, addListMessages } from \"./actions/lex-on_message-list.actions.jsx\";\r\n\r\nexport class LexonConnector extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            running : true,\r\n            date: new Date(),\r\n            message: 'Seleccione elemento/s de la lista'\r\n        };\r\n\r\n        this.handleEnter = this.handleEnter.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.handleCheckAllclick = this.handleCheckAllclick.bind(this);\r\n    } \r\n\r\n    sendMessage() {  \r\n        window.dispatchEvent(new CustomEvent(\"toggleClock\", {\r\n            detail: { name: \"John\" }\r\n        }));\r\n    }\r\n\r\n    toggleClock = () => {\r\n        if (this.timerID) {\r\n            clearInterval(this.timerID);\r\n            this.timerID = undefined;\r\n            this.setState(() => ({\r\n                running: false\r\n            }))\r\n        } else {\r\n            this.setState(() => ({\r\n                running: true\r\n            }));\r\n            this.timerID = setInterval(\r\n                () => this.tick(),\r\n                1000\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n\r\n        window.addEventListener(\"Checkclick\", this.handleKeyPress);\r\n        window.addEventListener(\"CheckAllclick\", this.handleCheckAllclick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        window.removeEventListener(\"Checkclick\", this.handleKeyPress);\r\n        window.removeEventListener(\"CheckAllclick\", this.handleCheckAllclick);\r\n    }\r\n\r\n    tick() {\r\n        this.setState(() => ({\r\n            date: new Date()\r\n        }));\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        this.setState({           \r\n            message: event.detail.name + \" Selected: \" + event.detail.chkselected\r\n        });\r\n        \r\n        event.detail.chkselected ? this.props.addMessage(event.detail.name) : this.props.deleteMessage(event.detail.name);\r\n        this.handleEnter(event);\r\n    }\r\n\r\n    handleEnter(event) {\r\n        this.setState({           \r\n            message: event.detail.name + \" Selected: \" + event.detail.chkselected\r\n        });\r\n\r\n//        addMessage(event.detail.name);\r\n    }\r\n\r\n    handleCheckAllclick(event) {\r\n        event.detail.chkselected ? this.props.addListMessages(event.detail.listMessages) : this.props.deleteListMessages(event.detail.listMessages);\r\n    }\r\n\r\n    render() {\r\n        const clockStateClass = this.state.running ? 'clock--running' : 'clock--paused';\r\n        \r\n        return (\r\n            <div id=\"main-lexon-connector\" className={`clock ${clockStateClass}`}>\r\n                <h1>LEX-ON Connector DEV mode!!!</h1>\r\n                <h2 className='clock__time'>It is {this.state.date.toLocaleTimeString()}</h2> \r\n                {/*<img height=\"120px\" border=\"0\" alt=\"gears\" src=\"assets/img/settings-gears.svg\"></img>*/}\r\n                <p>\r\n                    {/*<button onClick={this.sendMessage}>\r\n                      Send a message to Multi-channel mail box\r\n                   </button>*/}\r\n                </p>\r\n                <p>{this.state.message}</p> \r\n\r\n                <h1>Lista de Mensajes</h1>\r\n                { \r\n                    this.props.selectedMessages.map((message) => (\r\n                        <div key={ message.id }>\r\n                            { message.content }\r\n                        </div>\r\n                ))}\r\n\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedMessages: state.lexonMessageListReducer.selectedMessages\r\n    }    \r\n};  \r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      addMessage,\r\n      deleteMessage,\r\n      deleteListMessages,\r\n      addListMessages\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(LexonConnector);\r\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default () => {\n  return (\n    <div className=\"d-flex w-100 h-100 flex-column justify-content-center align-items-center\">\n    <div>\n      <FontAwesomeIcon icon={faExclamationTriangle} size=\"5x\" />\n    </div>\n      <div className=\"h1\">404 ERROR</div>\n      <div>The requested content was not found.</div>\n    </div>\n  );\n};\n","import React, {PureComponent} from 'react';\nimport './checkbox.scss';\n\nexport class Checkbox extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChecked: !!props.checked\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.checked !== this.props.checked) {\n      this.setState({\n        isChecked: this.props.checked\n      })\n    }\n  }\n\n  onChange(evt) {\n    this.setState({\n      isChecked: !this.state.isChecked\n    })\n    this.props.onChange(evt);\n  }\n\n  render() {\n    return (\n      <label className=\"custom-control fill-checkbox\">\n        <input checked={this.state.isChecked} \n          type=\"checkbox\" \n          onChange={this.props.onChange} \n          className=\"fill-control-input\" \n        />\n        <span className=\"fill-control-indicator\" />\n        {\n          this.props.label ? (\n            <span className=\"fill-control-description\">\n             {this.props.label}\n            </span>\n          ) : null\n        }\n      </label>\n    )\n  }\n}\n\nexport default Checkbox;","import React from \"react\";\nimport Checkbox from \"../../../common/Checkbox\";\n\nexport default props => {\n  return (\n    <div className=\"d-flex ml-2 justify-content-center align-items-center\">\n      <Checkbox checked={props.selected} onChange={props.onChange} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div className=\"wrapper text-4\">\n      <div className=\"wrapper align-items-center text-2\">\n        <div className=\"text from-name\">{props.fromName}</div>\n        <div className=\"text\">{props.subject}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperclip } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default (props) => {\n  return (\n    <div className=\"wrapper num-4\">\n      <div className=\"wrapper num-2\">\n        <div className=\"num pr-4\">\n          {props.hasAttachment ? (\n            <FontAwesomeIcon icon={faPaperclip} />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"num pr-4\">{props.formattedDate}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { PureComponent } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\nimport MesssageCheckbox from \"./MessageCheckbox\";\n\nimport NameSubjectFields from \"./NameSubjectFields\";\nimport AttachmentDateFields from \"./AttachmentDateFields\";\nimport {getNameEmail} from '../../../../utils';\n\nexport class MessageItem extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.getMessage = this.getMessage.bind(this);\n  }\n\n  onSelectionChange(evt) {\n    this.props.onSelectionChange(evt.target.checked, this.props.data.id);\n  }\n\n  getMessage(evt) {\n    this.props.history.push(`/${this.props.data.id}`);\n  }\n\n  getFromName(from) {\n    const nameEmail = getNameEmail(from);\n    return nameEmail.name;\n  }\n\n  getFormattedDate(date, fallbackDateObj) {\n    let messageDate = moment(date);\n    if (!messageDate.isValid()) {\n      messageDate = moment(fallbackDateObj.parserFn(fallbackDateObj.date));\n    }\n    const nowDate = moment(new Date());\n    const isMessageFromToday = messageDate.format(\"YYYYMMDD\") === nowDate.format(\"YYYYMMDD\");\n    let formattedDate;\n    if (isMessageFromToday) {\n      formattedDate = messageDate.format(\"h:mm A\");\n    }\n    else {\n      if (messageDate.year() !== nowDate.year()) {\n        formattedDate = messageDate.format(\"YYYY/MM/DD\");\n      }\n      else {\n        formattedDate = messageDate.format(\"MMM D\");\n      }\n    }\n    return formattedDate;\n  }\n\n  render() {\n    const receivedHeader = this.props.data.payload.headers.find(el => el.name.toUpperCase() === \"X-RECEIVED\");\n    const date = receivedHeader ? receivedHeader.value.split(\";\")[1].trim() : \"\";\n    let formattedDate = this.getFormattedDate(date, {date: this.props.data.internalDate, parserFn: parseInt});\n    const unread = this.props.data.labelIds.indexOf(\"UNREAD\") > -1 ? \" font-weight-bold\" : \"\";\n    const selected = this.props.data.selected ? \" selected\" : \"\";\n    const subjectHeader = this.props.data.payload.headers.find(el => el.name.toUpperCase() === \"SUBJECT\");\n    const subject = subjectHeader ? subjectHeader.value : \"\";\n    const fromHeader = this.props.data.payload.headers.find(el => el.name.toUpperCase() === \"FROM\");\n    let fromName = fromHeader ? this.getFromName(fromHeader.value) : \"undefined\";\n\n    return (\n      <div className={`d-flex table-row-wrapper${selected}`}>\n        <MesssageCheckbox\n          selected={this.props.data.selected}\n          onChange={this.onSelectionChange}\n        />\n        <div\n          onClick={this.getMessage}\n          className={`table-row px-2 py-3${unread}`}\n        >\n          <NameSubjectFields fromName={fromName} subject={subject} />\n          <AttachmentDateFields\n            formattedDate={formattedDate}\n            hasAttachment={\n              this.props.data.payload.mimeType === \"multipart/mixed\"\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MessageItem);\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default (props) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"btn-group ml-auto\">\n      <button\n        onClick={props.navigateToPrevPage}\n        disabled={props.prevToken == null}\n        className=\"btn btn-light bg-white border-1 border-dark px-3 btn-sm\"\n        title={t('pager-buttons.previous-page')}\n      >\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </button>\n      <button\n        onClick={props.navigateToNextPage}\n        disabled={props.nextToken == null}\n        className=\"btn btn-light bg-white border-1  border-dark px-3 btn-sm\"\n        title={t('pager-buttons.next-page')}\n      >\n        <FontAwesomeIcon icon={faChevronRight} />\n      </button>\n    </div>\n  );\n}","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport './listToolbar.scss';\n\nexport class ListActionButtons extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.getClickHandler = this.getClickHandler.bind(this);\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\n  }\n\n  getClickHandler(action) {\n    return evt => {\n      this.props.onClick(action);\n    };\n  }\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <div>\n        <div className=\"action-btn\">\n          <FontAwesomeIcon\n            title={t('message-list.move-to-trash')}\n            onClick={this.trashHandler}\n            icon={faTrash}\n            size=\"lg\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(ListActionButtons);\n","import React, { PureComponent } from \"react\";\nimport Checkbox from \"../../../common/Checkbox\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  toggleSelected,\n  modifyMessages\n} from \"../actions/message-list.actions\";\nimport Pager from \"../pager-buttons/PagerButtons\";\nimport ListActionButtons from \"./ListActionButtons\";\n\nimport { deleteListMessages, addListMessages } from \"../actions/message-list.actions\";\n\nexport class MessageToolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\n    this.modifyMessages = this.modifyMessages.bind(this);\n\n    this.state = {\n      selectedMessageIds: []\n    };\n  }\n\n  onSelectionChange(evt) {\n    const checked = evt.target.checked;\n\n    const messageIds = this.props.messagesResult.messages.reduce((acc, el) => {\n      acc.push(el.id);\n      return acc;\n    }, []);\n\n    this.setState({\n      selectedMessageIds: messageIds\n    });\n\n    this.props.toggleSelected(messageIds, checked);\n\n    window.dispatchEvent(new CustomEvent(\"CheckAllclick\", {\n      detail: {\n          listMessages: messageIds,\n          chkselected : checked\n      }         \n    }));\n\n    checked ? this.props.addListMessages(messageIds) : this.props.deleteListMessages(messageIds);\n  }\n\n  navigateToNextPage() {\n    this.props.navigateToNextPage(this.props.nextToken);\n  }\n\n  navigateToPrevPage() {\n    this.props.navigateToPrevPage(this.props.prevToken);\n  }\n\n  modifyMessages(addLabelIds, removeLabelIds) {\n    const ids = this.props.messagesResult.messages.filter(el => el.selected).map(el => el.id);\n    const actionParams = {\n      ...addLabelIds && {addLabelIds},\n      ...removeLabelIds && {removeLabelIds}\n    };\n    this.props.modifyMessages({ ids, ...actionParams});\n  }\n\n  render() {\n\n    let checked = false;\n    let selectedMessages = [];\n\n    if (this.props.messagesResult) {\n      selectedMessages = this.props.messagesResult.messages.filter(el => el.selected);\n      checked = this.props.messagesResult.messages.length > 0 &&  selectedMessages.length === this.props.messagesResult.messages.length;\n    }\n    \n    return (\n      <div className=\"msg-toolbar\">\n        <div className=\"pl-2 py-2 pr-4 d-flex align-items-center bd-highlight \">\n          <div className=\"d-flex align-content-center align-items-center\">\n            <div>\n              <Checkbox checked={checked} onChange={this.onSelectionChange} />\n            </div>\n            <div />\n\n            <div className=\"ml-auto p-2 bd-highlight\">\n              <div>\n                {selectedMessages.length ? (\n                  <ListActionButtons onClick={this.modifyMessages} />\n                ) : null}\n              </div>\n            </div>\n          </div>\n\n          <Pager\n            nextToken={this.props.nextToken}\n            prevToken={this.props.prevToken}\n            navigateToPrevPage={this.navigateToPrevPage}\n            navigateToNextPage={this.navigateToNextPage}\n          />         \n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  messagesResult: state.messagesResult,\n  selectedMessages: state.messageList.selectedMessages\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      toggleSelected,\n      modifyMessages,\n      deleteListMessages,\n      addListMessages\n    },\n    dispatch\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MessageToolbar);","import React, { PureComponent } from \"react\";\nimport './ListFooter.scss';\n\nexport class Footer extends PureComponent {\n  render() {\n    const { messagesTotal } = this.props;\n    let totalLabel = '';\n    if (messagesTotal > 0) {\n      totalLabel = `${messagesTotal.toLocaleString()} messages`;\n    }\n\n    return (\n        <div className=\"mt-auto p-2  list-footer\" >\n        <div className=\"d-flex px-4 h-100 align-items-center\">\n          <div className=\"total-count\">{totalLabel}</div>\n          <div className=\"ml-auto \"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { PureComponent } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { withTranslation } from 'react-i18next';\n\nimport { bindActionCreators, compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport MessageRow from \"./message-row/MessageRow\";\n\nimport { addMessage, deleteMessage } from \"./actions/message-list.actions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport ListToolbar from \"./list-toolbar/ListToolbar\";\nimport ListFooter from \"./list-footer/ListFooter\";\nimport \"./messageList.scss\";\nimport { checked } from \"glamor\";\n\nconst ViewMode = {\n  LIST: 1,\n  CONTENT: 2,\n  EDIT: 3\n};\n\nexport class MessageList extends PureComponent {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewMode: ViewMode.LIST,\n      contentMessageId: undefined,\n      currentLabel: \"\"\n    };\n\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.renderView = this.renderView.bind(this);\n    this.renderMessages = this.renderMessages.bind(this);\n  }\n\n  componentDidMount() {\n    const searchParam = this.props.location.search;\n    const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n\n    if (token && this.props.messagesResult.pageTokens.length === 0) {\n      this.props.addInitialPageToken(token);\n    }\n\n    const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\n\n    this.props.getLabelMessages({\n      ...labelIds && {labelIds},\n      pageToken: token\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const searchParam = this.props.location.search;\n      const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n\n      const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\n\n      this.props.getLabelMessages({\n        ...labelIds && {labelIds},\n        pageToken: token\n      });\n    }\n  }\n\n\n  onSelectionChange(selected, msgId) {\n      this.props.toggleSelected([msgId], selected);\n      //e.emit('received', { text: \"Id: \" + msgId + \" selected: \" + selected })\n      window.dispatchEvent(new CustomEvent(\"Checkclick\", {\n          detail: {\n              name: msgId,\n              chkselected : selected\n          }         \n      }));\n      \n      selected ? this.props.addMessage(msgId) : this.props.deleteMessage(msgId);\n  }\n  \n\n  renderSpinner() {\n    return (\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n      </div>\n    );\n  }\n\n  renderMessages() {   \n    const { t } = this.props;\n\n    if (this.props.messagesResult.loading) {\n      return this.renderSpinner();\n    } else if (this.props.messagesResult.messages.length === 0) {\n      return (\n        <div className=\"p-4 text-center\">        \n            {t('message-list.no-message')}\n        </div>\n      );\n    }\n\n    return this.props.messagesResult.messages.map(el => {\n      if (this.props.selectedMessages.find(x => x.id === el.id)) {\n        el.selected = true;\n      }\n\n      return (\n        <MessageRow\n          data={el}\n          key={el.id}\n          onSelectionChange={this.onSelectionChange}\n          onClick={this.getMessage}\n        />\n      );\n    });\n  }\n\n\n  renderView() {\n    const { viewMode } = this.state;\n\n    switch (viewMode) {\n\n      case ViewMode.EDIT:\n        return this.renderEditView();\n\n      default:\n        return this.renderMessages();\n    }\n  }\n\n  getPageTokens() {\n    if (this.props.messagesResult.loading) {\n      return { nextToken: null, prevToken: null }\n    }\n    const { messagesResult, location } = this.props;\n    const pathname = location.pathname;\n    let prevToken;\n    let nextToken = messagesResult.nextPageToken;\n    const searchParam = location.search;\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n    if (currentToken) {\n      const tokenIndex = messagesResult.pageTokens.indexOf(currentToken);\n      if (tokenIndex > -1) {\n        nextToken = messagesResult.pageTokens[tokenIndex + 1];\n        prevToken = messagesResult.pageTokens[tokenIndex - 1];\n        if (!prevToken) {\n          if (tokenIndex > 0) {\n          }\n        }\n        prevToken = prevToken ? `${pathname}?${prevToken}` : pathname;\n      }\n      else {\n        prevToken = pathname;\n      }\n    }\n    nextToken = nextToken ? `${pathname}?${nextToken}` : null;\n    return { nextToken, prevToken };\n  }\n\n  render() {\n    const { messagesResult } = this.props;\n    const messagesTotal = messagesResult.label ? messagesResult.label.result.messagesTotal : 0;\n    const { nextToken, prevToken } = this.getPageTokens();\n          \n    return (\n      <React.Fragment>       \n        <ListToolbar\n          nextToken={nextToken}\n          prevToken={prevToken}\n          navigateToNextPage={this.props.navigateToNextPage}\n          navigateToPrevPage={this.props.navigateToPrevPage}\n        />\n        <PerfectScrollbar className=\"container-fluid no-gutters px-0 message-list-container\">\n          {this.renderView()}\n        </PerfectScrollbar>\n        <ListFooter messagesTotal={messagesTotal} />\n      </React.Fragment>\n    );\n  }  \n}\n\nconst mapStateToProps = (state) => {\n  return {\n      selectedMessages: state.messageList.selectedMessages\n  }    \n};  \n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addMessage,\n      deleteMessage\n    },\n    dispatch\n);\n\nexport default compose(\n  withRouter,\n  withTranslation(),\n  connect(\n      mapStateToProps,\n      mapDispatchToProps\n  )\n)(MessageList);\n","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport ComposeMessage from \"../../../compose-message/ComposeMessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faReply } from \"@fortawesome/free-solid-svg-icons\";\nimport { getNameEmail } from \"../../../../utils\";\nimport moment from \"moment\";\nimport \"./messageToolbar.scss\";\n\nexport class MessageToolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\n  }\n\n  getClickHandler(action) {\n    return evt => {\n      this.props.onClick(action);\n    };\n  }\n\n  render() {\n    const { t } = this.props;\n\n    if (!this.props.messageResult.result) {\n      return null;\n    }\n\n    const message = this.props.messageResult.result;\n    const { messageHeaders } = message;\n\n    let replyTo, cc, subject;\n\n    for (let i = 0; i < messageHeaders.length; i++) {\n      const header = messageHeaders[i];\n      switch (header.name) {\n        case \"Subject\":\n          subject = header;\n          break;\n        case \"From\":\n          if (!replyTo) {\n            replyTo = header;\n          }\n          break;\n        case \"Reply-To\":\n          replyTo = header;\n          break;\n        case \"Cc\":\n          cc = header;\n          break;\n        default:\n          break;\n      }\n    }\n\n    const nameEmail = getNameEmail(replyTo.value);\n    const receivedHeader = messageHeaders.find(el => el.name === \"X-Received\");\n    const date = receivedHeader ? receivedHeader.value\n          .split(\";\")[1]\n          .trim() : \"\";\n\n    let parsedDate = moment(date);\n\n    if (!parsedDate.isValid()) {\n      parsedDate = moment(\n        parseInt(this.props.messageResult.result.internalDate)\n      );\n    }\n    const replyHeader = `<p>On ${parsedDate.format(\"MMMM Do YYYY, h:mm:ss a\")} < ${nameEmail.email} > wrote:</p>`;\n\n    const composeProps = {\n      subject: `Re: ${subject.value}`,\n      to: nameEmail.email,\n      content: `<p>&nbsp;</p>\n          <p>&nbsp;</p>\n          <p>&nbsp;</p>\n          ${replyHeader}\n          <blockquote>${this.props.messageResult.body}</blockquote>`,\n      ...(cc && { cc: cc.value })\n    };\n\n    return (\n      <div className=\"d-flex justify-content-center align-items-center message-toolbar\">\n        <div className=\"action-btns\">\n          <div className=\"action-btn mr-2\">\n            <button className=\"btn\" onClick={this.trashHandler}>\n              <FontAwesomeIcon\n                title={t('message-toolbar.move-to-trash')}        \n                icon={faTrash}\n                size=\"lg\"\n              />\n            </button>\n          </div>\n          <div className=\"action-btn mr-2\">\n            <ComposeMessage {...composeProps}>\n              <button className=\"btn\">\n                <FontAwesomeIcon\n                  title={t('message-toolbar.reply')}\n                  icon={faReply}\n                  size=\"lg\"\n                />\n              </button>\n            </ComposeMessage>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(MessageToolbar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, compose } from \"redux\";\nimport {\n  getEmailMessage,\n  modifyMessages\n} from \"../actions/message-list.actions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport MessageToolbar from \"../message-toolbar/MessageToolbar\";\n\nimport \"./messageContent.scss\";\n\n//BEGIN functions for attachment functionality\n\nfunction b64toBlob(b64Data, contentType, sliceSize) {\r\n    contentType = contentType || '';\r\n    sliceSize = sliceSize || 512;\r\n\r\n    var byteCharacters = atob(b64Data);\r\n    var byteArrays = [];\r\n\r\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        var byteNumbers = new Array(slice.length);\r\n        for (var i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        var byteArray = new Uint8Array(byteNumbers);\r\n\r\n        byteArrays.push(byteArray);\r\n    }\r\n\r\n    var blob = new Blob(byteArrays, { type: contentType });\r\n    return blob;\r\n}\n\n\nfunction getAttachments(messageID, parts, callback) {\r\n    var attachId = parts.body.attachmentId;\r\n    var request = window.gapi.client.gmail.users.messages.attachments.get({\r\n        'id': attachId,\r\n        'messageId': messageID,\r\n        'userId': 'me'\r\n    });\r\n    request.execute(function (attachment) {\r\n        callback(parts.filename, parts.mimeType, attachment);\r\n    });\r\n}\n\nfunction addAttachmentElement(blobUrl, filename) {   \n    var aLink = document.createElement('a');\r\n    var linkText = document.createTextNode(filename);   \n    aLink.appendChild(linkText);    \r\n    aLink.href = blobUrl\r\n    aLink.title = filename\r\n    aLink.download = filename\r\n    aLink.style.textDecoration = \"none\";\r\n    aLink.style.padding = \"5px\";\r\n    aLink.style.margin = \"15px 0\";\r\n    aLink.style.clear = \"both\";    \r\n    return aLink\r\n}\n\nfunction addAttachmentContainer(mimeType) {\n    var aDiv = document.createElement('span');\r\n    aDiv.style.whiteSpace = \"nowrap\";\r\n    aDiv.style.backgroundColor = \"#fafafa\";\r\n    aDiv.style.border= \"solid 1px #aaa\";\r\n    aDiv.style.padding = \"5px\";    \r\n    aDiv.style.margin = \"10px\";    \r\n    aDiv.style.display = \"inline-block\";\r\n    var Img = addAttachmentImg(mimeType);\r\n    aDiv.appendChild(Img);    \r\n    return aDiv\r\n} \n\nfunction addAttachmentImg(mimeType) {\n    var aImg = document.createElement('img');\n    var imgPath;\n\n    switch (mimeType) {\r\n        case \"image/png\":\r\n            imgPath = \"../assets/img/file-extensions/png.png\"\r\n            break;\r\n        case \"image/jpeg\":\r\n            imgPath = \"../assets/img/file-extensions/jpg.png\"\r\n            break;\r\n        case \"application/pdf\":\r\n            imgPath = \"../assets/img/file-extensions/pdf.png\";\r\n            break;\r\n        case \"text/plain\":\r\n            imgPath = \"../assets/img/file-extensions/txt.png\";\r\n            break;\r\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n            imgPath = \"../assets/img/file-extensions/doc.png\";\r\n            break\r\n        default:\r\n            imgPath = \"../assets/img/file-extensions/default.png\";\r\n            break\r\n        // code block\r\n    }  \r\n    aImg.src = imgPath;\r\n    aImg.style.alt = \"Attached file\";    \r\n    //aImg.height = 42;\r\n    //aImg.width = 42;\r\n    aImg.style.display = \"inline-block\";\r\n    aImg.style.verticalAlign= \"middle\";\r\n    return aImg\r\n}\n\nfunction addDivDivider() {\n    var aDiv = document.createElement('div');    \r\n    aDiv.style.height = \"30px\";    \r\n    aDiv.id=\"Dividier\"\r\n    return aDiv\r\n} \n\n//END functions for attachment functionality\n\n\nexport class MessageContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: undefined\n    };\n\n    this.iframeRef = React.createRef();\n    this.modifyMessage = this.modifyMessage.bind(this);\n  }\n\n  componentDidMount(prevProps) {\n    const messageId = this.props.match.params.id;\n    this.props.getEmailMessage(messageId);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { emailMessageResult } = this.props;\n    if (!emailMessageResult.loading) {\n      if (!emailMessageResult.failed) {\n          if (this.iframeRef.current) {\n\n            const { body } = this.iframeRef.current.contentWindow.document;\n            body.style.margin = \"0px\";\n            body.style.fontFamily = \"Arial, Helvetica, sans-serif\";\n            body.style.fontSize = \"13px\";\n            body.innerHTML = this.props.emailMessageResult.body;\n\n            //Adding attach files  \n            var attach = emailMessageResult.attach;   \n            if (typeof attach !== 'undefined' && attach.length > 0) {\n                var iframe = document.getElementById('message-iframe');\n                var Divider = addDivDivider(); \n                iframe.contentDocument.body.appendChild(Divider);\n                for (var i = 0; i < attach.length; i++) {\n                    if (attach[i].filename && attach[i].filename.length > 0) {\n                        getAttachments(emailMessageResult.id, attach[i], function (filename, mimeType, attachment) {\r\n                            //console.log('File Name is ' + filename);\r\n                            let dataBase64Rep = attachment.data.replace(/-/g, '+').replace(/_/g, '/')\r\n                            let urlBlob = b64toBlob(dataBase64Rep, mimeType, attachment.size);\r\n                            //console.log(urlBlob);\r\n                            var blobUrl = URL.createObjectURL(urlBlob);\r\n                            var Attachment = addAttachmentElement(blobUrl,filename);                            \r\n                            var AttachmentDiv = addAttachmentContainer(mimeType);\r\n                            AttachmentDiv.appendChild(Attachment);                            \n                            iframe.contentDocument.body.appendChild(AttachmentDiv);\r\n                        });\n                    };\n                };\r\n            }  \n        }\n      } else {\n        if (!this.state.errorMessage) {\n          this.setState({\n            errorMessage: emailMessageResult.error.result.error.message,\n            modal: true\n          });\n        }\n      }\n    }\n    }   \n   \n  renderSpinner() {\n    return (\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n      </div>\n    );\n  }\n\n  renderErrorModal() {\n    return <Redirect to=\"/notfound\" />;\n  }\n\n  modifyMessage(addLabelIds, removeLabelIds) {\n    const id = this.props.emailMessageResult.result.id;\n    const actionParams = {\n      ...(addLabelIds && { addLabelIds }),\n      ...(removeLabelIds && { removeLabelIds })\n    };\n    this.props.modifyMessages({ ids: [id], ...actionParams });\n    this.props.history.goBack();\n  }\n\n  render() {\n    if (this.props.emailMessageResult.loading) {\n      return this.renderSpinner();\n    }\n\n    return (\n      <React.Fragment>\n        <MessageToolbar \n          onClick={this.modifyMessage} \n          messageResult={this.props.emailMessageResult}\n        />\n        \n        <div className=\"d-flex justify-content-center align-items-center message-content\">\n          {this.props.emailMessageResult.loading ? this.renderSpinner() : null}\n          {this.state.errorMessage ? (\n            this.renderErrorModal()\n          ) : (\n            <iframe\n              ref={this.iframeRef}\n              title=\"Message contents\"\n              id=\"message-iframe\"\n              style={{\n                display: this.props.emailMessageResult.loading\n                  ? \"none\"\n                  : \"block\"\n              }}\n            />\n          )}\n            </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emailMessageResult: state.emailMessageResult\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getEmailMessage,\n      modifyMessages\n    },\n    dispatch\n  );\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(MessageContent);\n","export const signIn = () => {\n  return window.gapi.auth2\n    .getAuthInstance()\n    .signIn()\n}\n\nexport const initGmailClient = (apiKey, clientId) => {\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n\n  // Array of API discovery doc URLs for APIs\n  const DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"\n  ];\n\n  // Authorization scopes required by the API; multiple scopes can be\n  // included, separated by spaces.\n  // More info: https://developers.google.com/identity/protocols/googlescopes\n  const SCOPES = \"https://mail.google.com/\"; // Scope for Read, send, delete, and manage your email\n\n  const gapi = window.gapi;\n\n  return gapi.client.init({\n    apiKey: API_KEY,\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  });\n};\n\nexport const checkSignInStatus = () => {  \n\n  return new Promise((resolve, reject) => {\n    initGmailClient().then(_ => {\n      const gapi = window.gapi;\n\n      const googleAuthInstance = gapi.auth2.getAuthInstance();\n\n      const isSignedIn = googleAuthInstance.isSignedIn.get();\n\n      if (isSignedIn) {\n        // Listen for sign-in state changes.\n        googleAuthInstance.isSignedIn.listen(isSignedIn => {\n          updateSigninStatus(isSignedIn);\n        });\n\n        console.log(\"AUTH_SUCCESS from checkSignInStatus\");\n\n        resolve(googleAuthInstance.currentUser.Ab);\n\n      } else {\n        reject();\n      }\n    })\n      .catch(error => {\n        reject(error);\n      });\n  })\n\n    \n  \n};\n\n// Listener for sign-in state\nexport const updateSigninStatus = (isSignedIn) => {\n  if (!isSignedIn) {\n    // TODO: react to logged out status\n  }\n};\n\nexport const signOut = () => {\n  return window.gapi.auth2\n    .getAuthInstance()\n    .signOut()\n};","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, compose } from \"redux\";\nimport Header from \"../header/Header\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport LexonConnector from \"../../lex-on_connector/lex-on_connector\";\nimport NotFound from \"../not-found/NotFound\";\nimport './main.scss';\nimport MessageList from \"../content/message-list/MessageList\";\nimport MessageContent from \"../content/message-list/message-content/MessageContent\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { getLabels } from \"../sidebar/sidebar.actions\";\n\n\nimport {\n  getLabelMessages,\n  emptyLabelMessages,\n  toggleSelected,\n  setPageTokens,\n  addInitialPageToken,\n  clearPageTokens,\n  setSearchQuery\n} from \"../content/message-list/actions/message-list.actions\";\n\nimport {selectLabel} from '../sidebar/sidebar.actions';\nimport {signOut} from '../../api/authentication';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faWindowClose, faClosedCaptioning, faDoorClosed, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n    ReflexContainer,\n    ReflexSplitter,\n    ReflexElement\n} from 'react-reflex'\nimport 'react-reflex/styles.css'\n\nimport { start, registerApplication } from 'single-spa'\n\nimport * as singleSpa from 'single-spa';\nimport { registerLexonApp } from \"../../apps/lexonconn-app\";\n\nexport class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLabelList = this.getLabelList.bind(this);\n    this.getLabelMessages = this.getLabelMessages.bind(this);\n    this.renderLabelRoutes = this.renderLabelRoutes.bind(this);\n    this.loadLabelMessages = this.loadLabelMessages.bind(this);\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\n    this.addInitialPageToken = this.addInitialPageToken.bind(this);\n    this.onSignout = this.onSignout.bind(this);\n    \n    //registerReactApp();\n\n    //singleSpa.start();\n\n    this.state = {         \n       isVisible: true,\n       fluid: true,\n       customAnimation: false,\n       slow: false,\n       size: 0.25\n    };     \n     \n  }\n  \n  componentDidMount() {\n    /* Label list is fetched from here \n    so that we can declare Routes by labelId \n    before rendering anything else */   \n    this.getLabelList();\n\n    window.addEventListener(\"toggleClock\", function (event) {\n        alert(event.detail.name);\n    });   \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.signedInUser !== this.props.signedInUser) {\n      this.setState({\n        signedInUser: this.props.signedInUser\n      });\n    }\n\n    const {labels} = this.props.labelsResult;\n    const {pathname} = this.props.location;\n    const selectedLabel = labels.find(el => el.selected);\n    const labelPathMatch = labels.find(el => el.id.toLowerCase() === pathname.slice(1));\n    if (!selectedLabel) {\n      if (labelPathMatch && this.props.searchQuery === \"\") {\n        this.props.selectLabel(labelPathMatch.id);\n      }      \n    }\n    else {\n      if (labelPathMatch && selectedLabel.id !== labelPathMatch.id) {\n        this.props.selectLabel(labelPathMatch.id);\n      } \n    }\n  }\n\n  navigateToNextPage(token) {\n    const searchParam = this.props.location.search;\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : \"\";\n    this.props.setPageTokens({\n      prevPageToken: currentToken\n    });\n      this.props.history.push(token);      \n  }\n\n  navigateToPrevPage(token) {\n    this.props.history.push(token);\n  }\n\n  loadLabelMessages(label) {\n    const currentSearchQuery = this.props.searchQuery;\n    this.props.clearPageTokens();\n    this.props.selectLabel(label.id);    \n\n    const newPathToPush = `/${label.id.toLowerCase()}`;\n\n    if (currentSearchQuery && currentSearchQuery !== \"\") {\n      this.props.setSearchQuery(\"\");\n      const {pathname} = this.props.location;\n      if (newPathToPush === pathname) {\n        this.getLabelMessages({labelIds: [label.id] });\n        return;\n      }\n    }\n\n    this.props.history.push(`/${label.id.toLowerCase()}`);\n  }\n\n  registerConnectorApp() {\n    let el = document.getElementById('main-lexon-connector')\n    if (!el) {\n      try {\n          const activityFunction = location => location.pathname.startsWith('/');\n          registerApplication('lex-on-connector', () => import('../../lex-on_connector/index.js'), activityFunction);\n          start();\n          \n          //registerLexonApp();\n          //singleSpa.start();\n      }\n      catch (error) {\n          console.error(error);\n      }\n    }               \n  }\n  \n  getLabelList() {\n      this.props.getLabels();     \n  }\n\n  getLabelMessages({labelIds, q, pageToken}) {\n    this.props.emptyLabelMessages();    \n    this.props.getLabelMessages({ labelIds, q, pageToken });  \n    this.registerConnectorApp();\n  }\n\n  addInitialPageToken(token) {\n    this.props.addInitialPageToken(token);\n  }\n\n  renderLabelRoutes() {\n    return this.props.labelsResult.labels.map(el => (\n      <Route\n        key={el.id + '_route'}\n        exact\n        path={\"/\" + el.id}\n        render={props => {          \n          const that = this;\n          return (\n            <MessageList\n              {...props}\n              getLabelMessages={this.getLabelMessages}\n              messagesResult={this.props.messagesResult}\n              toggleSelected={this.props.toggleSelected}\n              navigateToNextPage={this.navigateToNextPage}\n              navigateToPrevPage={this.navigateToPrevPage}\n              pageTokens={this.props.pageTokens}\n              addInitialPageToken={this.addInitialPageToken}\n              parentLabel={that.props.labelsResult.labels.find(el => el.id === props.match.path.slice(1) )}\n              searchQuery={this.props.searchQuery}\n            />\n          )\n        }}\n      />\n    ));    \n  }\n\n  renderSpinner() {\n    return (\n      <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n      </div>\n    )\n  }\n\n  onSignout() {\n    const that = this;\n    signOut().then(_ => {\n      that.props.history.replace('inbox');\n      window.location.reload(true);\n    })\n  }\n\n  renderInboxViewport() {\n\n    let imgUrl = 'assets/img/settings-gears.svg'\n    if (this.props.labelsResult.labels.length < 1) {\n        return this.renderSpinner();       \n    }\n\n      return ( \n              <Fragment>\n                  <Header googleUser={this.props.googleUser}\n                      onSignout={this.onSignout}\n                      setSearchQuery={this.props.setSearchQuery}\n                      getLabelMessages={this.getLabelMessages}\n                      searchQuery={this.props.searchQuery}\n                  />\n                  <section className=\"main hbox space-between\">\n                      <ReflexContainer orientation=\"vertical\">\n                          <ReflexElement maxSize={300} minSize={150} className=\"left-pane\"\n                              propagateDimensionsRate={200}\n                              propagateDimensions={true}\n                              flex={0.2}>\n                              <PerfectScrollbar>\n                                  <div className=\"pane-content\">\n                                      <Sidebar\n                                          getLabelList={this.getLabelList}\n                                          pathname={this.props.location.pathname}\n                                          labelsResult={this.props.labelsResult}\n                                          onLabelClick={this.loadLabelMessages}\n                                      />\n                                  </div>\n                              </PerfectScrollbar>\n                          </ReflexElement>\n                          <ReflexSplitter propagate={true} />\n                          <ReflexElement minSize={400} className=\"middle-pane\"\n                              propagateDimensionsRate={400}\n                              propagateDimensions={true}\n                              flex={0.6}>\n                              <PerfectScrollbar>\n                                  <div className=\"pane-content\" style={{ height: '60%' }}>\n                                      <article className=\"d-flex flex-column\">\n                                          <Switch>\n                                              {this.renderLabelRoutes()}\n                                              <Route\n                                                  exact\n                                                  path=\"/notfound\"\n                                                  component={NotFound}\n                                              />\n                                              <Route\n                                                  exact\n                                                  path=\"/:id([a-zA-Z0-9]+)\"\n                                                  component={MessageContent}\n                                              />\n                                          </Switch>\n                                      </article>\n                                  </div>\n                              </PerfectScrollbar>\n                          </ReflexElement>\n                          <ReflexSplitter propagate={true} />\n                          <ReflexElement minSize=\"400\" className=\"right-pane\"\n                              propagateDimensionsRate={400}\n                              propagateDimensions={true}\n                              flex={0.2}>\n                          <div id=\"main-content\" className=\"connector\" style={{\n                              backgroundImage: 'url(' + imgUrl + ')',\n                              backgroundSize: '120px',\n                              backgroundPosition: 'center 5%',\n                              backgroundRepeat: 'no-repeat',\n                          }}>\n                              {/* <div className=\"conector\" id=\"lexon-app\" />  */} \n                              {/* <div className=\"conector\" id=\"lexon-app-dev\" />  */}\n                              <div className=\"conector\">\n                                <LexonConnector />\n                              </div>\n                          </div>\n                          </ReflexElement>\n                      </ReflexContainer>\n                  </section>\n              </Fragment>  \n      );\n      \n  }\n\n    render()\n    { \n       return this.renderInboxViewport();\n    }\n\n   \n\n}\n\nconst mapStateToProps = state => ({\n  labelsResult: state.labelsResult,\n  messagesResult: state.messagesResult,\n  pageTokens: state.pageTokens,\n  searchQuery: state.searchQuery\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getLabels,\n      getLabelMessages,\n      emptyLabelMessages,\n      toggleSelected,\n      selectLabel,\n      setPageTokens,\n      addInitialPageToken,\n      clearPageTokens,\n      setSearchQuery\n    },\n    dispatch\n  );\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Main);\n","import React, { Component } from \"react\";\nimport GoogleButton from \"react-google-button\";\n\nexport class Login extends Component {\n\n  render() {\n    return (\n      <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center\">\n        <div className=\"mx-auto\">\n          <GoogleButton\n            onClick={this.props.onSignIn}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleButton from \"react-google-button\";\n\nexport class Authenticating extends Component {\n\n  render() {\n    return (\n      <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center\">\n        <div className=\"mx-auto\">\n          <GoogleButton\n            label='Signing in...'\n            disabled\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Authenticating;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Main from \"./components/main/Main\";\nimport Login from \"./components/login/Login\";\nimport Authenticating from \"./components/authenticating/Authenticating\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport { bindActionCreators, compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { signIn, checkSignInStatus } from \"./api/authentication\";\nimport { mountScripts } from \"./api/scripts\";\n\nimport {\n  SIGNED_OUT,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  AUTH_IN_PROGRESS,\n  PROVIDER\n} from \"./constants\";\n\nimport { config as constants } from \"./constants\";\n\nimport { storeUser } from \"./actions/settings.actions\";\n\nexport class AppContainer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signInStatus: SIGNED_OUT,\n      googleUser: undefined,\n      updateDefaultAccount: false,\n      fetchUpdateDefaultAccount: false,\n      userIdisNull: false\n    }\n\n    this.init = this.init.bind(this);\n    this.initClient = this.initClient.bind(this);\n    this.onSignout = this.onSignout.bind(this);\n    this.onSignInSuccess = this.onSignInSuccess.bind(this);\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  componentDidMount() {\n    mountScripts().then(this.init);\n\n    if (!this.state.updateDefaultAccount) {\n        const userId = this.props.match.params.id;\n        console.log('userId -> ', userId);\n        if (userId != null) {\n          const url = `${constants.url.URL_UPDATE_DEFAULTACCOUNT}/${userId}/${PROVIDER}`;\n          fetch(url, {\n              method:'POST',\n          })\n          .then(r => r.json())\n          .then(result => {\n              console.log(result);\n              this.setState({ updateDefaultAccount: true });\n              this.setState({ fetchUpdateDefaultAccount: true });\n              this.props.storeUser(userId);\n          });\n        }        \n    }\n    else {\n      this.setState({ userIdisNull: true });\n    }\n\n    this.props.location.pathname = '/inbox';\n  }\n\n  init() {\n    window.gapi.load(\"client:auth2\", this.initClient);\n  }\n\n  initClient() {\n    checkSignInStatus()\n    .then(this.onSignInSuccess)\n    .catch(_ => {\n      this.setState({\n        signInStatus: AUTH_FAIL\n      })\n    });\n  }\n\n  onSignout() {\n    this.props.signOut();\n  }\n\n  onSignIn() {\n    signIn().then(this.onSignInSuccess);\n  }\n\n  onSignInSuccess(googleUser) {\n    this.setState({\n      signInStatus: AUTH_SUCCESS,\n      googleUser\n    });\n  }\n\n  renderView() {\n\n    const { signInStatus } = this.state;\n\n    if (signInStatus === AUTH_SUCCESS) {\n      return <Main googleUser={this.state.googleUser} />;\n    } else if (signInStatus === AUTH_IN_PROGRESS) {\n      return <Authenticating />;\n    } else {\n      return <Login onSignIn={this.onSignIn} />;\n    }\n  }\n\n  render() {\n    \n    if (!this.state.fetchUpdateDefaultAccount && this.state.userIdisNull) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        {this.renderView()}       \n      </React.Fragment>\n\n      // <React.Fragment>        \n      //   {this.props.location.pathname === \"/\" ? (\n      //     <Redirect to=\"/inbox\" />\n      //   ) : (\n      //     this.renderView()\n      //   )}\n      // </React.Fragment>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n      userId: state.storeUser.userId\n  }    \n};  \n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(\n  {\n    storeUser\n  },\n  dispatch\n);\n\nexport default compose(\n  withRouter,\n  connect(\n      mapStateToProps,\n      mapDispatchToProps\n  )\n)(AppContainer);\n\n//export default withRouter(AppContainer);\n","export const mountScripts = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      script.onload = () => {};\n      resolve();\n    };\n    script.onreadystatechange = () => {\n      if (script.readyState === \"complete\") script.onload();\n    };\n    document.body.appendChild(script);\n  });\n};\n\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route } from 'react-router-dom'\nimport AppContainer from \"./AppContainer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>        \n        <Route path=\"/:id?\" component={AppContainer} />        \n        {/* <AppContainer /> */}\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './services/i18n';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(    \n    <Provider store={configureStore()}>\n        {/* <I18nextProvider i18n={i18next}> */}\n        <I18nextProvider i18n={i18n}>            \n            <App />\n        </I18nextProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore(initialState={}) {\n return createStore(\n  rootReducer,\n   applyMiddleware(thunk)\n );\n}"],"sourceRoot":""}