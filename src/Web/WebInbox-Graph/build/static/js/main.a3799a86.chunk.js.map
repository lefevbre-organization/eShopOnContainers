{"version":3,"sources":["Config.jsx","constants/index.jsx","actions/settings.actions.jsx","reducers/settings.reducers.jsx","api_graph/utils.jsx","components/content/message-list/actions/message-list.actions.jsx","utils/index.jsx","components/compose-message/ComposeMessage.jsx","components/content/message-list/message-toolbar/MessageToolbar.jsx","components/content/message-list/message-content/MessageContent.jsx","api_graph/index.jsx","components/sidebar/sidebar.actions.jsx","components/sidebar/sidebar.reducers.jsx","components/content/message-list/reducers/message-list.reducers.jsx","reducers/rootReducer.jsx","reducers/gapi.reducers.jsx","services/i18n.js","GraphService.js","components/header/Header.jsx","components/sidebar/LabelItem.jsx","components/sidebar/Sidebar.jsx","components/not-found/NotFound.jsx","components/common/Checkbox.jsx","components/content/message-list/message-row/MessageCheckbox.jsx","components/content/message-list/message-row/NameSubjectFields.jsx","components/content/message-list/message-row/AttachmentDateFields.jsx","components/content/message-list/message-row/MessageRow.jsx","components/content/message-list/pager-buttons/PagerButtons.jsx","components/content/message-list/list-toolbar/ListActionButtons.jsx","components/content/message-list/list-toolbar/ListToolbar.jsx","components/content/message-list/list-footer/ListFooter.jsx","event-bus/index.js","components/content/message-list/MessageList.jsx","apps/utils.js","apps/lexonconn-app.js","components/main/Main.jsx","api_graph/authentication.jsx","components/login/Login.jsx","components/authenticating/Authenticating.jsx","AppContainer-graph.js","api_graph/scripts.jsx","App.js","serviceWorker.js","index.js","store.jsx"],"names":["module","exports","appId","scopes","SIGNED_OUT","config","url","URL_UPDATE_DEFAULTACCOUNT","URL_RESET_DEFAULTACCOUNT","URL_SELECT_ACCOUNT","storeUser","userId","dispatch","type","defaultSettings","base64MimeType","encoded","result","mime","match","length","ADD_MESSAGE","DELETE_MESSAGE","DELETE_LIST_MESSAGES","ADD_LIST_MESSAGES","getLabelMessages","_ref","labelIds","pageToken","q","getState","setMessageListLoadInProgress","state","searchQuery","selectLabel","messagesResult","paginatioDirectionSelected","skipValue","split","getMessageList","maxResults","then","response","payload","setPageTokens","catch","err","setSearchQuery","tokens","emptyLabelMessages","toggleSelected","messageIds","selected","getEmailMessage","messageId","setMessageLoadInProgress","getMessage","error","addInitialPageToken","token","clearPageTokens","modifyMessages","_ref2","ids","_ref2$addLabelIds","addLabelIds","_ref2$removeLabelIds","removeLabelIds","batchModify","modifiedIds","addMessage","data","id","content","deleteMessage","deleteListMessages","listMessages","addListMessages","getValidEmails","emailInput","trim","regex","emails","replace","i","e","test","push","getNameEmail","value","m","name","email","exec","slice","indexOf","Uppy","require","Tus","GoogleDrive","DragDrop","Dashboard","DashboardModal","ProgressBar","Compose","_PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayModal","to","cc","bcc","subject","showInlineDashboard","open","uppyPreviews","showModal","bind","assertThisInitialized","closeModal","handleChange","sendEmail","setField","uppy","autoProceed","debug","use","endpoint","serverUrl","reader","FileReader","handleModalClick","uploadFile","addFileToState","on","console","log","successful","file","onload","readerEvt","base64","target","readAsDataURL","inherits","createClass","key","setState","concat","toConsumableArray","close","reset","_this2","validTo","headers","To","join","Subject","attachments","validCc","Cc","validBcc","Bcc","Fileattached","sendMessage","resetFields","field","_this3","trimValue","arguments","undefined","evt","defineProperty","fieldValue","t","react_default","a","createElement","Fragment","React","cloneElement","children","onClick","reactstrap_es","isOpen","className","size","overflow-y","onOpened","onModalOpened","backdrop","centered","toggle","addonType","tabIndex","placeholder","invalid","isInvalid","onChange","lib_default","color","title","index_es","icon","faTrash","map","item","width","height","hideAfterFinish","min-height","PureComponent","withTranslation","MessageToolbar","trashHandler","getClickHandler","action","messageResult","replyTo","messageHeaders","from","emailAddress","address","ccRecipients","nameEmail","parsedDate","moment","receivedDateTime","isValid","parseInt","internalDate","replyHeader","format","composeProps","objectSpread","body","ComposeMessage","faReply","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","addAttachmentElement","blobUrl","filename","aLink","document","linkText","createTextNode","appendChild","href","download","style","textDecoration","padding","margin","clear","addAttachmentContainer","mimeType","aDiv","whiteSpace","backgroundColor","border","display","Img","imgPath","aImg","src","alt","verticalAlign","addAttachmentImg","MessageContent","_Component","errorMessage","iframeRef","createRef","modifyMessage","prevProps","params","emailMessageResult","loading","failed","modal","current","contentWindow","fontFamily","fontSize","innerHTML","attach","iframe","getElementById","Divider","addDivDivider","contentDocument","urlBlob","contentBytes","Attachment","URL","createObjectURL","AttachmentDiv","faSpinner","spin","actionParams","history","goBack","renderSpinner","message_toolbar_MessageToolbar","renderErrorModal","ref","Component","compose","withRouter","connect","bindActionCreators","graph","getAuthenticatedClient","accessToken","Client","init","authProvider","done","Promise","resolve","reject","getMessageRawList","getMessageHeaders","flattenMessagesWithLabel","messages","labelMessagesDetails","label","messagesTotal","_ref3","_ref3$q","client","window","msal","acquireTokenSilent","api","get","top","headerPromises","el","getMessageHeader","all","getMessageDetail","Messagedetail","getAttachmentsList","MessagesandAttachementsDetails","_ref4","bodyContent","emailBody","toRecipients","emailToRecipients","toCcRecipients","emailToCcRecipients","toBccRecipients","emailToBccRecipients","fileData","fileName","emailAttachments","header","post","_ref5","DestinationId","getLabels","labelList","labelId","defaultLabelState","labels","defaultMessagesState","pageTokens","defaultEmailMessageResult","defaultMessageList","selectedMessages","combineReducers","signedOutReducer","signInStatusResult","status","currentUser","labelsResult","stateClone","nextPageToken","filter","_action$payload","objectWithoutProperties","prevPageToken","messageList","findIndex","message","_loop","index","splice","_loop2","i18n","XHR","lng","navigator","language","fallbackLng","ns","defaultNS","backend","loadPath","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","useSuspense","getUserDetails","_x","_getUserDetails","apply","_callee","user","regenerator_default","wrap","_context","prev","next","sent","abrupt","stop","Header","handleInputChange","handleSearchClick","_handleOnClick","performSearch","debounce","toggleMenu","dropdownOpen","dropdownMenuOpen","fetch","method","r","json","urlRedirect","searhQuery","searchParams","userInfo","microsoftUser","fullName","displayName","Link","faSearch","navbar","nav","right","divider","tag","onSignout","LabelItem","_this$props","messagesUnread","iconProps","messagesUnreadLocale","toLocaleString","assign","Sidebar","selectedLabel","pathname","selectedFolder","navigateToList","find","onLabelClick","sortedLabels","reduce","acc","sortBy","renderLabels","folder","faFolder","sidebar_LabelItem","totalItemCount","react_perfect_scrollbar_lib_default","component","renderItems","NotFound","faExclamationTriangle","Checkbox","isChecked","checked","MessageCheckbox","common_Checkbox","NameSubjectFields","fromName","AttachmentDateFields","hasAttachment","faPaperclip","formattedDate","MessageItem","onSelectionChange","EncodeIdMessage","encodeURI","date","fallbackDateObj","messageDate","parserFn","nowDate","Date","year","getFormattedDate","unread","isRead","bodyPreview","toUpperCase","_unused","hasAttachments","PagerButtons","useTranslation","navigateToPrevPage","disabled","prevToken","faChevronLeft","navigateToNextPage","nextToken","faChevronRight","ListActionButtons","selectedMessageIds","dispatchEvent","CustomEvent","detail","chkselected","list_toolbar_ListActionButtons","Footer","totalLabel","Eev","ViewMode","LIST","CONTENT","EDIT","MessageList","viewMode","contentMessageId","currentLabel","renderView","renderMessages","searchParam","location","search","parentLabel","prevState","msgId","x","MessageRow","renderEditView","_this$getPageTokens","getPageTokens","ListToolbar","list_footer_ListFooter","runScript","asyncToGenerator","mark","script","onerror","firstScript","getElementsByTagName","parentNode","insertBefore","loadReactApp","lexon","activityFunction","startsWith","Main","getLabelList","renderLabelRoutes","loadLabelMessages","isVisible","fluid","customAnimation","slow","alert","text","emit","User","signedInUser","labelPathMatch","toLowerCase","singleSpa","currentToken","currentSearchQuery","newPathToPush","elementos","getElementsByClassName","click","registerConnectorApp","Route","exact","path","render","that","message_list_MessageList","UserAgentApplication","logout","reload","header_Header","react_reflex_dist_es","orientation","maxSize","minSize","propagateDimensionsRate","propagateDimensions","flex","sidebar_Sidebar","propagate","Switch","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","renderInboxViewport","WelcomeContent","authButtonMethod","Login","isAuthenticated","Authenticating","Authenticating_WelcomeContent","AppContainerGraph","userAgentApplication","getUser","signInStatus","updateDefaultAccount","fetchUpdateDefaultAccount","userIdisNull","initClient","async","defer","onreadystatechange","readyState","constants","getUserProfile","onSignInSuccess","_","signOut","login","msUser","main_Main","authenticating_Authenticating","Login_Login","loginPopup","errParts","t0","mail","userPrincipalName","_context2","JSON","stringify","App","BrowserRouter","AppContainer","Boolean","hostname","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","dist_es","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3799a86.chunk.js","sourcesContent":["module.exports = {\n    appId: '0803434b-369f-4e1f-973b-85aa480dcf16',\n    scopes: [\n        'user.read',\n        'calendars.read',\n        'mail.read',\n        'mail.readwrite',\n        'mail.send'\n    ]\n};","export const SIGNED_OUT = 'SIGNED_OUT';\nexport const SIGNED_IN = 'SIGNED_IN';\nexport const AUTH_IN_PROGRESS = 'AUTH_IN_PROGRESS';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_SIGNED_OUT = 'AUTH_SIGNED_OUT';\nexport const PROVIDER = 'OUTLOOK';\n\nconst dev = {\n    url: {\n        URL_UPDATE_DEFAULTACCOUNT: 'http://localhost:3500/api/accounts/defaultaccount',\n        URL_RESET_DEFAULTACCOUNT: 'http://localhost:3500/api/accounts/resetdefaultaccount',\n        URL_SELECT_ACCOUNT: 'http://localhost:3000'     \n    }\n}\n\nconst prod = {\n    url: {\n        URL_UPDATE_DEFAULTACCOUNT: 'https://lefebvreservernode.azurewebsites.net/api/accounts/defaultaccount',\n        URL_RESET_DEFAULTACCOUNT: 'https://lefebvreservernode.azurewebsites.net/api/accounts/resetdefaultaccount',\n        URL_SELECT_ACCOUNT: 'https://Lefebvrerootapp'\n    }\n}\n\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\n\nexport const MAX_RESULTS = 20;","export const STORE_USER = 'STORE_USER';\r\n\r\nexport const storeUser = (userId) => dispatch => {\r\n    dispatch({\r\n        type: STORE_USER,\r\n        userId\r\n    });\r\n};","import { STORE_USER } from \"../actions/settings.actions\";\r\n\r\nconst defaultSettings = {\r\n    userId: ''\r\n};\r\n\r\nexport const storeUser = (state = defaultSettings, action) => {\r\n    switch (action.type) {\r\n        case STORE_USER:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            };      \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n  ","\n\nexport const getBody = (message, mimeType) => {\n  let encodedBody = \"\";\n  if (typeof message.parts === \"undefined\") {\n    encodedBody = message.body.data;\n  } else {\n    encodedBody = getHTMLPart(message.parts, mimeType);\n  }\n  encodedBody = encodedBody\n    .replace(/-/g, \"+\")\n    .replace(/_/g, \"/\")\n    .replace(/\\s/g, \"\");\n  return decodeURIComponent(escape(window.atob(encodedBody)));\n};\n\nconst getHTMLPart = (arr, mimeType) => {\n  for (let x = 0; x < arr.length; x++) {\n    if (typeof arr[x].parts === \"undefined\") {\n      if (arr[x].mimeType === mimeType) {\n        return arr[x].body.data;\n      }\n    } else {\n      return getHTMLPart(arr[x].parts, mimeType);\n    }\n  }\n  return \"\";\n};\n\nexport const isHTML = str => {\n  const doc = new DOMParser().parseFromString(str, \"text/html\");\n  return Array.from(doc.body.childNodes).some(node => node.nodeType === 1);\n}\n\nexport const base64MimeType = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n\r\n    if (mime && mime.length) {\r\n        result = mime[1];\r\n    }\r\n\r\n    return result;\r\n}\n\nexport const base64Data = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var data = encoded.split(\"base64,\")[1];\r\n\r\n    return data;\r\n}","import { getMessageList } from \"../../../../api_graph\";\nimport { getMessage } from \"../../../../api_graph\";\nimport { batchModify } from \"../../../../api_graph\";\nimport { selectLabel } from \"../../../sidebar/sidebar.actions\";\n\nexport const GET_MESSAGES = \"GET_MESSAGES\";\nexport const GET_MESSAGES_LOAD_IN_PROGRESS = \"GET_MESSAGES_LOAD_IN_PROGRESS\";\nexport const GET_MESSAGES_FAILED = 'GET_MESSAGES_FAILED';\nexport const TOGGLE_SELECTED = \"TOGGLE_SELECTED\";\nexport const MESSAGE_LOAD_IN_PROGRESS = \"MESSAGE_LOAD_IN_PROGRESS\";\nexport const MESSAGE_LOAD_SUCCESS = \"MESSAGE_LOAD_SUCCESS\";\nexport const MESSAGE_LOAD_FAIL = \"MESSAGE_LOAD_FAIL\";\nexport const EMPTY_MESSAGES = \"EMPTY_MESSAGES\";\nexport const SET_PAGE_TOKENS = \"SET_PAGE_TOKENS\";\nexport const ADD_INITIAL_PAGE_TOKEN = \"ADD_INITIAL_PAGE_TOKEN\";\nexport const CLEAR_PAGE_TOKENS = \"CLEAR_PAGE_TOKENS\";\nexport const MODIFY_MESSAGES_SUCCESS = \"MODIFY_MESSAGES_SUCCESS\";\nexport const MODIFY_MESSAGES_FAILED = \"MODIFY_MESSAGES_FAILED\";\nexport const SET_SEARCH_QUERY = \"SET_SEARCH_QUERY\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_LIST_MESSAGES = \"DELETE_LIST_MESSAGES\";\nexport const ADD_LIST_MESSAGES = \"ADD_LIST_MESSAGES\";\n\nexport const getLabelMessages = ({\n  labelIds,\n  q = \"\",\n  pageToken\n}) => (dispatch, getState) => {\n  dispatch(setMessageListLoadInProgress());\n\n  const state = getState();\n  const { searchQuery } = state;    \n\n  if (searchQuery !== \"\") {\n    dispatch(selectLabel(\"-1\"));\n  }\n\n    //Set PageToken to call api getMessageList  \n  if (state.messagesResult.paginatioDirectionSelected != null) {\n        // = prev\n        if (state.messagesResult.paginatioDirectionSelected == \"prev\") {\n            var skipValue = state.messagesResult[\"@odata.nextLink\"].split(\"skip=\")[1];\n            pageToken = state.messagesResult[\"@odata.nextLink\"].split(\"skip=\")[0] + \"skip=\" + (skipValue - 40);\n        }\n        // = next\n        else {\n            pageToken = state.messagesResult[\"@odata.nextLink\"];\n        }\n                   \n  }\n\n  // reset the state before reloading the object\n  delete state.messagesResult ;\n\n  getMessageList({ labelIds, maxResults: 20, q: searchQuery, pageToken }).then(response => {\n    dispatch({\n      type: GET_MESSAGES,\n      payload: response\n    });\n\n    dispatch(setPageTokens());\n    \n  }).catch(err => {\n    dispatch({\n      type: GET_MESSAGES_FAILED,\n      payload: err\n    })\n  });\n    };\n\nexport const setSearchQuery = q => ({\n  type: SET_SEARCH_QUERY,\n  payload: q\n})\n\nexport const setPageTokens = tokens => ({\n  type: SET_PAGE_TOKENS,\n  payload: tokens\n});\n\nexport const emptyLabelMessages = () => ({\n  type: EMPTY_MESSAGES\n});\n\nexport const toggleSelected = (messageIds, selected) => ({\n  type: TOGGLE_SELECTED,\n  payload: {\n    messageIds,\n    selected\n  }\n});\n\nexport const getEmailMessage = messageId => dispatch => {\n  dispatch(setMessageLoadInProgress());\n  getMessage(messageId)\n    .then(response => {\n      dispatch({\n        type: MESSAGE_LOAD_SUCCESS,\n        payload: response\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: MESSAGE_LOAD_FAIL,\n        payload: error\n      });\n    });\n};\n\nconst setMessageLoadInProgress = () => ({\n  type: MESSAGE_LOAD_IN_PROGRESS\n});\n\nconst setMessageListLoadInProgress = () => ({\n  type: GET_MESSAGES_LOAD_IN_PROGRESS\n});\n\nexport const addInitialPageToken = token => ({\n  type: ADD_INITIAL_PAGE_TOKEN,\n  payload: token\n})\n\nexport const clearPageTokens = () => ({\n  type: CLEAR_PAGE_TOKENS\n})\n\nexport const modifyMessages = ({ids, addLabelIds = [], removeLabelIds = []}) => dispatch => {\n  batchModify({ids, addLabelIds, removeLabelIds})\n    .then(modifiedIds => {\n      dispatch({\n       type: MODIFY_MESSAGES_SUCCESS,\n       payload: {modifiedIds, addLabelIds, removeLabelIds}\n      })\n    })\n    .catch(error => {\n      dispatch({\n       type: MODIFY_MESSAGES_FAILED\n      })\n    })\n}\n\nexport const addMessage = (messageId) => dispatch => {\n  const data = {\n      id: messageId,\n      content: messageId\n  };\n\n  dispatch({\n      type: ADD_MESSAGE,\n      data\n  });\n};\n\nexport const deleteMessage = (messageId) => dispatch => {\n  const data = {\n      id: messageId,\n      content: messageId\n  };\n\n  dispatch({\n      type: DELETE_MESSAGE,\n      data     \n  });\n};\n\nexport const deleteListMessages = (listMessages) => dispatch => {\n  dispatch({\n      type: DELETE_LIST_MESSAGES,\n      listMessages\n  });    \n};\n\nexport const addListMessages = (listMessages) => dispatch => {\n  dispatch({\n      type: ADD_LIST_MESSAGES,\n      listMessages\n  });    \n};\n","export const getValidEmails = (emailInput) => {\n  let result = [];\n  if (!emailInput || emailInput.trim() === '') {\n    return result;\n  }\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\n\n  for (let i = 0; i < emails.length; i++) {\n    const e = emails[i];\n    if (e === '') {continue;}\n\n    if (regex.test(e)) {\n      result.push(e);\n    }\n    else {\n      result = [];\n      break;\n    }\n  }\n  \n  return result;\n}\n\nexport const getNameEmail = (value) => {\n  if (!value) {return null;}\n  \n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\n  let m, name, email;\n  if ((m = regex.exec(value)) !== null) {\n    email = m[2];\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\n  }\n  return { name, email };\n}","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport { sendMessage } from \"../../api_graph\";\nimport { getValidEmails } from \"../../utils\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport ReactQuill from \"react-quill\";\nimport \"../../../node_modules/react-quill/dist/quill.snow.css\";\nimport \"./composeMessage.scss\";\n\n//import '@uppy/core/dist/style.css'\n//import '@uppy/drag-drop/dist/style.css'\n\nconst Uppy = require('@uppy/core')\nconst Tus = require('@uppy/tus')\nconst GoogleDrive = require('@uppy/google-drive')\nconst { Dashboard, DashboardModal, DragDrop, ProgressBar } = require('@uppy/react')\n\nexport class Compose extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayModal: false,\n      to: props.to || \"\",\n      cc: props.cc || \"\",\n      bcc: props.bcc || \"\",\n      subject: props.subject || \"\",\n      content: props.content || \"\",       \n      showInlineDashboard: false,\n      open: false,\n      uppyPreviews: []       \n    };   \n\n    this.showModal = this.showModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendEmail = this.sendEmail.bind(this);\n    this.setField = this.setField.bind(this);\n\n\n      this.uppy = new Uppy({ id: 'uppy1', autoProceed: false, debug: true })\n          .use(Tus, { endpoint: 'https://master.tus.io/files/' })\n          .use(GoogleDrive, { serverUrl: 'https://companion.uppy.io' })\n          \n      this.reader = new FileReader();      \n\n      //this.uppy2 = new Uppy({ id: 'uppy2', autoProceed: false, debug: true })\n      //    .use(Tus, { endpoint: 'https://master.tus.io/files/' }) \n          \n\n      this.handleModalClick = this.handleModalClick.bind(this)\n\n      this.uploadFile = this.uploadFile.bind(this);\n      this.addFileToState = this.addFileToState.bind(this);\n\n      this.uppy.on('complete', (result) => {\n          console.log('Upload complete! We�ve uploaded these files:', result.successful)\n      })\n\n\n\n      this.uppy.on('file-added', (file) => {\n          console.log('Added file', file);  \n          this.reader.onload = (readerEvt) =>\n          this.addFileToState({ file, base64: readerEvt.target.result });\n          // Define this onload every time to get file and base64 every time\n          this.reader.readAsDataURL(file.data);\n      });      \n      \n    \n    }  \n\n    addFileToState({ file, base64 }) {\n        this.setState({ uppyPreviews: [{ file, base64 }, ...this.state.uppyPreviews] });\n    }\n\n    uploadFile() {\n        console.log(this.state.uppyPreviews);\n        // this.uppyOne.upload();\n    }\n\n\n    componentWillUnmount() {\n        this.uppy.close()      \n    }\n\n    handleModalClick() {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    \n\n  showModal() {\n    this.setState({\n      displayModal: true\n    });   \n\n  }\n\n  closeModal() {\n    this.setState({\n      displayModal: false\n    });\n      this.uppy.close();\n      this.state.uppyPreviews = [];\n      this.uppy.reset();\n  }\n\n  \n\n  handleChange(value) {\n      this.setState({ content: value });      \n\n  }\n\n    sendEmail() {                 \n        \n    const validTo = getValidEmails(this.state.to);\n\n    if (\n      !validTo.length ||\n      this.state.subject.trim() === \"\" ||\n      this.state.content === \"\"\n    ) {\n      return;\n    }\n\n    const headers = {\n      To: validTo.join(\", \"),\n      Subject: this.state.subject,\n      attachments: this.state.uppyPreviews\n    };\n\n    const validCc = getValidEmails(this.state.cc);\n    if (validCc.length) {\n      headers.Cc = validCc.join(\", \");\n    }\n\n    const validBcc = getValidEmails(this.state.bcc);\n    if (validBcc.length) {\n      headers.Bcc = validBcc.join(\", \");\n    }\n\n     const Fileattached = this.state.uppyPreviews;      \n\n  sendMessage({     \n      data: this.state,\n      attachments: Fileattached\n      \n    }).then(response => {      \n      this.closeModal();\n      this.resetFields();\n    });    \n  }\n\n  resetFields() {\n    this.setState({\n      to: this.props.to || \"\",\n      cc: this.props.cc || \"\",\n      bcc: this.props.bcc || \"\",\n      subject: this.props.subject || \"\",\n      content: this.props.content || \"\",\n      uppyPreviews: []\n    });\n  }\n\n  setField(field, trimValue = true) {\n    return evt => {\n      this.setState({\n        [field]: trimValue ? evt.target.value.trim() : evt.target.value \n      });\n    };\n  }\n\n  isInvalid(field) {\n    const fieldValue = this.state[field].trim();\n    return fieldValue.length > 0 && !getValidEmails(fieldValue).length;\n  }\n\n  \n    render() {\n        const { showInlineDashboard } = this.state\n        const { t } = this.props;\n\n    return (\n      <React.Fragment>\n        {\n          React.cloneElement(this.props.children, {\n            onClick: this.showModal\n          })\n        }\n        {this.state.displayModal ? (\n          <Modal          \n            isOpen={this.state.displayModal}\n            className=\"compose-dialog\"\n            size=\"lg\"\n            overflow-y= \"initial !important\"\n            onOpened={this.onModalOpened}\n            backdrop=\"static\"\n            centered={true}\n          >\n            <ModalHeader toggle={this.closeModal}>{t('compose-message.compose-message')}</ModalHeader>\n            <ModalBody>\n              <div className=\"message-fields\">\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">{t('compose-message.to')}</InputGroupAddon>\n                  <Input\n                    tabIndex={1}\n                    value={this.state.to}\n                    placeholder={t('compose-message.comma-separated')}\n                    invalid={this.isInvalid(\"to\")}\n                    onChange={this.setField(\"to\")}\n                  />\n                </InputGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">Cc:</InputGroupAddon>\n                  <Input\n                    tabIndex={2}\n                    value={this.state.cc}\n                    placeholder={t('compose-message.comma-separated')}\n                    invalid={this.isInvalid(\"cc\")}\n                    onChange={this.setField(\"cc\")}\n                  />\n                </InputGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">Bcc:</InputGroupAddon>\n                  <Input\n                    tabIndex={3}\n                    placeholder={t('compose-message.comma-separated')}\n                    invalid={this.isInvalid(\"bcc\")}\n                    onChange={this.setField(\"bcc\")}\n                  />\n                </InputGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                  {t('compose-message.subject')}\n                  </InputGroupAddon>\n                  <Input\n                    tabIndex={4}\n                    placeholder=\"\"\n                    value={this.state.subject}\n                    onChange={this.setField(\"subject\", false)}\n                  />\n                </InputGroup>\n              </div>\n              <div className=\"editor-wrapper\">\n                <ReactQuill\n                  tabIndex={5}\n                  value={this.state.content}\n                  onChange={this.handleChange}\n                />\n              </div>  \n                                           \n            </ModalBody>                  \n            <ModalFooter className=\"footer\">\n              <Button\n                className=\"mr-auto font-weight-bold\"\n                size=\"lg\"\n                color=\"primary\"\n                onClick={this.sendEmail}\n                title={t('compose-message.send-message')}\n              >\n                {t('compose-message.send')}\n              </Button>{\" \"}            \n                            \n              <Button title={t('compose-message.discard')} color=\"light\" onClick={this.closeModal}>\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n                        \n            </ModalFooter> \n                    <div className=\"ImagePreviewContainer\">\n                        {\n                            this.state.uppyPreviews.map(\n                                item => {\n                                    return (                                       \n                                        <object className=\"FileList\"\n                                            key={item.file.id}\n                                            type={item.file.type}\n                                            width=\"80px\"\n                                            height=\"auto\"\n                                            data={item.base64}\n                                        >\n                                            {item.file.name}\n                                        </object>\n                                    );\n                                }\n                            )\n                        }\n                    </div>\n                    <ProgressBar\n                        uppy={this.uppy}\n                        hideAfterFinish={false}\n                    />\n                    <div id=\"Divfooter\">                       \n                        <DragDrop\n                            uppy={this.uppy}\n                            width='100%'\n                            height='130px'\n                            min-height='130px'                            \n                         \n                     />\n                       \n                    </div>\n                     \n          </Modal>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withTranslation()(Compose);\n","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport ComposeMessage from \"../../../compose-message/ComposeMessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faReply } from \"@fortawesome/free-solid-svg-icons\";\nimport { getNameEmail } from \"../../../../utils\";\nimport moment from \"moment\";\nimport \"./messageToolbar.scss\";\n\nexport class MessageToolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\n  }\n\n  getClickHandler(action) {\n    return evt => {\n      this.props.onClick(action);\n    };\n  }\n\n  render() {\n    const { t } = this.props;\n\n    if (!this.props.messageResult.result) {\n      return null;\n    }\n\n    const message = this.props.messageResult.result;\n    const { messageHeaders } = message;\n\n    let replyTo, cc, subject;\n    subject = messageHeaders.subject;    \n\n    replyTo = messageHeaders.from.emailAddress.address;      \n\n    for (let i = 0; i < messageHeaders.ccRecipients.length; i++) {\n        cc = messageHeaders.ccRecipients[i].emailAddress.address;\n    }\n\n    const nameEmail = getNameEmail(replyTo);    \n    let parsedDate = moment(messageHeaders.receivedDateTime);\n\n    if (!parsedDate.isValid()) {\n      parsedDate = moment(\n        parseInt(this.props.messageResult.result.internalDate)\n      );\n    }\n    const replyHeader = `<p>On ${parsedDate.format(\"MMMM Do YYYY, h:mm:ss a\")} < ${nameEmail.email} > wrote:</p>`;\n\n    const composeProps = {\n      subject: `Re: ${subject}`,\n      to: nameEmail.email,\n      content: `<p>&nbsp;</p>\n          <p>&nbsp;</p>\n          <p>&nbsp;</p>\n          ${replyHeader}\n          <blockquote>${this.props.messageResult.body.content}</blockquote>`,\n      ...(cc && { cc: cc.value })\n    };\n\n    return (\n      <div className=\"d-flex justify-content-center align-items-center message-toolbar\">\n        <div className=\"action-btns\">\n          <div className=\"action-btn mr-2\">\n            <button className=\"btn\" onClick={this.trashHandler}>\n              <FontAwesomeIcon\n                title={t('message-toolbar.move-to-trash')}               \n                icon={faTrash}\n                size=\"lg\"\n              />\n            </button>\n          </div>\n          <div className=\"action-btn mr-2\">\n            <ComposeMessage {...composeProps}>\n              <button className=\"btn\">\n                <FontAwesomeIcon\n                  title={t('message-toolbar.reply')}\n                  icon={faReply}\n                  size=\"lg\"\n                />\n              </button>\n            </ComposeMessage>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(MessageToolbar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, compose } from \"redux\";\nimport {\n  getEmailMessage,\n  modifyMessages\n} from \"../actions/message-list.actions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport MessageToolbar from \"../message-toolbar/MessageToolbar\";\n\nimport \"./messageContent.scss\";\n\n//BEGIN functions for attachment functionality\n\nfunction b64toBlob(b64Data, contentType, sliceSize) {\r\n    contentType = contentType || '';\r\n    sliceSize = sliceSize || 512;\r\n\r\n    var byteCharacters = atob(b64Data);\r\n    var byteArrays = [];\r\n\r\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        var byteNumbers = new Array(slice.length);\r\n        for (var i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        var byteArray = new Uint8Array(byteNumbers);\r\n\r\n        byteArrays.push(byteArray);\r\n    }\r\n\r\n    var blob = new Blob(byteArrays, { type: contentType });\r\n    return blob;\r\n}\n\n//function getAttachments(messageID, parts, callback) {\r\n//    var attachId = parts.body.attachmentId;\r\n//    var request = window.gapi.client.gmail.users.messages.attachments.get({\r\n//        'id': attachId,\r\n//        'messageId': messageID,\r\n//        'userId': 'me'\r\n//    });\r\n//    request.execute(function (attachment) {\r\n//        callback(parts.filename, parts.mimeType, attachment);\r\n//    });\r\n//}\n\nfunction addAttachmentElement(blobUrl, filename) {   \n    var aLink = document.createElement('a');\r\n    var linkText = document.createTextNode(filename);   \n    aLink.appendChild(linkText);    \r\n    aLink.href = blobUrl\r\n    aLink.title = filename\r\n    aLink.download = filename\r\n    aLink.style.textDecoration = \"none\";\r\n    aLink.style.padding = \"5px\";\r\n    aLink.style.margin = \"15px 0\";\r\n    aLink.style.clear = \"both\";    \r\n    return aLink\r\n}\n\nfunction addAttachmentContainer(mimeType) {\n    var aDiv = document.createElement('span');\r\n    aDiv.style.whiteSpace = \"nowrap\";\r\n    aDiv.style.backgroundColor = \"#fafafa\";\r\n    aDiv.style.border= \"solid 1px #aaa\";\r\n    aDiv.style.padding = \"5px\";    \r\n    aDiv.style.margin = \"10px\";    \r\n    aDiv.style.display = \"inline-block\";\r\n    var Img = addAttachmentImg(mimeType);\r\n    aDiv.appendChild(Img);    \r\n    return aDiv\r\n} \n\nfunction addAttachmentImg(mimeType) {\n    var aImg = document.createElement('img');\n    var imgPath;\n\n    switch (mimeType) {\r\n        case \"image/png\":\r\n            imgPath = \"../assets/img/file-extensions/png.png\"\r\n            break;\r\n        case \"image/jpeg\":\r\n            imgPath = \"../assets/img/file-extensions/jpg.png\"\r\n            break;\r\n        case \"application/pdf\":\r\n            imgPath = \"../assets/img/file-extensions/pdf.png\";\r\n            break;\r\n        case \"text/plain\":\r\n            imgPath = \"../assets/img/file-extensions/txt.png\";\r\n            break;\r\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n            imgPath = \"../assets/img/file-extensions/doc.png\";\r\n            break\r\n        default:\r\n            imgPath = \"../assets/img/file-extensions/default.png\";\r\n            break\r\n        // code block\r\n    }  \r\n    aImg.src = imgPath;\r\n    aImg.style.alt = \"Attached file\";    \r\n    //aImg.height = 42;\r\n    //aImg.width = 42;\r\n    aImg.style.display = \"inline-block\";\r\n    aImg.style.verticalAlign= \"middle\";\r\n    return aImg\r\n}\n\nfunction addDivDivider() {\n    var aDiv = document.createElement('div');    \r\n    aDiv.style.height = \"30px\";    \r\n    aDiv.id=\"Dividier\"\r\n    return aDiv\r\n} \n\n//END functions for attachment functionality\n\n\nexport class MessageContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: undefined\n    };\n\n    this.iframeRef = React.createRef();\n    this.modifyMessage = this.modifyMessage.bind(this);\n  }\n\n  componentDidMount(prevProps) {\n    const messageId = this.props.match.params.id;\n    this.props.getEmailMessage(messageId);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { emailMessageResult } = this.props;\n    if (!emailMessageResult.loading) {\n      if (!emailMessageResult.failed) {\n          if (this.iframeRef.current) {\n\n            const { body } = this.iframeRef.current.contentWindow.document;\n            body.style.margin = \"0px\";\n            body.style.fontFamily = \"Arial, Helvetica, sans-serif\";\n            body.style.fontSize = \"13px\";\n            body.innerHTML = this.props.emailMessageResult.body.content;\n\n            //Adding attach files  \n            var attach = emailMessageResult.attach;   \n            if (typeof attach !== 'undefined' && attach.length > 0) {\n                var iframe = document.getElementById('message-iframe');\n                var Divider = addDivDivider(); \n                iframe.contentDocument.body.appendChild(Divider);\n                for (var i = 0; i < attach.length; i++) {  \r\n                            let dataBase64Rep = attach[i].contentBytes.replace(/-/g, '+').replace(/_/g, '/')\r\n                            let urlBlob = b64toBlob(dataBase64Rep, attach[i].contentType, attach[i].size);\r\n                            //console.log(urlBlob);\r\n                            var blobUrl = URL.createObjectURL(urlBlob);\r\n                            var Attachment = addAttachmentElement(blobUrl,attach[i].name);                            \r\n                            var AttachmentDiv = addAttachmentContainer(attach[i].contentType);\r\n                            AttachmentDiv.appendChild(Attachment);                            \n                            iframe.contentDocument.body.appendChild(AttachmentDiv);   \n                };\r\n            }  \n        }\n      } else {\n        if (!this.state.errorMessage) {\n          this.setState({\n            //errorMessage: emailMessageResult.error.result.error.message,\n            errorMessage: \"error\",\n            modal: true\n          });\n        }\n      }\n    }\n    }   \n   \n  renderSpinner() {\n    return (\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n      </div>\n    );\n  }\n\n    renderErrorModal() {\n    //to-do alberto\n    // catch error page and redirect\n    //return <Redirect to=\"/notfound\" />;\n  }\n\n  modifyMessage(addLabelIds, removeLabelIds) {\n    const id = this.props.emailMessageResult.result.id;\n    const actionParams = {\n      ...(addLabelIds && { addLabelIds }),\n      ...(removeLabelIds && { removeLabelIds })\n    };\n    this.props.modifyMessages({ ids: [id], ...actionParams });\n    this.props.history.goBack();\n  }\n\n  render() {\n    if (this.props.emailMessageResult.loading) {\n      return this.renderSpinner();\n    }\n\n    return (\n      <React.Fragment>\n        <MessageToolbar \n          onClick={this.modifyMessage} \n          messageResult={this.props.emailMessageResult}\n        />\n        \n        <div className=\"d-flex justify-content-center align-items-center message-content\">\n          {this.props.emailMessageResult.loading ? this.renderSpinner() : null}\n          {this.state.errorMessage ? (\n            this.renderErrorModal()\n          ) : (\n            <iframe\n              ref={this.iframeRef}\n              title=\"Message contents\"\n              id=\"message-iframe\"\n              style={{\n                display: this.props.emailMessageResult.loading\n                  ? \"none\"\n                  : \"block\"\n              }}\n            />\n          )}\n            </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  emailMessageResult: state.emailMessageResult\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getEmailMessage,\n      modifyMessages\n    },\n    dispatch\n  );\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(MessageContent);\n","/// <reference path=\"../components/sidebar/Sidebar.jsx\" />\r\nimport { MAX_RESULTS } from \"../constants\";\nimport { getBody, isHTML, base64MimeType, base64Data } from './utils';\nimport config from '../Config';\nimport { MessageContent } from \"../components/content/message-list/message-content/MessageContent\";\r\n\nconst graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken) {\n    // Initialize Graph client\n    const client = graph.Client.init({\n        // Use the provided access token to authenticate\n        // requests\n        authProvider: (done) => {\n            done(null, accessToken);\n        }\n    });\n\n    return client;\n}\n\n//ALBERTO TO-DO IMPLEMENT RECURSIVE FOLDERS\n\n//export const getLabelList = () =>\n//    new Promise((resolve, reject) => {\n//        window.gapi.client.gmail.users.labels\n//            .list({\n//                userId: \"me\"\n//            })\n//            .then(getLabelDetails)\n//            .then(response => {\n//                resolve(response.map(el => el.result));\n//            });\n//    });\n\n//const getLabelDetailPromise = labelId => {\n//  return new Promise((resolve, reject) => {\n//    window.gapi.client.gmail.users.labels\n//      .get({\n//        userId: \"me\",\n//        id: labelId\n//      })\n//      .then(response => resolve(response));\n//  });\n//};\n\n//const getLabelDetails = labelList => {\n//  return new Promise((resolve, reject) => {\n//    const labelPromises = labelList.result.labels.map(el => {\n//      return getLabelDetailPromise(el.id);\n//    });\n\n//    Promise.all(labelPromises).then(response => resolve(response));\n//  });\n//};\n\n//END IMPLEMENT RECURSIVE FOLDERS\n\n\nexport const getLabelList = () =>\n    new Promise((resolve, reject) => {\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\n        const client = getAuthenticatedClient(accessToken);       \n        client\n            .api('/me/mailFolders')                      \n            .get()       \n            .then(response => {\n                resolve(response.value);\n        });\n    });\n\n\n//export const getMessageListPagination = ({ page }) =>\n//    new Promise((resolve, reject) => {       \n//        getMessagePaginationList(page)\n//            .then(getMessageHeaders)\n//            .then(messageResult =>\n//                flattenMessagesWithLabel(messageResult.messages, \"\").then(\n//                    labelMessagesDetails => resolve({\n//                        ...messageResult,\n//                        messages: labelMessagesDetails.messages,\n//                        label: labelMessagesDetails.label\n//                    })\n//                )\n//            )\n//            .catch(err => {\n//                reject(err);\n//            });\n//    });\n\nexport const getMessageList = ({ labelIds, maxResults, q, pageToken }) =>\n    new Promise((resolve, reject) => {      \n        getMessageRawList({ labelIds, maxResults, pageToken, q })       \n            .then(getMessageHeaders)\n            .then(messageResult =>\n                flattenMessagesWithLabel(messageResult.messages, labelIds).then(\n                    labelMessagesDetails => resolve({\n                        ...messageResult,\n                        messages: labelMessagesDetails.messages,\n                        label: labelMessagesDetails.label\n                    })\n                )\n            )\n            .catch(err => {\n                reject(err);\n            });\n    });\n\n//export const getMessageList = ({ labelIds, maxResults, q, pageToken }) =>\n//  new Promise((resolve, reject) => {\n//    getMessageRawList({ labelIds, maxResults, pageToken, q })\n//      .then(getMessageHeaders)\n//      .then(messageResult =>\n//        flattenMessagesWithLabel(messageResult.messages, labelIds).then(\n//          labelMessagesDetails => resolve({\n//            ...messageResult,\n//            messages: labelMessagesDetails.messages,\n//            label: labelMessagesDetails.label\n//          })\n//        )\n//      )\n//      .catch(err => {\n//        reject(err);\n//      });\n//  });\n\nexport const flattenMessagesWithLabel = (messages, labelIds) =>\n    new Promise((resolve, reject) => {\n\n        //if (!labelIds) {\n           resolve({\n                messages,\n                label: {\n                    result: {\n                        messagesTotal: 0\n                    }\n                }\n            });\n            return ;\n        //}\n\n        //window.gapi.client.gmail.users.labels\n        //    .get({\n        //        userId: \"me\",\n        //        id: labelIds[0]\n        //    })\n        //    .then(response =>\n        //        resolve({\n        //            messages,\n        //            label: response\n        //        })\n        //    );\n\n    });\n\n//export const flattenMessagesWithLabel = (messages, labelIds) =>\n//  new Promise((resolve, reject) => {\n\n//    if (!labelIds) {\n//      resolve({\n//        messages,\n//        label: {\n//          result: {\n//            messagesTotal: 0\n//          }\n//        }\n//      });\n//      return;\n//    }\n\n//    window.gapi.client.gmail.users.labels\n//      .get({\n//        userId: \"me\",\n//        id: labelIds[0]\n//      })\n//      .then(response =>\n//        resolve({\n//          messages,\n//          label: response\n//        })\n//      );\n//    });\n\nconst getMessagePaginationList = ({ query }) =>  \n    new Promise((resolve, reject) => {\n        query = `https://graph.microsoft.com/v1.0/me/mailFolders/AAMkADYwN2U5OWZlLWUwZDktNDQ3Yi05MTQ2LTMxYmUyMGExMjcwNgAuAAAAAAABGTrist65R5XlVfmY3KAqAQAcnBiKLwlKQrviB8XkwxacAAAAAAEMAAA=/messages?$top=20&$skip=80`\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\n        const client = getAuthenticatedClient(accessToken);\n            client\n                .api(`${query}`)\n               \n                .get()\n                .then(response => {\n                    resolve(response);\n                })\n                .catch(err => {\n                    reject(err);\n                });  \n    });\n\nconst getMessageRawList = ({ labelIds, maxResults, pageToken , q = \"\" }) =>\n    new Promise((resolve, reject) => {\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\n        const client = getAuthenticatedClient(accessToken);\n        //if (pageToken == null)\n        //    pageToken = 0\n        if (pageToken != null) {\n            client\n                .api(`${pageToken}`)\n\n                .get()\n                .then(response => {\n                    resolve(response);\n                })\n                .catch(err => {\n                    reject(err);\n                });\n\n        }\n        else {\n\n            if (q == \"\") {\n                client\n                    .api(`me/mailFolders/${labelIds}/messages`)\n                    .top(`${maxResults}`)\n                    .get()\n                    .then(response => {\n                        resolve(response);\n                    })\n                    .catch(err => {\n                        reject(err);\n                    });\r\n            }\n            else {\n                client\n                    .api(`me/messages?$search=${q}`)\n                    .top(`${maxResults}`)\n                    .get()\n                    .then(response => {\n                        resolve(response);\n                    })\n                    .catch(err => {\n                        reject(err);\n                    });\r\n            }\n\r\n        }       \n       \n    });\n\n//const getMessageRawList = ({ labelIds, maxResults, pageToken, q = \"\" }) =>\n//  new Promise((resolve, reject) => {\n//    window.gapi.client.gmail.users.messages\n//      .list({\n//        userId: \"me\",\n//        q,\n//        maxResults: maxResults || MAX_RESULTS,\n//        ...(labelIds && {labelIds}),\n//        ...(pageToken && { pageToken })\n//      })\n//      .then(response => resolve(response))\n//      .catch(err => {\n//        reject(err);\n//      });\n//  });\n\nconst getMessageHeaders = response => {\n    //const messageResult = response.result;\n    const messageResult = response;\n\n  return new Promise((resolve, reject) => {\n      //const headerPromises = (messageResult.messages || []).map(el => {\n      const headerPromises = (messageResult.value || []).map(el => {\n      return getMessageHeader(el.id);\n    });\n\n    Promise.all(headerPromises).then(messages =>\n      resolve({\n        ...messageResult,\n        messages\n      })\n    );\n  });\n};\n\nconst getMessageHeader = id => {\n    return new Promise((resolve, reject) => {\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\n        const client = getAuthenticatedClient(accessToken);\n        client\n            .api(`me/messages/${id}`)  \n            //.select('id,parentFolderId,')\n            .get()\n            .then(response => resolve(response))\n            .catch(err => {\n                reject(err);\n            });           \n    });\n};\n\nexport const getMessage = ( messageId ) =>\n  new Promise((resolve, reject) => {\n    getMessageDetail( messageId )     \n      .then(Messagedetail =>\n          getAttachmentsList(messageId).then(\n          MessagesandAttachementsDetails => resolve({\n            ...Messagedetail,\n              attach: MessagesandAttachementsDetails\n          })\n        )\n      )\n      .catch(err => {\n        reject(err);\n      });\n  });\n\n\nexport const getAttachmentsList = (messageId) => {\n    return new Promise((resolve, reject) => {\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\n        const client = getAuthenticatedClient(accessToken);\n        client\n            .api(`me/messages/${messageId}/attachments`)\n            .get()\n            .then(response => resolve(response.value))\n            .catch(err => {\n                reject(err);\n            });\n\n    });\n};\n\nexport const getMessageDetail = messageId => {\n  return new Promise((resolve, reject) => { \n      var accessToken = window.msal.acquireTokenSilent(config.scopes);\n      const client = getAuthenticatedClient(accessToken);\n      client\n      .api(`me/messages/${messageId}`)         \n      .get()     \n      .then(response => {\n       const result = response;\r\n       let body = result.body;          \n        resolve({\n          body,           \n          headers: response.headers,\n          result: { ...result, messageHeaders: result, payload: undefined }\n        });\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\n// Insert file attachments from Google Drive\r\nfunction getAttachments_(ids) {\r\n    var att = [];\r\n    for (var i in ids) {\r\n        var file = ids;\r\n        att.push({\r\n            mimeType: file.type(),\r\n            fileName: file.name(),\r\n            //bytes: Utilities.base64Encode(file.getBlob().getBytes())\r\n        });\r\n    }\r\n    return att;\r\n}\n\nexport const emailEnd = () => {\n    var email = `},\r\n                 \"SaveToSentItems\": \"true\"\r\n                  }`;\n    return email;\n};\n\nexport const emailBody = (data) => { \n    const subject = data.subject;\n    const bodyContent = data.content;\n    var email = `{\r\n                  \"Message\": {\r\n                    \"Subject\": \"${subject}\",\r\n                    \"Body\": {\r\n                      \"ContentType\": \"html\",\r\n                      \"Content\": \"${bodyContent}\"\r\n                    },\\r\\n`;   \n    return email;\n};\n\nexport const emailToRecipients = (data) => {\n    //to Recipients\n    var email = `[]`;\n    if (data.to === \"\")\n        return email \n\n    var toRecipients = data.to.split(\",\");\n    var email = `\"ToRecipients\": [`;\n    for (var i = 0; i < toRecipients.length; i++) {\n        email += `{\r\n                        \"EmailAddress\": {\r\n                          \"Address\": \"${toRecipients[i]}\"\r\n                        }\n                      },\\r\\n`;\n    };\n    email += `],\\r\\n`;\n    return email;\n};\n\nexport const emailToCcRecipients = (data) => {\n    //to Recipients\n    var email = `\"CcRecipients\": [],`;\n    if (data.cc === \"\")\n        return email \n\n    var toCcRecipients = data.cc.split(\",\");\n    email = `\"CcRecipients\": [`;\n    for (var i = 0; i < toCcRecipients.length; i++) {\n        email += `{\r\n                        \"EmailAddress\": {\r\n                          \"Address\": \"${toCcRecipients[i]}\"\r\n                        }\n                      },\\r\\n`;\n    };\n    email += `],\\r\\n`;\n    return email;\n};\n\nexport const emailToBccRecipients = (data) => {\n    //to BccRecipients\n    var email = `\"BccRecipients\": [],`;\n    if (data.bcc === \"\")\n        return email \n\n    var toBccRecipients = data.bcc.split(\",\");\n    email = `\"BccRecipients\": [`;\n    for (var i = 0; i < toBccRecipients.length; i++) {\n        email += `{\r\n                        \"EmailAddress\": {\r\n                          \"Address\": \"${toBccRecipients[i]}\"\r\n                        }\n                      },\\r\\n`;\n    };\n    email += `],\\r\\n`;\n    return email;\n};\n\nexport const emailAttachments = (data) => {\n    //to BccRecipients\n    var email = `\"Attachments\": [],`;\n    var attachments = data.uppyPreviews;\n\n    if (attachments.length <=0)\n        return email\n\n    \n    email = `\"Attachments\": [`;\n    for (var i = 0; i < attachments.length; i++) {\n\n        var mimetype = base64MimeType(attachments[i].base64);        \r\n        var fileData = base64Data(attachments[i].base64);\r\n        var fileName = attachments[i].file.name;\n\n        email += `{\r\n        \"@odata.type\": \"#Microsoft.OutlookServices.FileAttachment\",\r\n        \"Name\": \"${fileName}\",\r\n        \"ContentBytes\": \"${fileData}\"\r\n      },\\r\\n`;\n    };\n    email += `],\\r\\n`;\n    return email;\n};\n\n\nexport const sendMessage = ({ data, attachments }) => {\n    return new Promise((resolve, reject) => {\n        let email = \"\";\n        email = emailBody(data);        \n        email += emailToRecipients(data);       \n        email += emailToCcRecipients(data);\n        email += emailToBccRecipients(data);\n        email += emailAttachments(data);\n        email += emailEnd();\n       \n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\n        const client = getAuthenticatedClient(accessToken);       \n\n        return client\n            .api(\"/me/sendmail\")          \r\n            .header('Authorization', 'Bearer ' + accessToken)\r\n            .header('Content-Type', \"application/json\")\n            .post(email, (err, response) => {\r\n                resolve(response);\r\n            });\n    });\n};\n\n\n//export const batchModify = ({ids, addLabelIds = [], removeLabelIds = []}) => new Promise((resolve, reject) => {\n//  window.gapi.client.gmail.users.messages\n//    .batchModify({\n//      userId: \"me\",\n//      ids,\n//      addLabelIds,\n//      removeLabelIds\n//    })\n//    .then(response =>\n//      {\n//        resolve(ids)\n//      }\n//    );\n//});\n\nexport const batchModify = ({ ids, addLabelIds = [], removeLabelIds = [] }) =>\n    new Promise((resolve, reject) => {\n    var accessToken = window.msal.acquireTokenSilent(config.scopes);\n    const client = getAuthenticatedClient(accessToken);\n\n    var deleteFolder = \"deleteditems\";\n   \n    var DestinationId = `{\r\n                     \"destinationId\": \"${deleteFolder}\"\r\n                     }`;\n    return client\n        .api(`me/messages/${ids}/move`)\r\n        .header('Authorization', 'Bearer ' + accessToken)\r\n        .header('Content-Type', \"application/json\")\n        .post(DestinationId, (err, response) => {\r\n            resolve(ids);\r\n        });\n});\n","import { getLabelList } from \"../../api_graph\";\nimport { setSearchQuery } from \"../content/message-list/actions/message-list.actions\";\n\nexport const GET_LABELS = \"GET_LABELS\";\nexport const SELECT_LABEL = \"SELECT_LABEL\";\n\nexport const getLabels = () => dispatch => {\n  getLabelList().then(labelList => {\n    dispatch({\n      type: GET_LABELS,\n      payload: labelList\n    });\n  });\n};\n\nexport const selectLabel = (labelId) => dispatch => {\n  //dispatch(setSearchQuery(\"\"));\n  dispatch({\n    type: SELECT_LABEL,\n    payload: labelId\n  });\n};","import { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\n\nconst defaultLabelState = {\n    labels: []\n}\n\nexport const labelsResult = (state = defaultLabelState, action) => {\n  switch (action.type) {\n    case GET_LABELS:\n    console.log(action.payload);\n      return {\n        ...state,\n        labels: action.payload\n      };\n    case SELECT_LABEL:\n      return {\n        ...state, \n        labels: state.labels.map(el => {\n          if (el.id === action.payload) {\n            return {\n              ...el, \n              selected: true\n            }\n          }\n          return {\n            ...el, \n            selected: false\n          };\n        })\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MESSAGES,\n  GET_MESSAGES_FAILED,\n  TOGGLE_SELECTED,\n  MESSAGE_LOAD_IN_PROGRESS,\n  MESSAGE_LOAD_SUCCESS,\n  MESSAGE_LOAD_FAIL,\n  GET_MESSAGES_LOAD_IN_PROGRESS,\n  EMPTY_MESSAGES,\n  SET_PAGE_TOKENS,\n  ADD_INITIAL_PAGE_TOKEN,\n  CLEAR_PAGE_TOKENS,\n  MODIFY_MESSAGES_SUCCESS,\n  SET_SEARCH_QUERY,\n  ADD_MESSAGE,\n  DELETE_MESSAGE,\n  DELETE_LIST_MESSAGES,\n  ADD_LIST_MESSAGES  \n} from \"../actions/message-list.actions\";\n\nconst defaultMessagesState = {\n  messages: [],\n  loading: true,\n  pageTokens: [],\n  paginatioDirectionSelected: null\n};\n\nexport const messagesResult = (state = defaultMessagesState, action) => {\n  switch (action.type) {\n    case GET_MESSAGES:\n      const stateClone = {...state};\n      stateClone.nextPageToken = null;\n      const pageTokens = [...stateClone.pageTokens];\n      const nextPageToken = action.payload[\"@odata.nextLink\"]; \n    \n      if (nextPageToken && pageTokens.indexOf(nextPageToken) === -1) {\n        pageTokens.push(nextPageToken);\n      }\n      return {\n        ...stateClone,\n        ...action.payload,\n        loading: false,\n        pageTokens: pageTokens\n      };\n    case GET_MESSAGES_FAILED: {\n      return {\n        ...state,\n        loading: false,\n        failed: true,\n        error: action.payload\n      }\n    }\n    case EMPTY_MESSAGES:\n      return {...state, messages: []};\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\n      return {\n        ...state,\n        label: null,\n        nextPageToken: null,\n        loading: true\n      }\n    case TOGGLE_SELECTED:\n      return {\n        ...state,\n        messages: state.messages.map(el => {\n          if (action.payload.messageIds.indexOf(el.id) > -1) {\n            return { ...el, selected: action.payload.selected };\n          }\n          return el;\n        })\n      };\n    case ADD_INITIAL_PAGE_TOKEN:\n      return {\n        ...state,\n        pageTokens: [action.payload]\n      }\n    case CLEAR_PAGE_TOKENS:\n      return {\n        ...state,\n        pageTokens: []\n      }\n    case MODIFY_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        messages: state.messages.filter(el => action.payload.modifiedIds.indexOf(el.id) === -1)\n      }\n    default:\n      return state;\n  }\n};\n\nexport const pageTokens = (\n  state = { prevPageToken: \"\", nextPageToken: \"\" },\n  action\n) => {\n  switch (action.type) {\n    case SET_PAGE_TOKENS:\n      return {...state, ...action.payload};\n    default:\n      return state;\n  }\n};\n\nconst defaultEmailMessageResult = {\n  body: \"\",\n  loading: false,\n  failed: false\n};\n\nexport const emailMessageResult = (\n  state = defaultEmailMessageResult,\n  action\n) => {\n  switch (action.type) {\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\n    case MESSAGE_LOAD_IN_PROGRESS:\n      return { ...state, body: \"\", loading: true, failed: false };\n    case MESSAGE_LOAD_SUCCESS:\n      const {body, ...rest} = action.payload;\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n        failed: false\n      };\n    case MESSAGE_LOAD_FAIL:\n      return {\n        ...state,\n        loading: false,\n        failed: true,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport const searchQuery = (state = \"\", action) => {\n  switch(action.type) {\n    case SET_SEARCH_QUERY:\n      return action.payload\n    default:\n      return state;\n  }\n}\n\nconst defaultMessageList = {\n  selectedMessages: []\n};\n\nexport function messageList(state = defaultMessageList, action) {\n  switch(action.type) {\n      case ADD_MESSAGE: {\n          const index = state.selectedMessages.findIndex(message => message.id === action.data.id)\n          if (index === -1) {\n              return {\n                  ...state,\n                  selectedMessages: [...state.selectedMessages, action.data]                    \n              }\n          }\n          return state;     \n      }\n\n      case DELETE_MESSAGE: {\n          return {\n              ...state,\n              selectedMessages: state.selectedMessages.filter(message => message.id !== action.data.id)\n          }         \n      }\n\n      case DELETE_LIST_MESSAGES: {\n          for (let i=0; i < action.listMessages.length; i++) {\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\n              if (index > -1) {\n                  state.selectedMessages.splice(index, 1);\n              }    \n          }\n          return {\n              ...state,\n              selectedMessages: state.selectedMessages            }     \n      }\n\n      case ADD_LIST_MESSAGES: {\n          for (let i=0; i < action.listMessages.length; i++) {\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\n              if (index === -1) {\n                  const data = {id: action.listMessages[i], content: action.listMessages[i]}\n                  state.selectedMessages.push(data);\n              }    \n          }\n          return {\n              ...state,\n              selectedMessages: state.selectedMessages\n          }     \n      }\n\n      default: return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { signedOutReducer } from \"./gapi.reducers\";\nimport { signInStatusResult } from \"./gapi.reducers\";\nimport { storeUser } from \"./settings.reducers\";\n\nimport { labelsResult } from \"../components/sidebar/sidebar.reducers\";\nimport { messagesResult, emailMessageResult, pageTokens, searchQuery, messageList } from \"../components/content/message-list/reducers/message-list.reducers\";\n\nexport default combineReducers({\n  signedOutReducer,\n  signInStatusResult,\n  storeUser,\n  labelsResult,\n  messagesResult,\n  emailMessageResult,\n  pageTokens,\n  searchQuery,\n  messageList\n});\n","import {\n  SIGNED_OUT,\n  SIGNED_IN,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  AUTH_IN_PROGRESS,\n  AUTH_SIGNED_OUT\n} from \"../constants\";\n\nexport const signedOutReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SIGNED_OUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const signInStatusResult = (state = {}, action) => {\n  switch (action.type) {\n    case AUTH_IN_PROGRESS:\n      return {\n        ...state,\n        status: AUTH_IN_PROGRESS\n      };\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        status: AUTH_SUCCESS,\n        currentUser: action.payload.currentUser\n      };\n    case AUTH_FAIL:\n      return {\n        ...state,\n        status: AUTH_FAIL\n      };\n    case SIGNED_IN:\n      return { ...action.payload };\n    case SIGNED_OUT:\n    return {\n        ...state,\n        status: AUTH_SIGNED_OUT,\n        currentUser: {}\n      };\n    default:\n      return state;\n  }\n};\n","import i18n from 'i18next';\r\nimport XHR from 'i18next-xhr-backend';\r\n\r\nconst userLanguage = () => navigator.language;\r\n\r\ni18n\r\n  .use(XHR)\r\n  .init({\r\n    lng: userLanguage(),\r\n    fallbackLng: 'en',\r\n    ns: ['isotope'],\r\n    defaultNS: 'isotope',\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/{{ns}}.json'\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: 'languageChanged loaded',\r\n      bindStore: 'added removed',\r\n      nsMode: 'default',\r\n      useSuspense: false,\r\n    }\r\n  });\r\n\r\nexport default i18n;","var graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken) {\n    // Initialize Graph client\n    const client = graph.Client.init({\n        // Use the provided access token to authenticate\n        // requests\n        authProvider: (done) => {\n            done(null, accessToken);\n        }\n    });\n\n    return client;\n}\n\nexport async function getUserDetails(accessToken) {\n    const client = getAuthenticatedClient(accessToken);\n\n    const user = await client.api('/me').get();\n    return user;\n}\n\nexport async function getEvents(accessToken) {\n    const client = getAuthenticatedClient(accessToken);\n\n    const events = await client\n        .api('/me/events')\n        .select('subject,organizer,start,end')\n        .orderby('createdDateTime DESC')\n        .get();\n    return events;\n}","import React, { PureComponent } from \"react\";\nimport \"./header.scss\";\n//import Signout from \"../signout/Signout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport debounce from \"lodash/debounce\";\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { config } from \"../../constants\";\nimport { storeUser } from \"../../actions/settings.actions\";\n\nexport class Header extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this._handleOnClick = this._handleOnClick.bind(this);\n        this.performSearch = debounce(this.performSearch.bind(this), 1000);\n\n        this.toggle = this.toggle.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.state = {\n            dropdownOpen: false,\n            dropdownMenuOpen: false,\n        };\n    }\n\n    _handleOnClick(e) {\n        const userId = this.props.userId;\n        // console.log(\"userId ->\", userId);\n        if (userId !== '' && userId !== undefined) {\n            const url = `${config.url.URL_RESET_DEFAULTACCOUNT}/${userId}`;\n            fetch(url, {\n                method:'POST'\n            })\n            .then(r => r.json())\n            .then(result => {\n                console.log(result);\n                const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user/${userId}/encrypt/0`;\n                window.open(urlRedirect, '_self');\n            });            \n        }\n        else {\n            const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user`;\n            window.open(urlRedirect, '_self');\n        }\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    toggleMenu() {\n        this.setState({\n            dropdownMenuOpen: !this.state.dropdownMenuOpen,\n        });\n    }\n\n    handleSearchClick(evt) {\n        if (this.props.searhQuery !== \"\") {\n            this.performSearch();\n        }\n    }\n\n    handleInputChange(evt) {\n        this.props.setSearchQuery(evt.target.value);\n        this.performSearch();\n    }\n\n    performSearch() {\n        const searchParams = {}\n        if (!this.props.searchQuery || this.props.searchQuery === \"\") {\n            searchParams.labelIds = [\"INBOX\"];\n        }\n        this.props.getLabelMessages({ ...searchParams })\n    }\n\n    render() {\n        const userInfo = this.props.microsoftUser;\n        const email = userInfo.email;\n        const fullName = userInfo.displayName;\n        const picUrl = \"assets/img/user.png\";\n\n        return (\n            <header className=\"d-flex p-3 align-content-center align-items-center header \">\n                <div className=\"justify-content-left\">\n                    <Link to=\"/inbox\"><img border=\"0\" alt=\"lefebvre\" src=\"assets/img/lefebvre-logo.png\"></img></Link>\n                </div>\n                <div className=\"header-logo justify-content-center\">\n                    {/*<Link to=\"/inbox\"><img border=\"0\" alt=\"gmail\" src=\"assets/img/logo-elderecho.png\"></img></Link>*/}\n                    <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"office 365\" src=\"assets/img/office365.png\"></img></Link>\n                </div>\n                <div className=\"header-search\">\n                    <div className=\"input-group w-75 ml-1 mr-auto\">\n                        <input\n                            type=\"search\"\n                            className=\"form-control search\"\n                            placeholder=\"Search mail\"\n                            value={this.props.searchQuery}\n                            onChange={this.handleInputChange}\n                        />\n                        <div className=\"input-group-append\" onClick={this.handleSearchClick}>\n                            <button\n                                className=\"btn btn-light  bg-white text-dark btn-search\"\n                                type=\"button\"\n                            >\n                                <FontAwesomeIcon icon={faSearch} />\n                            </button>\n                        </div>\n                    </div>\n                    {/*<div className=\"header-logo justify-content-center\">\n                        <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"otulook\" src=\"assets/img/gmail.png\"></img></Link>                       \n                    </div>*/}\n                    <div>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem className=\"d-md-down-none\">\n                                <NavLink href=\"#\"><i className=\"icon-location-pin\"></i></NavLink>\n                            </NavItem>\n                            <Dropdown nav isOpen={this.state.dropdownMenuOpen} toggle={this.toggleMenu}>\n                                <DropdownToggle nav>\n                                    <img className=\"img-menu\" src=\"assets/img/menu.png\" alt=\"\" />\n                                </DropdownToggle>\n                                <DropdownMenu right>                                   \n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Calendar</DropdownItem>\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> File Manager</DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem><i className=\"fa fa-lock\"></i><span onClick={this._handleOnClick}> Return to Lex-on</span></DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </Nav>\n                    </div>   \n                    <div>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem className=\"d-md-down-none\">\n                                <NavLink href=\"#\"><i className=\"icon-location-pin\"></i></NavLink>\n                            </NavItem>\n                            <Dropdown nav isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                                <DropdownToggle nav>\n                                    <img className=\"mx-2 profile-pic img-circle\" src={picUrl} alt=\"\" />\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem header tag=\"div\" className=\"text-center\"><strong title={email}>{fullName}</strong></DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Add Account</DropdownItem>\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Create Account</DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem onClick={this.props.onSignout}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </Nav>\n                    </div> \n                </div>                \n            </header>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userId: state.storeUser.userId\n    }    \n};  \n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      storeUser\n    },\n    dispatch\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n\n// export default Header;\n","import React, { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport class LabelItem extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n\n  }\n\n  onClick(evt) {\n    this.props.onClick(evt, this.props.id);\n  }\n\n  render() {\n    const {name, messagesUnread} = this.props;\n    const iconProps = this.props.iconProps;\n\n    let selected = this.props.selected ? \" selected\" : \"\";\n\n    const messagesUnreadLocale = messagesUnread.toLocaleString();\n    return (\n      <li\n        className={`text-truncate text-left text-dark pl-4 pr-5 py-2 border-0 ${selected}`}\n        title={\n          name + (messagesUnread > 0 ? ` (${messagesUnreadLocale})` : \"\")\n        }\n        onClick={this.onClick}\n      >\n        <FontAwesomeIcon size=\"sm\" {...iconProps} />\n        {name}\n\n        {messagesUnread > 0 ? (\n          <div className={\"msg-count\"}>{messagesUnreadLocale}</div>\n        ) : null}\n      </li>\n    );\n  }\n}\n\nexport default LabelItem;\n","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport ComposeMessage from \"../compose-message/ComposeMessage\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport groupBy from \"lodash/groupBy\";\nimport sortBy from \"lodash/sortBy\";\n\nimport ReactDOM from 'react-dom';\n\nimport {\n  faInbox,\n  faEnvelope,\n  faTrash,\n  faCircle,\n  faExclamationCircle,\n  faArchive,\n  faFolder\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport LabelItem from \"./LabelItem\";\n\nimport \"./sidebar.scss\";\n\nexport class Sidebar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLabel: props.pathname,\n      selectedFolder: \"\"\n    };\n\n    //this.renderLabels = this.renderLabels.bind(this);\n    this.navigateToList = this.navigateToList.bind(this);\n  }\n\n  componentDidMount() {\n    //this.props.getLabelList(); //.then(labels => {});\n    /*  */\n    //this.props.getLabelMessages();\n  }\n\n  navigateToList(evt, labelId) {\n    const label = this.props.labelsResult.labels.find(el => el.id === labelId);\n    this.setState({selectedFolder: labelId});\n    this.props.onLabelClick(label || { id: \"\" });\n  }\n\n  renderItems(labelList) {\n    if (labelList.length === 0) {\n      return <div />;\n    }\n\n    const labels = labelList.reduce((acc, el) => {\n      acc.push(el);\n      return acc;\n    }, []);\n\n      const labelGroups = labels\n      //const labelGroups = groupBy(labels, \"type\");\n      //var visibleLabels=[];\n      var sortedLabels = [];\n\n      //if (labelGroups.user != null) {      \n      //    visibleLabels = labelGroups.user.filter(\n      //        el =>\n      //            //el.labelListVisibility === \"labelShow\" ||\n      //            //el.labelListVisibility === \"labelShowIfUnread\" ||\n      //            !el.labelListVisibility || true\n      //    );\n      //   sortedLabels = sortBy(visibleLabels, \"name\");\n      //}\n\n      sortedLabels = sortBy(labels, \"displayName\");\n\n    //return (\n    //  <React.Fragment>\n    //    {this.renderFolders(labelGroups)}        \n    //    {this.renderLabels(sortedLabels)}\n    //  </React.Fragment>\n    //);\n      return (\n          <React.Fragment>             \n              {this.renderLabels(sortedLabels)}\n          </React.Fragment>\n      );\n\n  }\n\n  //  renderFolders(labels) {\n  //  const inboxArchive = {\n  //    ...labels.find(el => el.id === \"ARCHIVE\"),\n  //    name: \"Inbox\",\n  //    icon: faInbox\n  //   };\n  //  const inboxLabel = {\n  //    ...labels.find(el => el.id === \"INBOX\"),\n  //    name: \"Inbox\",\n  //    icon: faInbox\n  //  };\n  //  const sentLabel = {\n  //    ...labels.find(el => el.id === \"SENT\"),\n  //    messagesUnread: 0,\n  //    name: \"Sent\",\n  //    icon: faEnvelope\n  //  };\n  //  const trashLabel = {\n  //    ...labels.find(el => el.id === \"TRASH\"),\n  //    messagesUnread: 0,\n  //    name: \"Trash\",\n  //    icon: faTrash\n  //  };\n  //  const spamLabel = {\n  //    ...labels.find(el => el.id === \"SPAM\"),\n  //    name: \"Spam\",\n  //    icon: faExclamationCircle\n  //  };\n\n  //  const folders = [inboxLabel, sentLabel, trashLabel, spamLabel];\n\n  //  return (\n  //    <React.Fragment>\n  //      <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\n  //        Folders\n  //      </li>\n  //      {folders.map(el => {\n  //        const iconProps = { icon: el.icon, size: \"lg\" };\n  //        return (\n  //          <LabelItem\n  //            key={el.id + \"_label\"}\n  //            onClick={this.navigateToList}\n  //            name={el.name}\n  //            id={el.id}\n  //            messagesUnread={el.messagesUnread}\n  //            iconProps={iconProps}\n  //            selected={el.selected}\n  //          />\n  //        );\n  //      })}\n  //    </React.Fragment>\n  //  );\n  //}\n\n  \n    \n   \n\n    renderLabels(labels) {        \n      const { t } = this.props;\n      let folder = this.state.selectedFolder;\n\n      return (\n        <React.Fragment>\n          <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\n            {t('sidebar.folders')}\n          </li>\n          {labels.map(el => {\n            const iconProps = {\n              icon: faFolder,\n              color: el.color ? el.color.backgroundColor : \"gainsboro\",\n              size: \"lg\"\n            };            \n            if (folder === \"\") {\n              folder = el.id;\n            }\n            return (\n              <LabelItem\n                key={el.id + \"_label\"}\n                onClick={this.navigateToList}\n                name={el.displayName}\n                id={el.id}\n                messagesUnread={el.totalItemCount}\n                iconProps={iconProps}\n                selected={folder === el.id}\n              />\n            );\n          })}\n        </React.Fragment>\n      );\n  }\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <nav className=\"d-flex flex-column text-truncate left-panel\">\n        <div className=\"compose-panel\">\n          <div className=\"d-flex justify-content-center p-2 compose-btn\">\n            <ComposeMessage\n              subject=\"\"\n              to=\"\"\n            >\n                <button className=\"btn btn btn-outline-secondary uppercase align-self-center w-75 font-weight-bold uppercase\">\n                 {t('sidebar.compose')}\n              </button>\n            </ComposeMessage>\n          </div>\n        </div>\n        <PerfectScrollbar\n          component=\"ul\"\n          className=\"d-flex flex-column border-0 m-0 sidebar\"\n        >\n          {this.renderItems(this.props.labelsResult.labels)}\n        </PerfectScrollbar>\n      </nav>\n    );\n  }\n}\n\nexport default withTranslation()(Sidebar);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default () => {\n  return (\n    <div className=\"d-flex w-100 h-100 flex-column justify-content-center align-items-center\">\n    <div>\n      <FontAwesomeIcon icon={faExclamationTriangle} size=\"5x\" />\n    </div>\n      <div className=\"h1\">404 ERROR</div>\n      <div>The requested content was not found.</div>\n    </div>\n  );\n};\n","import React, {PureComponent} from 'react';\nimport './checkbox.scss';\n\nexport class Checkbox extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChecked: !!props.checked\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.checked !== this.props.checked) {\n      this.setState({\n        isChecked: this.props.checked\n      })\n    }\n  }\n\n  onChange(evt) {\n    this.setState({\n      isChecked: !this.state.isChecked\n    })\n    this.props.onChange(evt);\n  }\n\n  render() {\n    return (\n      <label className=\"custom-control fill-checkbox\">\n        <input checked={this.state.isChecked} \n          type=\"checkbox\" \n          onChange={this.props.onChange} \n          className=\"fill-control-input\" \n        />\n        <span className=\"fill-control-indicator\" />\n        {\n          this.props.label ? (\n            <span className=\"fill-control-description\">\n             {this.props.label}\n            </span>\n          ) : null\n        }\n      </label>\n    )\n  }\n}\n\nexport default Checkbox;","import React from \"react\";\nimport Checkbox from \"../../../common/Checkbox\";\n\nexport default props => {\n  return (\n    <div className=\"d-flex ml-2 justify-content-center align-items-center\">\n      <Checkbox checked={props.selected} onChange={props.onChange} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div className=\"wrapper text-4\">\n      <div className=\"wrapper align-items-center text-2\">\n        <div className=\"text from-name\">{props.fromName}</div>\n        <div className=\"text\">{props.subject}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperclip } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default (props) => {\n  return (\n    <div className=\"wrapper num-4\">\n      <div className=\"wrapper num-2\">\n        <div className=\"num pr-4\">\n          {props.hasAttachment ? (\n            <FontAwesomeIcon icon={faPaperclip} />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"num pr-4\">{props.formattedDate}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { PureComponent } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\nimport MesssageCheckbox from \"./MessageCheckbox\";\n\nimport NameSubjectFields from \"./NameSubjectFields\";\nimport AttachmentDateFields from \"./AttachmentDateFields\";\nimport { getNameEmail } from '../../../../utils';\n\n\nexport class MessageItem extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.getMessage = this.getMessage.bind(this);  \n  }\n\n  onSelectionChange(evt) {\n    this.props.onSelectionChange(evt.target.checked, this.props.data.id);\n  }\n\n  getMessage(evt) { \n      const EncodeIdMessage = encodeURI(this.props.data.id);     \n      this.props.history.push(`/${EncodeIdMessage}`);     \n  }\n\n  getFromName(from) {\n    const nameEmail = getNameEmail(from);\n    return nameEmail.name;\n  }\n\n  getFormattedDate(date, fallbackDateObj) {\n    let messageDate = moment(date);\n    if (!messageDate.isValid()) {\n      messageDate = moment(fallbackDateObj.parserFn(fallbackDateObj.date));\n    }\n    const nowDate = moment(new Date());\n    const isMessageFromToday = messageDate.format(\"YYYYMMDD\") === nowDate.format(\"YYYYMMDD\");\n    let formattedDate;\n    if (isMessageFromToday) {\n      formattedDate = messageDate.format(\"h:mm A\");\n    }\n    else {\n      if (messageDate.year() !== nowDate.year()) {\n        formattedDate = messageDate.format(\"YYYY/MM/DD\");\n      }\n      else {\n        formattedDate = messageDate.format(\"MMM D\");\n      }\n    }\n    return formattedDate;\n  }\n\n  render() {\n\n    const receivedHeader = \"\"\n    const date = this.props.data.receivedDateTime;\n    let formattedDate = this.getFormattedDate(date, {date: this.props.data.internalDate, parserFn: parseInt});\n    const unread = this.props.data.isRead === false ? \" font-weight-bold\" : \"\";\n    const selected =  \"\";\n    const subjectHeader = this.props.data.bodyPreview;\n    const subject = this.props.data.subject;\n    let fromName = \"\";\n\n    //For unusual cases taht the data.from.emailAddress not exist -  to-do Alberto\n    //(ask for undefined object)\n    try {\n        const fromHeader = this.props.data.from.emailAddress.name.toUpperCase() + \" \" + this.props.data.from.emailAddress.address;\r\n        fromName = this.props.data.from.emailAddress.name\r\n      }\n    catch{\n        const fromHeader = \"\";          \r\n    }  \n\n    return (\n      <div className={`d-flex table-row-wrapper${selected}`}>\n        <MesssageCheckbox\n          selected={this.props.data.selected}\n          onChange={this.onSelectionChange}\n        />\n        <div\n          onClick={this.getMessage}\n          className={`table-row px-2 py-3${unread}`}\n        >\n          <NameSubjectFields fromName={fromName} subject={subject} />\n          <AttachmentDateFields\n            formattedDate={formattedDate}\n            hasAttachment={\n              //this.props.data.payload.mimeType === \"multipart/mixed\"\n              this.props.data.hasAttachments\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MessageItem);\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default (props) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"btn-group ml-auto\">\n      <button\n        onClick={props.navigateToPrevPage}\n        disabled={props.prevToken == null}\n        className=\"btn btn-light bg-white border-1 border-dark px-3 btn-sm\"\n        title={t('pager-buttons.previous-page')}\n      >\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </button>\n      <button\n        onClick={props.navigateToNextPage}\n        disabled={props.nextToken == null} \n        className=\"btn btn-light bg-white border-1  border-dark px-3 btn-sm\"\n        title={t('pager-buttons.next-page')}\n      >\n        <FontAwesomeIcon icon={faChevronRight} />\n      </button>\n    </div>\n  );\n}","import React, { PureComponent } from \"react\";\nimport { withTranslation } from 'react-i18next';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport './listToolbar.scss';\n\nexport class ListActionButtons extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.getClickHandler = this.getClickHandler.bind(this);\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\n  }\n\n  getClickHandler(action) {\n    return evt => {\n      this.props.onClick(action);\n    };\n  }\n\n  render() {\n    const { t } = this.props;\n    \n    return (\n      <div>\n        <div className=\"action-btn\">\n          <FontAwesomeIcon\n            title={t('message-list.move-to-trash')}\n            onClick={this.trashHandler}\n            icon={faTrash}\n            size=\"lg\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(ListActionButtons);\n","import React, { PureComponent } from \"react\";\nimport Checkbox from \"../../../common/Checkbox\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  toggleSelected,\n  modifyMessages\n} from \"../actions/message-list.actions\";\nimport Pager from \"../pager-buttons/PagerButtons\";\nimport ListActionButtons from \"./ListActionButtons\";\n\nimport { deleteListMessages, addListMessages } from \"../actions/message-list.actions\";\n\nexport class MessageToolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\n    this.modifyMessages = this.modifyMessages.bind(this);\n      \n    this.state = {\n      selectedMessageIds: []\n    };\n  }\n\n  onSelectionChange(evt) {\n    const checked = evt.target.checked;\n\n    const messageIds = this.props.messagesResult.messages.reduce((acc, el) => {\n      acc.push(el.id);\n      return acc;\n    }, []);\n\n    this.setState({\n      selectedMessageIds: messageIds\n    });\n\n    this.props.toggleSelected(messageIds, checked);\n\n    window.dispatchEvent(new CustomEvent(\"CheckAllclick\", {\n      detail: {\n          listMessages: messageIds,\n          chkselected : checked\n      }         \n    }));\n\n    checked ? this.props.addListMessages(messageIds) : this.props.deleteListMessages(messageIds);\n  }\n\n  navigateToNextPage() {    \n      this.props.messagesResult.paginatioDirectionSelected = \"next\";    \n      this.props.getLabelMessages(\"\", \"\", \"\")\n  }\n\n  navigateToPrevPage() {    \n      this.props.messagesResult.paginatioDirectionSelected = \"prev\";\n      this.props.getLabelMessages(\"\", \"\", \"\");\n  }\n\n  modifyMessages(addLabelIds, removeLabelIds) {\n    const ids = this.props.messagesResult.messages.filter(el => el.selected).map(el => el.id);\n    const actionParams = {\n      ...addLabelIds && {addLabelIds},\n      ...removeLabelIds && {removeLabelIds}\n    };\n    this.props.modifyMessages({ ids, ...actionParams});\n  }\n\n  render() {\n\n    let checked = false;\n    let selectedMessages = [];\n\n    if (this.props.messagesResult) {\n      selectedMessages = this.props.messagesResult.messages.filter(el => el.selected);\n      checked = this.props.messagesResult.messages.length > 0 &&  selectedMessages.length === this.props.messagesResult.messages.length;\n    }\n\n    return (\n      <div className=\"msg-toolbar\">\n        <div className=\"pl-2 py-2 pr-4 d-flex align-items-center bd-highlight \">\n          <div className=\"d-flex align-content-center align-items-center\">\n            <div>\n              <Checkbox checked={checked} onChange={this.onSelectionChange} />\n            </div>\n            <div />\n\n            <div className=\"ml-auto p-2 bd-highlight\">\n              <div>\n                {selectedMessages.length ? (\n                  <ListActionButtons onClick={this.modifyMessages} />\n                ) : null}\n              </div>\n            </div>\n          </div>\n\n          <Pager\n            nextToken={this.props.nextToken}\n            prevToken={this.props.prevToken}\n            navigateToPrevPage={this.navigateToPrevPage}\n            navigateToNextPage={this.navigateToNextPage}\n            getLabelMessages={this.getLabelMessages}\n\n          />         \n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  messagesResult: state.messagesResult,\n  selectedMessages: state.messageList.selectedMessages\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      toggleSelected,\n      modifyMessages,\n      deleteListMessages,\n      addListMessages\n    },\n    dispatch\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MessageToolbar);","import React, { PureComponent } from \"react\";\nimport './ListFooter.scss';\n\nexport class Footer extends PureComponent {\n  render() {\n    const { messagesTotal } = this.props;\n    let totalLabel = '';\n    if (messagesTotal > 0) {\n      totalLabel = `${messagesTotal.toLocaleString()} messages`;\n    }\n\n    return (\n        <div className=\"mt-auto p-2  list-footer\" >\n        <div className=\"d-flex px-4 h-100 align-items-center\">\n          <div className=\"total-count\">{totalLabel}</div>\n          <div className=\"ml-auto \"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import Eev from 'eev'\n\nexport const e = new Eev()\n\nexport default e\n","import React, { PureComponent } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { withTranslation } from 'react-i18next';\nimport { bindActionCreators, compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport MessageRow from \"./message-row/MessageRow\";\n\nimport { addMessage, deleteMessage } from \"./actions/message-list.actions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport ListToolbar from \"./list-toolbar/ListToolbar\";\nimport ListFooter from \"./list-footer/ListFooter\";\nimport \"./messageList.scss\";\nimport { map } from \"rsvp\";\nimport e from '../../../event-bus'\n\nconst ViewMode = {\n  LIST: 1,\n  CONTENT: 2,\n  EDIT: 3\n};\n\nexport class MessageList extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewMode: ViewMode.LIST,\n      contentMessageId: undefined,\n      currentLabel: \"\"\n    };\n\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.renderView = this.renderView.bind(this);\n    this.renderMessages = this.renderMessages.bind(this);\n  }\n\n  componentDidMount() {\n    const searchParam = this.props.location.search;\n    const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n\n    if (token && this.props.messagesResult.pageTokens.length === 0) {\n      this.props.addInitialPageToken(token);\n    }\n\n    const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\n\n    this.props.getLabelMessages({\n      ...labelIds && {labelIds},\n      pageToken: token\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const searchParam = this.props.location.search;\n      const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n\n      const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\n\n      this.props.getLabelMessages({\n        ...labelIds && {labelIds},\n        pageToken: token\n      });\n    }\n  }\n\n  onSelectionChange(selected, msgId) {\n      this.props.toggleSelected([msgId], selected);\n      //e.emit('received', { text: \"Id: \" + msgId + \" selected: \" + selected })\n      window.dispatchEvent(new CustomEvent(\"Checkclick\", {\n          detail: {\n              name: msgId,\n              chkselected: selected\n          }\n      }));\n\n      selected ? this.props.addMessage(msgId) : this.props.deleteMessage(msgId);\n  }\n  \n\n  renderSpinner() {\n    return (\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n      </div>\n    );\n  }\n\n  renderMessages() {\n    const { t } = this.props;\n\n    if (this.props.messagesResult.loading) {\n      return this.renderSpinner();\n    } else if (this.props.messagesResult.messages.length === 0) {\n      return (\n        <div className=\"p-4 text-center\">\n          {t('message-list.no-message')}\n        </div>\n      );\n    }\n\n    return this.props.messagesResult.messages.map(el => {\n      if (this.props.selectedMessages.find(x => x.id === el.id)) {\n        el.selected = true;\n      }\n\n      return (\n        <MessageRow\n          data={el}\n          key={el.id}\n          onSelectionChange={this.onSelectionChange}\n          onClick={this.getMessage}\n        />\n      );\n    });\n  }\n\n  renderView() {\n    const { viewMode } = this.state;\n\n    switch (viewMode) {\n\n      case ViewMode.EDIT:\n        return this.renderEditView();\n\n      default:\n        return this.renderMessages();\n    }\n  }\n\n  getPageTokens() {\n        if (this.props.messagesResult.loading) {\n            return { nextToken: null, prevToken: null }\n        }        \n        let prevToken;\n        let nextToken;\n        if (this.props.messagesResult.pageTokens[0] != null) {\n            nextToken = true;\n            if (this.props.messagesResult.pageTokens[0].split(\"skip=\")[1] > 20)\n                prevToken = true;\n      } \n      return { nextToken, prevToken };\n  }  \n\n  render() {\n    const { messagesResult } = this.props;\n    const messagesTotal = messagesResult.label ? messagesResult.label.result.messagesTotal : 0;\n    const { nextToken, prevToken } = this.getPageTokens();        \n\n    return (\n      <React.Fragment>       \n        <ListToolbar\n          nextToken={nextToken}\n          prevToken={prevToken}\n          navigateToNextPage={this.props.navigateToNextPage}\n          navigateToPrevPage={this.props.navigateToPrevPage}\n          getLabelMessages={this.props.getLabelMessages} \n        />\n        <PerfectScrollbar className=\"container-fluid no-gutters px-0 message-list-container\">\n          {this.renderView()}\n        </PerfectScrollbar>\n        <ListFooter messagesTotal={messagesTotal} />\n      </React.Fragment>\n    );\n  }  \n}\n\nconst mapStateToProps = (state) => {\n  return {\n      selectedMessages: state.messageList.selectedMessages\n  }    \n};  \n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addMessage,\n      deleteMessage\n    },\n    dispatch\n);\n\nexport default compose(\n  withRouter,\n  withTranslation(),\n  connect(\n      mapStateToProps,\n      mapDispatchToProps\n  )\n)(MessageList);\n\n","export const runScript = async (url) => {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.onload = resolve;\n        script.onerror = reject;\n\n        const firstScript = document.getElementsByTagName('script')[0];\n        firstScript.parentNode.insertBefore(script, firstScript);\n    });\n};\n\nexport const matchingPathname = (pathnames) =>\n    (location) =>\n        pathnames.some(pathname => location.pathname === pathname);\n","import * as singleSpa from \"single-spa\";\nimport {matchingPathname, runScript} from \"./utils\";\n\nconst loadReactApp = async () => {\n    await runScript('http://localhost:3003/static/js/main.js');\n    //await runScript('https://lefebvre-multichannel-inbox-lexonconnector.azurewebsites.net/static/js/main.js');\n    return window.lexon;\n};\n\nconst activityFunction = location => location.pathname.startsWith('/');\n\nexport const registerLexonApp = () => {\n    singleSpa.registerApplication('lexon-app', loadReactApp, activityFunction);\n};","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, compose } from \"redux\";\nimport Header from \"../header/Header\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport NotFound from \"../not-found/NotFound\";\nimport './main.scss';\nimport MessageList from \"../content/message-list/MessageList\";\nimport MessageContent from \"../content/message-list/message-content/MessageContent\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { getLabels } from \"../sidebar/sidebar.actions\";\n\nimport {\n  getLabelMessages,\n  emptyLabelMessages,\n  toggleSelected,\n  setPageTokens,\n  addInitialPageToken,\n  clearPageTokens,\n  setSearchQuery\n} from \"../content/message-list/actions/message-list.actions\";\n\nimport {selectLabel} from '../sidebar/sidebar.actions';\nimport {signOut} from '../../api_graph/authentication';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faWindowClose, faClosedCaptioning, faDoorClosed, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\r\n    ReflexContainer,\r\n    ReflexSplitter,\r\n    ReflexElement\r\n} from 'react-reflex'\n\nimport 'react-reflex/styles.css'\n\nimport { start, registerApplication } from 'single-spa'\nimport e from '../../event-bus'\n\nimport * as singleSpa from 'single-spa';\nimport { registerLexonApp } from \"../../apps/lexonconn-app\";\n\nexport class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLabelList = this.getLabelList.bind(this);\n    this.getLabelMessages = this.getLabelMessages.bind(this);\n    this.renderLabelRoutes = this.renderLabelRoutes.bind(this);\n    this.loadLabelMessages = this.loadLabelMessages.bind(this);\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\n    this.addInitialPageToken = this.addInitialPageToken.bind(this);\n    this.onSignout = this.onSignout.bind(this);\n\n    this.state = {         \n       isVisible: true,\n       fluid: true,\n       customAnimation: false,\n       slow: false,\n       size: 0.25\n    };\n\n    e.on('message', function (data) {\r\n          alert('got ' + data.text);\r\n          e.emit('received', { text: 'Woohoo! Hello from Multi-channel app!' })\r\n    });\n\n  }\n  \n  componentDidMount() {\n    /* Label list is fetched from here \n    so that we can declare Routes by labelId \n    before rendering anything else */\n    this.getLabelList();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //if (prevProps.signedInUser !== this.props.signedInUser) {\n    //  this.setState({\n    //    signedInUser: this.props.signedInUser\n    //  });\n    //}\n\n      if (prevProps.User !== this.props.User) {\n          this.setState({\n              signedInUser: this.props.User\n          });\n      }\n\n    \n\n\n    const {labels} = this.props.labelsResult;\n    const {pathname} = this.props.location;\n    const selectedLabel = labels.find(el => el.selected);\n    const labelPathMatch = labels.find(el => el.id.toLowerCase() === pathname.slice(1));\n    if (!selectedLabel) {\n      if (labelPathMatch && this.props.searchQuery === \"\") {\n        this.props.selectLabel(labelPathMatch.id);\n      }      \n    }\n    else {\n      if (labelPathMatch && selectedLabel.id !== labelPathMatch.id) {\n        this.props.selectLabel(labelPathMatch.id);\n      } \n    }\n  }\n\n    registerConnectorApp() {\r\n        let el = document.getElementById('main-lexon-connector')\n        if (!el) {\n            try {\n                //const activityFunction = location => location.pathname.startsWith('/');\r\n                //registerApplication('lex-on-connector', () => import('../../lex-on_connector/index.js'), activityFunction);\r\n                //start();\n\n                registerLexonApp();\n                singleSpa.start();\n            }\n            catch (error) {\n                console.error(error);\n            }\n        }\r\n\r\n    }\n\n  navigateToNextPage(token) {\n    const searchParam = this.props.location.search;\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : \"\";\n    this.props.setPageTokens({\n      prevPageToken: currentToken\n    });\n    this.props.history.push(token);\n  }\n\n  navigateToPrevPage(token) {\n    this.props.history.push(token);\n  }\n\n  loadLabelMessages(label) {\n    const currentSearchQuery = this.props.searchQuery;\n    this.props.clearPageTokens();\n    this.props.selectLabel(label.id);    \n\n    const newPathToPush = `/${label.id.toLowerCase()}`;\n\n    if (currentSearchQuery && currentSearchQuery !== \"\") {\n      this.props.setSearchQuery(\"\");\n      const {pathname} = this.props.location;\n      if (newPathToPush === pathname) {\n        this.getLabelMessages({labelIds: [label.id] });\n        return;\n      }\n    }\n\n    this.props.history.push(`/${label.id.toLowerCase()}`);\n  }\n  \n\n  getLabelList() {\n      this.props.getLabels();\n\n      //alberto to-do first load in default folder\n      var elementos = document.getElementsByClassName('py-2');\n      if (elementos.length > 0)\n          elementos[0].click();\n\n  }\n\n  getLabelMessages( labelIds, q, pageToken ) {    \n      this.props.emptyLabelMessages(); \n      this.props.getLabelMessages(labelIds, q, pageToken);\n      this.registerConnectorApp();\n  }\n\n  addInitialPageToken(token) {\n    this.props.addInitialPageToken(token);\n  }\n\n  renderLabelRoutes() {\n    return this.props.labelsResult.labels.map(el => (\n      <Route\n        key={el.id + '_route'}\n        exact\n        path={\"/\" + el.id}\n        render={props => {          \n          const that = this;\n          return (\n            <MessageList\n              {...props}\n              getLabelMessages={this.getLabelMessages}\n              messagesResult={this.props.messagesResult}\n              toggleSelected={this.props.toggleSelected}\n              navigateToNextPage={this.navigateToNextPage}\n              navigateToPrevPage={this.navigateToPrevPage}\n              pageTokens={this.props.pageTokens}\n              addInitialPageToken={this.addInitialPageToken}\n              parentLabel={that.props.labelsResult.labels.find(el => el.id === props.match.path.slice(1) )}\n              searchQuery={this.props.searchQuery}\n            />\n          )\n        }}\n      />\n    ));    \n  }\n\n  renderSpinner() {\n    return (\n      <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n      </div>\n    )\n  }\n\n  onSignout() {  \n      signOut()     \n      this.props.history.push(`/inbox`)\n    //this.props.history.replace('inbox');     \n    window.location.reload(true); \n      \n  }\n\n  renderInboxViewport() {\n\n    let imgUrl = 'assets/img/settings-gears.svg'\n\n    if (this.props.labelsResult.labels.length < 1) {\n      return this.renderSpinner();\n    }\n\n      return (   \n          <Fragment>\n              <Header microsoftUser={this.props.User}\n                  onSignout={this.onSignout}\n                  setSearchQuery={this.props.setSearchQuery}\n                  getLabelMessages={this.getLabelMessages}\n                  searchQuery={this.props.searchQuery}\n              />\n              <section className=\"main hbox space-between\">\n                  <ReflexContainer orientation=\"vertical\">\r\n                      <ReflexElement maxSize={300} minSize={150} className=\"left-pane\"\r\n                          propagateDimensionsRate={200}\r\n                          propagateDimensions={true}\r\n                          flex={0.2}>\r\n                          <PerfectScrollbar>\r\n                              <div className=\"pane-content\">\r\n                                  <Sidebar\n                                      getLabelList={this.getLabelList}\n                                      pathname={this.props.location.pathname}\n                                      labelsResult={this.props.labelsResult}\n                                      onLabelClick={this.loadLabelMessages}\n                                  />\r\n                              </div>\r\n                          </PerfectScrollbar>\r\n                      </ReflexElement>\r\n                      <ReflexSplitter propagate={true} />\r\n                      <ReflexElement minSize={400} className=\"middle-pane\"\r\n                          propagateDimensionsRate={400}\r\n                          propagateDimensions={true}\r\n                          flex={0.6}>\r\n                          <PerfectScrollbar>\r\n                              <div className=\"pane-content\" style={{ height: '60%' }}>\r\n                                  <article className=\"d-flex flex-column\">\n                                      <Switch>\n                                          {this.renderLabelRoutes()}\n                                          <Route\n                                              exact\n                                              path=\"/notfound\"\n                                              component={NotFound}\n                                          />\n                                          <Route\n                                              exact\n                                              path=\"/:id([a-zA-Z0-9!@#$%^&+=_-]+)\"\n                                              component={MessageContent}\n                                          />\n                                      </Switch>\n                                  </article>\r\n                              </div>\r\n                          </PerfectScrollbar>\r\n                      </ReflexElement>\r\n                      <ReflexSplitter propagate={true} />\r\n                      <ReflexElement minSize={400} className=\"right-pane\"\r\n                          propagateDimensionsRate={400}\r\n                          propagateDimensions={true}\r\n                          flex={0.2}>\r\n                          <div id=\"main-content\" className=\"connector\" style={{\r\n                              backgroundImage: 'url(' + imgUrl + ')',\r\n                              backgroundSize: '120px',\r\n                              backgroundPosition: 'center 5%',\r\n                              backgroundRepeat: 'no-repeat',\r\n                          }}>\n                              <div className=\"connector\" id=\"lexon-app\" />\r\n                          </div>\r\n                      </ReflexElement>\r\n                  </ReflexContainer>\n              </section>\n          </Fragment>  \n    );\n  }\n\n    render()\n    { \n       return this.renderInboxViewport();\n    }\n\n   \n\n}\n\nconst mapStateToProps = state => ({\n  labelsResult: state.labelsResult,\n  messagesResult: state.messagesResult,\n  pageTokens: state.pageTokens,\n  searchQuery: state.searchQuery\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getLabels,\n      getLabelMessages,\n      emptyLabelMessages,\n      toggleSelected,\n      selectLabel,\n      setPageTokens,\n      addInitialPageToken,\n      clearPageTokens,\n      setSearchQuery\n    },\n    dispatch\n  );\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Main);\n","import config from '../Config';\nimport { UserAgentApplication } from 'msal';\n\n\nexport const signOut = () => {    \n    var userAgentApplication = new UserAgentApplication(config.appId, null, null);\n    userAgentApplication.logout();\n    return true\n}\n\n","import React from 'react';\nimport './Login.scss';\n\nfunction WelcomeContent(props) {    \n    return <a href=\"#\" className=\"login\" onClick={props.authButtonMethod}><img border=\"0\" alt=\"Microsoft\" className=\"w3-btn\" src=\"assets/img/singinms.png\"></img></a>;\n}\n\nexport default class Login extends React.Component {\n    render() {\n        return (\n            <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center w3-btn\">\n                <div className=\"mx-auto\">\n                    <div>                       \n                        <WelcomeContent\n                            isAuthenticated={this.props.isAuthenticated}\n                            user={this.props.user}\n                            authButtonMethod={this.props.authButtonMethod}\n                            logout={this.props.logout}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport './Authenticating';\nimport { Button, Jumbotron } from 'reactstrap';\n\n\nfunction WelcomeContent(props) {\n    // If authenticated, greet the user\n    if (props.isAuthenticated) {\n        return (\n            <div>\n                <h4>Welcome {props.user.displayName}!</h4>\n                <p>Use the navigation bar at the top of the page to get started.</p>\n            </div>\n        );\n    }\n\n    // Not authenticated, present a sign in button\n    //return <Button color=\"primary\" onClick={props.authButtonMethod}>Click here to sign in</Button>;\n    alert(\"7\");\n    return <a href=\"#\" onClick={props.authButtonMethod}><img border=\"0\" alt=\"Microsoft\" src=\"assets/img/singinms.png\"></img></a>;\n\n}\n\nexport class Authenticating extends Component {\n\n  render() {\n    return (\n        <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center w3-btn\" style=\"box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\">\n            <div className=\"mx-auto\">\n                <div>                    \n                    <WelcomeContent\n                        isAuthenticated={this.props.isAuthenticated}\n                        user={this.props.user}\n                        authButtonMethod={this.props.authButtonMethod} />\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Authenticating;\n","import config from './Config';\nimport { UserAgentApplication } from 'msal';\nimport React, { Component } from 'react';\nimport { getUserDetails } from './GraphService';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { withRouter } from \"react-router-dom\";\n\nimport { bindActionCreators, compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport Main from \"./components/main/Main\";\nimport Login from \"./components/login/Login\";\nimport Authenticating from \"./components/authenticating/Authenticating\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { mountScripts } from \"./api_graph/scripts\";\n\nimport {\n    SIGNED_OUT,   \n    AUTH_SUCCESS,\n    AUTH_FAIL,\n    AUTH_IN_PROGRESS,\n    PROVIDER,\n} from \"./constants\";\n\nimport { config as constants } from \"./constants\";\n\nimport { storeUser } from \"./actions/settings.actions\";\n\nclass AppContainerGraph extends Component {\n    constructor(props) {\n        super(props);\n\n        this.userAgentApplication = new UserAgentApplication(config.appId, null, null);\n\n        var user = this.userAgentApplication.getUser();\n\n        this.state = {\n            signInStatus: SIGNED_OUT,\n            //msUser: undefined,\n            isAuthenticated: (user !== null),\n            user: {},\n            error: null,\n            updateDefaultAccount: false,\n            fetchUpdateDefaultAccount: false,\n            userIdisNull: false\n        };\n\n        this.init = this.init.bind(this);\n        this.initClient = this.initClient.bind(this);\n        //this.onSignout = this.onSignout.bind(this);\n       // this.onSignInSuccess = this.onSignInSuccess.bind(this);\n        //this.onSignIn = this.onSignIn.bind(this);\n    }\n\n    componentDidMount() {\n        mountScripts().then(this.init);\n\n        if (!this.state.updateDefaultAccount) {\n            const userId = this.props.match.params.id;\n            console.log('userId -> ', userId);\n            if (userId != null) {\n              const url = `${constants.url.URL_UPDATE_DEFAULTACCOUNT}/${userId}/${PROVIDER}`;\n              fetch(url, {\n                  method:'POST',\n              })\n              .then(r => r.json())\n              .then(result => {\n                  console.log(result);\n                  this.setState({ updateDefaultAccount: true });\n                  this.setState({ fetchUpdateDefaultAccount: true });\n                  this.props.storeUser(userId);\n              });\n            }        \n        }\n        else {\n          this.setState({ userIdisNull: true });\n        }\n    \n        this.props.location.pathname = '/inbox';\n    }\n\n    init() {\n        this.initClient();\n    }\n\n    initClient() {\n        //checkSignInStatus()\n        //    .then(this.onSignInSuccess)\n        //    .catch(_ => {\n        //        this.setState({\n        //            signInStatus: AUTH_FAIL\n        //        })\n        //    });\n        this.getUserProfile()\n            .then(this.onSignInSuccess)\n            .catch(_ => {\n                this.setState({\n                    signInStatus: AUTH_FAIL\n                });\n                this.getUserProfile();\n            });\n    }\n\n    onSignout() {\n        this.props.signOut();\n    }\n\n    onSignIn() {\n        this.login().then(this.onSignInSuccess);\n    }\n\n    onSignInSuccess(msUser) {\n        this.setState({\n            signInStatus: AUTH_SUCCESS,\n            msUser\n        });\n    }\n\n    renderView() {\n\n        const { signInStatus } = this.state;\n\n        if (signInStatus === AUTH_SUCCESS) { \n            return <Main User={this.state.user} />;           \n        } else if (signInStatus === AUTH_IN_PROGRESS) {\n            return <Authenticating />;\n        } else {\n            return <Login isAuthenticated={this.state.isAuthenticated}\n                user={this.state.user}\n                authButtonMethod={this.login.bind(this)}\n                logout={this.logout.bind(this)}\n            />;\n        }\n    }\n\n    render() {\n\n        if (!this.state.fetchUpdateDefaultAccount && this.state.userIdisNull) {\n            return null;\n        }\n            \n        return (\n            <React.Fragment>\n                {this.renderView()}       \n            </React.Fragment>\n    \n            // <React.Fragment>\n            //     {this.props.location.pathname === \"/\" ? (\n            //         <Redirect to=\"/inbox\" />\n            //     ) : (\n            //             this.renderView()\n            //         )}\n            // </React.Fragment>\n        );\n    }\n\n    setErrorMessage(message, debug) {\n        this.setState({\n            error: { message: message, debug: debug }\n        });\n    }\n\n    async login() {\n        try {\n            await this.userAgentApplication.loginPopup(config.scopes);\n            await this.getUserProfile();\n        }\n        catch (err) {\n            var errParts = err.split('|');\n            this.setState({\n                isAuthenticated: false,\n                user: {},\n                error: { message: errParts[1], debug: errParts[0] }\n            });\n        }\n    }\n\n    logout() {\n        this.userAgentApplication.logout();\n    }\n\n    async getUserProfile() {\n        try {\n            // Get the access token silently\n            // If the cache contains a non-expired token, this function\n            // will just return the cached token. Otherwise, it will\n            // make a request to the Azure OAuth endpoint to get a token\n\n            var accessToken = await this.userAgentApplication.acquireTokenSilent(config.scopes);\n\n            if (accessToken) {\n                // Get the user's profile from Graph\n                var user = await getUserDetails(accessToken);\n                this.onSignInSuccess();\n                this.setState({\n                    isAuthenticated: true,\n                    user: {\n                        displayName: user.displayName,\n                        email: user.mail || user.userPrincipalName\n\n                    },\n                    error: null\n                });\n            }\n            return true\n        }\n        catch (err) {\n            var error = {};\n            if (typeof (err) === 'string') {\n                var errParts = err.split('|');\n                error = errParts.length > 1 ?\n                    { message: errParts[1], debug: errParts[0] } :\n                    { message: err };\n            } else {\n                error = {\n                    message: err.message,\n                    debug: JSON.stringify(err)\n                };\n            }\n\n            this.setState({\n                isAuthenticated: false,\n                user: {},\n                error: error\n            });\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userId: state.storeUser.userId\n    }    \n};  \n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      storeUser\n    },\n    dispatch\n);\n\nexport default compose(\n    withRouter,\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )\n)(AppContainerGraph);\n\n//export default withRouter(AppContainerGraph);","export const mountScripts = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      script.onload = () => {};\n      resolve();\n    };\n    script.onreadystatechange = () => {\n      if (script.readyState === \"complete\") script.onload();\n    };\n    document.body.appendChild(script);\n  });\n};\n\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route } from 'react-router-dom'\n\nimport AppContainer from \"./AppContainer-graph\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n        {/* <AppContainer /> */}\n        <Route path=\"/:id?\" component={AppContainer} />\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './services/i18n';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <I18nextProvider i18n={i18n}>\n            <App />\n        </I18nextProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore(initialState={}) {\n return createStore(\n  rootReducer,\n   applyMiddleware(thunk)\n );\n}"],"sourceRoot":""}