{"version":3,"sources":["Config.jsx","constants/index.jsx","actions/settings.actions.jsx","reducers/settings.reducers.jsx","api_graph/utils.jsx","components/content/message-list/actions/message-list.actions.jsx","utils/index.jsx","components/compose-message/ComposeMessage.jsx","components/content/message-list/message-toolbar/MessageToolbar.jsx","components/content/message-list/message-content/MessageContent.jsx","api_graph/index.jsx","components/sidebar/sidebar.actions.jsx","components/sidebar/sidebar.reducers.jsx","components/content/message-list/reducers/message-list.reducers.jsx","reducers/rootReducer.jsx","reducers/gapi.reducers.jsx","services/i18n.js","GraphService.js","api_graph/authentication.jsx","components/header/Header.jsx","components/sidebar/LabelItem.jsx","components/sidebar/Sidebar.jsx","components/not-found/NotFound.jsx","components/common/Checkbox.jsx","components/content/message-list/message-row/MessageCheckbox.jsx","components/content/message-list/message-row/NameSubjectFields.jsx","components/content/message-list/message-row/AttachmentDateFields.jsx","components/content/message-list/message-row/MessageRow.jsx","components/content/message-list/pager-buttons/PagerButtons.jsx","components/content/message-list/list-toolbar/ListActionButtons.jsx","components/content/message-list/list-toolbar/ListToolbar.jsx","components/content/message-list/list-footer/ListFooter.jsx","event-bus/index.js","components/content/message-list/MessageList.jsx","apps/utils.js","apps/lexonconn-app.js","components/main/Main.jsx","components/login/Login.jsx","components/authenticating/Authenticating.jsx","AppContainer-graph.js","api_graph/scripts.jsx","App.js","serviceWorker.js","index.js","store.jsx"],"names":["module","exports","appId","scopes","SIGNED_OUT","config","url","URL_UPDATE_DEFAULTACCOUNT","URL_RESET_DEFAULTACCOUNT","URL_DELETE_ACCOUNT","URL_SELECT_ACCOUNT","storeUser","userId","dispatch","type","defaultSettings","base64MimeType","encoded","result","mime","match","length","ADD_MESSAGE","DELETE_MESSAGE","DELETE_LIST_MESSAGES","ADD_LIST_MESSAGES","getLabelMessages","_ref","labelIds","pageToken","q","getState","setMessageListLoadInProgress","state","searchQuery","selectLabel","messagesResult","paginatioDirectionSelected","skipValue","split","getMessageList","maxResults","then","response","payload","setPageTokens","catch","err","setSearchQuery","tokens","emptyLabelMessages","toggleSelected","messageIds","selected","getEmailMessage","messageId","setMessageLoadInProgress","getMessage","error","addInitialPageToken","token","clearPageTokens","modifyMessages","_ref2","ids","_ref2$addLabelIds","addLabelIds","_ref2$removeLabelIds","removeLabelIds","batchModify","modifiedIds","addMessage","data","id","content","deleteMessage","deleteListMessages","listMessages","addListMessages","getValidEmails","emailInput","trim","regex","emails","replace","i","e","test","push","getNameEmail","value","m","name","email","exec","slice","indexOf","Uppy","require","Tus","GoogleDrive","DragDrop","Dashboard","DashboardModal","ProgressBar","Compose","_PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayModal","to","cc","bcc","subject","showInlineDashboard","open","uppyPreviews","showModal","bind","assertThisInitialized","closeModal","handleChange","sendEmail","setField","uppy","autoProceed","debug","use","endpoint","serverUrl","reader","FileReader","handleModalClick","uploadFile","addFileToState","on","console","log","successful","file","onload","readerEvt","base64","target","readAsDataURL","inherits","createClass","key","setState","concat","toConsumableArray","close","reset","_this2","validTo","headers","To","join","Subject","attachments","validCc","Cc","validBcc","Bcc","Fileattached","sendMessage","resetFields","field","_this3","trimValue","arguments","undefined","evt","defineProperty","fieldValue","t","react_default","a","createElement","Fragment","React","cloneElement","children","onClick","reactstrap_es","isOpen","className","size","overflow-y","onOpened","onModalOpened","backdrop","centered","toggle","addonType","tabIndex","placeholder","invalid","isInvalid","onChange","lib_default","color","title","index_es","icon","faTrash","map","item","width","height","hideAfterFinish","min-height","PureComponent","withTranslation","MessageToolbar","trashHandler","getClickHandler","action","messageResult","replyTo","messageHeaders","from","emailAddress","address","ccRecipients","nameEmail","parsedDate","moment","receivedDateTime","isValid","parseInt","internalDate","replyHeader","format","composeProps","objectSpread","body","ComposeMessage","faReply","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","addAttachmentElement","blobUrl","filename","aLink","document","linkText","createTextNode","appendChild","href","download","style","textDecoration","padding","margin","clear","addAttachmentContainer","mimeType","aDiv","whiteSpace","backgroundColor","border","display","Img","imgPath","aImg","src","alt","verticalAlign","addAttachmentImg","MessageContent","_Component","errorMessage","iframeRef","createRef","modifyMessage","prevProps","params","emailMessageResult","loading","failed","modal","current","contentWindow","fontFamily","fontSize","innerHTML","attach","iframe","getElementById","Divider","addDivDivider","contentDocument","urlBlob","contentBytes","Attachment","URL","createObjectURL","AttachmentDiv","faSpinner","spin","actionParams","history","goBack","renderSpinner","message_toolbar_MessageToolbar","renderErrorModal","ref","Component","compose","withRouter","connect","bindActionCreators","graph","getAuthenticatedClient","accessToken","Client","init","authProvider","done","Promise","resolve","reject","getMessageRawList","getMessageHeaders","flattenMessagesWithLabel","messages","labelMessagesDetails","label","messagesTotal","_ref3","_ref3$q","client","window","msal","acquireTokenSilent","api","get","top","headerPromises","el","getMessageHeader","all","getMessageDetail","Messagedetail","getAttachmentsList","MessagesandAttachementsDetails","_ref4","bodyContent","emailBody","toRecipients","emailToRecipients","toCcRecipients","emailToCcRecipients","toBccRecipients","emailToBccRecipients","fileData","fileName","emailAttachments","header","post","_ref5","DestinationId","getLabels","labelList","labelId","defaultLabelState","labels","defaultMessagesState","pageTokens","defaultEmailMessageResult","defaultMessageList","selectedMessages","combineReducers","signedOutReducer","signInStatusResult","status","currentUser","labelsResult","stateClone","nextPageToken","filter","_action$payload","objectWithoutProperties","prevPageToken","messageList","findIndex","message","_loop","index","splice","_loop2","i18n","XHR","lng","navigator","language","fallbackLng","ns","defaultNS","backend","loadPath","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","useSuspense","getUserDetails","_x","_getUserDetails","apply","_callee","user","regenerator_default","wrap","_context","prev","next","sent","abrupt","stop","signOut","UserAgentApplication","logout","Header","handleInputChange","handleSearchClick","_handleOnClick","performSearch","debounce","toggleMenu","dropdownOpen","dropdownMenuOpen","fetch","method","JSON","stringify","provider","microsoftUser","Content-type","r","json","urlRedirect","searhQuery","searchParams","userInfo","fullName","displayName","Link","faSearch","navbar","nav","right","tag","divider","onSignout","LabelItem","_this$props","messagesUnread","iconProps","messagesUnreadLocale","toLocaleString","assign","Sidebar","selectedLabel","pathname","selectedFolder","navigateToList","find","onLabelClick","sortedLabels","reduce","acc","sortBy","renderLabels","folder","faFolder","sidebar_LabelItem","totalItemCount","react_perfect_scrollbar_lib_default","component","renderItems","NotFound","faExclamationTriangle","Checkbox","isChecked","checked","MessageCheckbox","common_Checkbox","NameSubjectFields","fromName","AttachmentDateFields","hasAttachment","faPaperclip","formattedDate","MessageItem","onSelectionChange","EncodeIdMessage","encodeURI","date","fallbackDateObj","messageDate","parserFn","nowDate","Date","year","getFormattedDate","unread","isRead","bodyPreview","toUpperCase","_unused","hasAttachments","PagerButtons","useTranslation","navigateToPrevPage","disabled","prevToken","faChevronLeft","navigateToNextPage","nextToken","faChevronRight","ListActionButtons","selectedMessageIds","dispatchEvent","CustomEvent","detail","chkselected","list_toolbar_ListActionButtons","Footer","totalLabel","Eev","ViewMode","LIST","CONTENT","EDIT","MessageList","viewMode","contentMessageId","currentLabel","renderView","renderMessages","searchParam","location","search","parentLabel","prevState","msgId","x","MessageRow","renderEditView","_this$getPageTokens","getPageTokens","ListToolbar","list_footer_ListFooter","runScript","asyncToGenerator","mark","script","onerror","firstScript","getElementsByTagName","parentNode","insertBefore","loadReactApp","lexon","activityFunction","startsWith","Main","getLabelList","renderLabelRoutes","loadLabelMessages","isVisible","fluid","customAnimation","slow","alert","text","emit","User","signedInUser","labelPathMatch","toLowerCase","singleSpa","currentToken","currentSearchQuery","newPathToPush","elementos","getElementsByClassName","click","registerConnectorApp","Route","exact","path","render","that","message_list_MessageList","reload","header_Header","react_reflex_dist_es","orientation","maxSize","minSize","propagateDimensionsRate","propagateDimensions","flex","sidebar_Sidebar","propagate","Switch","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","renderInboxViewport","WelcomeContent","authButtonMethod","Login","isAuthenticated","Authenticating","Authenticating_WelcomeContent","AppContainerGraph","userAgentApplication","getUser","signInStatus","updateDefaultAccount","fetchUpdateDefaultAccount","userIdisNull","initClient","async","defer","onreadystatechange","readyState","getUserProfile","onSignInSuccess","_","login","msUser","constants","main_Main","authenticating_Authenticating","Login_Login","loginPopup","errParts","t0","mail","userPrincipalName","_context2","App","BrowserRouter","AppContainer","Boolean","hostname","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","dist_es","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff7eca46.chunk.js","sourcesContent":["module.exports = {\r\n    appId: '0803434b-369f-4e1f-973b-85aa480dcf16',\r\n    scopes: [\r\n        'user.read',\r\n        'calendars.read',\r\n        'mail.read',\r\n        'mail.readwrite',\r\n        'mail.send'\r\n    ]\r\n};","export const SIGNED_OUT = 'SIGNED_OUT';\r\nexport const SIGNED_IN = 'SIGNED_IN';\r\nexport const AUTH_IN_PROGRESS = 'AUTH_IN_PROGRESS';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_SIGNED_OUT = 'AUTH_SIGNED_OUT';\r\nexport const PROVIDER = 'OUTLOOK';\r\n\r\nconst dev = {\r\n    url: {\r\n        URL_UPDATE_DEFAULTACCOUNT: 'http://localhost:3500/api/accounts/defaultaccount',\r\n        URL_RESET_DEFAULTACCOUNT: 'http://localhost:3500/api/accounts/resetdefaultaccount',\r\n        URL_DELETE_ACCOUNT: 'http://localhost:3500/api/accounts/deleteaccount',\r\n        URL_SELECT_ACCOUNT: 'http://localhost:3000'     \r\n    }\r\n}\r\n\r\nconst prod = {\r\n    url: {\r\n        URL_UPDATE_DEFAULTACCOUNT: 'https://useraccounts.azurewebsites.net/api/accounts/defaultaccount',\r\n        URL_RESET_DEFAULTACCOUNT: 'https://useraccounts.azurewebsites.net/api/accounts/resetdefaultaccount',\r\n        URL_DELETE_ACCOUNT: 'https://useraccounts.azurewebsites.net/api/accounts/deleteaccount',\r\n        URL_SELECT_ACCOUNT: 'https://lefebvre-approot.azurewebsites.net'\r\n    }\r\n}\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\r\n\r\nexport const MAX_RESULTS = 20;","export const STORE_USER = 'STORE_USER';\r\n\r\nexport const storeUser = (userId) => dispatch => {\r\n    dispatch({\r\n        type: STORE_USER,\r\n        userId\r\n    });\r\n};","import { STORE_USER } from \"../actions/settings.actions\";\r\n\r\nconst defaultSettings = {\r\n    userId: ''\r\n};\r\n\r\nexport const storeUser = (state = defaultSettings, action) => {\r\n    switch (action.type) {\r\n        case STORE_USER:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            };      \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n  ","\r\n\r\nexport const getBody = (message, mimeType) => {\r\n  let encodedBody = \"\";\r\n  if (typeof message.parts === \"undefined\") {\r\n    encodedBody = message.body.data;\r\n  } else {\r\n    encodedBody = getHTMLPart(message.parts, mimeType);\r\n  }\r\n  encodedBody = encodedBody\r\n    .replace(/-/g, \"+\")\r\n    .replace(/_/g, \"/\")\r\n    .replace(/\\s/g, \"\");\r\n  return decodeURIComponent(escape(window.atob(encodedBody)));\r\n};\r\n\r\nconst getHTMLPart = (arr, mimeType) => {\r\n  for (let x = 0; x < arr.length; x++) {\r\n    if (typeof arr[x].parts === \"undefined\") {\r\n      if (arr[x].mimeType === mimeType) {\r\n        return arr[x].body.data;\r\n      }\r\n    } else {\r\n      return getHTMLPart(arr[x].parts, mimeType);\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const isHTML = str => {\r\n  const doc = new DOMParser().parseFromString(str, \"text/html\");\r\n  return Array.from(doc.body.childNodes).some(node => node.nodeType === 1);\r\n}\r\n\r\nexport const base64MimeType = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n\r\n    if (mime && mime.length) {\r\n        result = mime[1];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const base64Data = (encoded) => {\r\n    var result = null;\r\n\r\n    if (typeof encoded !== 'string') {\r\n        return result;\r\n    }\r\n\r\n    var data = encoded.split(\"base64,\")[1];\r\n\r\n    return data;\r\n}","import { getMessageList } from \"../../../../api_graph\";\r\nimport { getMessage } from \"../../../../api_graph\";\r\nimport { batchModify } from \"../../../../api_graph\";\r\nimport { selectLabel } from \"../../../sidebar/sidebar.actions\";\r\n\r\nexport const GET_MESSAGES = \"GET_MESSAGES\";\r\nexport const GET_MESSAGES_LOAD_IN_PROGRESS = \"GET_MESSAGES_LOAD_IN_PROGRESS\";\r\nexport const GET_MESSAGES_FAILED = 'GET_MESSAGES_FAILED';\r\nexport const TOGGLE_SELECTED = \"TOGGLE_SELECTED\";\r\nexport const MESSAGE_LOAD_IN_PROGRESS = \"MESSAGE_LOAD_IN_PROGRESS\";\r\nexport const MESSAGE_LOAD_SUCCESS = \"MESSAGE_LOAD_SUCCESS\";\r\nexport const MESSAGE_LOAD_FAIL = \"MESSAGE_LOAD_FAIL\";\r\nexport const EMPTY_MESSAGES = \"EMPTY_MESSAGES\";\r\nexport const SET_PAGE_TOKENS = \"SET_PAGE_TOKENS\";\r\nexport const ADD_INITIAL_PAGE_TOKEN = \"ADD_INITIAL_PAGE_TOKEN\";\r\nexport const CLEAR_PAGE_TOKENS = \"CLEAR_PAGE_TOKENS\";\r\nexport const MODIFY_MESSAGES_SUCCESS = \"MODIFY_MESSAGES_SUCCESS\";\r\nexport const MODIFY_MESSAGES_FAILED = \"MODIFY_MESSAGES_FAILED\";\r\nexport const SET_SEARCH_QUERY = \"SET_SEARCH_QUERY\";\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\r\nexport const DELETE_LIST_MESSAGES = \"DELETE_LIST_MESSAGES\";\r\nexport const ADD_LIST_MESSAGES = \"ADD_LIST_MESSAGES\";\r\n\r\nexport const getLabelMessages = ({\r\n  labelIds,\r\n  q = \"\",\r\n  pageToken\r\n}) => (dispatch, getState) => {\r\n  dispatch(setMessageListLoadInProgress());\r\n\r\n  const state = getState();\r\n  const { searchQuery } = state;    \r\n\r\n  if (searchQuery !== \"\") {\r\n    dispatch(selectLabel(\"-1\"));\r\n  }\r\n\r\n    //Set PageToken to call api getMessageList  \r\n  if (state.messagesResult.paginatioDirectionSelected != null) {\r\n        // = prev\r\n        if (state.messagesResult.paginatioDirectionSelected == \"prev\") {\r\n            var skipValue = state.messagesResult[\"@odata.nextLink\"].split(\"skip=\")[1];\r\n            pageToken = state.messagesResult[\"@odata.nextLink\"].split(\"skip=\")[0] + \"skip=\" + (skipValue - 40);\r\n        }\r\n        // = next\r\n        else {\r\n            pageToken = state.messagesResult[\"@odata.nextLink\"];\r\n        }\r\n                   \r\n  }\r\n\r\n  // reset the state before reloading the object\r\n  delete state.messagesResult ;\r\n\r\n  getMessageList({ labelIds, maxResults: 20, q: searchQuery, pageToken }).then(response => {\r\n    dispatch({\r\n      type: GET_MESSAGES,\r\n      payload: response\r\n    });\r\n\r\n    dispatch(setPageTokens());\r\n    \r\n  }).catch(err => {\r\n    dispatch({\r\n      type: GET_MESSAGES_FAILED,\r\n      payload: err\r\n    })\r\n  });\r\n    };\r\n\r\nexport const setSearchQuery = q => ({\r\n  type: SET_SEARCH_QUERY,\r\n  payload: q\r\n})\r\n\r\nexport const setPageTokens = tokens => ({\r\n  type: SET_PAGE_TOKENS,\r\n  payload: tokens\r\n});\r\n\r\nexport const emptyLabelMessages = () => ({\r\n  type: EMPTY_MESSAGES\r\n});\r\n\r\nexport const toggleSelected = (messageIds, selected) => ({\r\n  type: TOGGLE_SELECTED,\r\n  payload: {\r\n    messageIds,\r\n    selected\r\n  }\r\n});\r\n\r\nexport const getEmailMessage = messageId => dispatch => {\r\n  dispatch(setMessageLoadInProgress());\r\n  getMessage(messageId)\r\n    .then(response => {\r\n      dispatch({\r\n        type: MESSAGE_LOAD_SUCCESS,\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: MESSAGE_LOAD_FAIL,\r\n        payload: error\r\n      });\r\n    });\r\n};\r\n\r\nconst setMessageLoadInProgress = () => ({\r\n  type: MESSAGE_LOAD_IN_PROGRESS\r\n});\r\n\r\nconst setMessageListLoadInProgress = () => ({\r\n  type: GET_MESSAGES_LOAD_IN_PROGRESS\r\n});\r\n\r\nexport const addInitialPageToken = token => ({\r\n  type: ADD_INITIAL_PAGE_TOKEN,\r\n  payload: token\r\n})\r\n\r\nexport const clearPageTokens = () => ({\r\n  type: CLEAR_PAGE_TOKENS\r\n})\r\n\r\nexport const modifyMessages = ({ids, addLabelIds = [], removeLabelIds = []}) => dispatch => {\r\n  batchModify({ids, addLabelIds, removeLabelIds})\r\n    .then(modifiedIds => {\r\n      dispatch({\r\n       type: MODIFY_MESSAGES_SUCCESS,\r\n       payload: {modifiedIds, addLabelIds, removeLabelIds}\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n       type: MODIFY_MESSAGES_FAILED\r\n      })\r\n    })\r\n}\r\n\r\nexport const addMessage = (messageId) => dispatch => {\r\n  const data = {\r\n      id: messageId,\r\n      content: messageId\r\n  };\r\n\r\n  dispatch({\r\n      type: ADD_MESSAGE,\r\n      data\r\n  });\r\n};\r\n\r\nexport const deleteMessage = (messageId) => dispatch => {\r\n  const data = {\r\n      id: messageId,\r\n      content: messageId\r\n  };\r\n\r\n  dispatch({\r\n      type: DELETE_MESSAGE,\r\n      data     \r\n  });\r\n};\r\n\r\nexport const deleteListMessages = (listMessages) => dispatch => {\r\n  dispatch({\r\n      type: DELETE_LIST_MESSAGES,\r\n      listMessages\r\n  });    \r\n};\r\n\r\nexport const addListMessages = (listMessages) => dispatch => {\r\n  dispatch({\r\n      type: ADD_LIST_MESSAGES,\r\n      listMessages\r\n  });    \r\n};\r\n","export const getValidEmails = (emailInput) => {\r\n  let result = [];\r\n  if (!emailInput || emailInput.trim() === '') {\r\n    return result;\r\n  }\r\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  \r\n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\r\n\r\n  for (let i = 0; i < emails.length; i++) {\r\n    const e = emails[i];\r\n    if (e === '') {continue;}\r\n\r\n    if (regex.test(e)) {\r\n      result.push(e);\r\n    }\r\n    else {\r\n      result = [];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport const getNameEmail = (value) => {\r\n  if (!value) {return null;}\r\n  \r\n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\r\n  let m, name, email;\r\n  if ((m = regex.exec(value)) !== null) {\r\n    email = m[2];\r\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\r\n  }\r\n  return { name, email };\r\n}","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { sendMessage } from \"../../api_graph\";\r\nimport { getValidEmails } from \"../../utils\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"../../../node_modules/react-quill/dist/quill.snow.css\";\r\nimport \"./composeMessage.scss\";\r\n\r\n//import '@uppy/core/dist/style.css'\r\n//import '@uppy/drag-drop/dist/style.css'\r\n\r\nconst Uppy = require('@uppy/core')\r\nconst Tus = require('@uppy/tus')\r\nconst GoogleDrive = require('@uppy/google-drive')\r\nconst { Dashboard, DashboardModal, DragDrop, ProgressBar } = require('@uppy/react')\r\n\r\nexport class Compose extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayModal: false,\r\n      to: props.to || \"\",\r\n      cc: props.cc || \"\",\r\n      bcc: props.bcc || \"\",\r\n      subject: props.subject || \"\",\r\n      content: props.content || \"\",       \r\n      showInlineDashboard: false,\r\n      open: false,\r\n      uppyPreviews: []       \r\n    };   \r\n\r\n    this.showModal = this.showModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.sendEmail = this.sendEmail.bind(this);\r\n    this.setField = this.setField.bind(this);\r\n\r\n\r\n      this.uppy = new Uppy({ id: 'uppy1', autoProceed: false, debug: true })\r\n          .use(Tus, { endpoint: 'https://master.tus.io/files/' })\r\n          .use(GoogleDrive, { serverUrl: 'https://companion.uppy.io' })\r\n          \r\n      this.reader = new FileReader();      \r\n\r\n      //this.uppy2 = new Uppy({ id: 'uppy2', autoProceed: false, debug: true })\r\n      //    .use(Tus, { endpoint: 'https://master.tus.io/files/' }) \r\n          \r\n\r\n      this.handleModalClick = this.handleModalClick.bind(this)\r\n\r\n      this.uploadFile = this.uploadFile.bind(this);\r\n      this.addFileToState = this.addFileToState.bind(this);\r\n\r\n      this.uppy.on('complete', (result) => {\r\n          console.log('Upload complete! We�ve uploaded these files:', result.successful)\r\n      })\r\n\r\n\r\n\r\n      this.uppy.on('file-added', (file) => {\r\n          console.log('Added file', file);  \r\n          this.reader.onload = (readerEvt) =>\r\n          this.addFileToState({ file, base64: readerEvt.target.result });\r\n          // Define this onload every time to get file and base64 every time\r\n          this.reader.readAsDataURL(file.data);\r\n      });      \r\n      \r\n    \r\n    }  \r\n\r\n    addFileToState({ file, base64 }) {\r\n        this.setState({ uppyPreviews: [{ file, base64 }, ...this.state.uppyPreviews] });\r\n    }\r\n\r\n    uploadFile() {\r\n        console.log(this.state.uppyPreviews);\r\n        // this.uppyOne.upload();\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.uppy.close()      \r\n    }\r\n\r\n    handleModalClick() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n    \r\n\r\n  showModal() {\r\n    this.setState({\r\n      displayModal: true\r\n    });   \r\n\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      displayModal: false\r\n    });\r\n      this.uppy.close();\r\n      this.state.uppyPreviews = [];\r\n      this.uppy.reset();\r\n  }\r\n\r\n  \r\n\r\n  handleChange(value) {\r\n      this.setState({ content: value });      \r\n\r\n  }\r\n\r\n    sendEmail() {                 \r\n        \r\n    const validTo = getValidEmails(this.state.to);\r\n\r\n    if (\r\n      !validTo.length ||\r\n      this.state.subject.trim() === \"\" ||\r\n      this.state.content === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const headers = {\r\n      To: validTo.join(\", \"),\r\n      Subject: this.state.subject,\r\n      attachments: this.state.uppyPreviews\r\n    };\r\n\r\n    const validCc = getValidEmails(this.state.cc);\r\n    if (validCc.length) {\r\n      headers.Cc = validCc.join(\", \");\r\n    }\r\n\r\n    const validBcc = getValidEmails(this.state.bcc);\r\n    if (validBcc.length) {\r\n      headers.Bcc = validBcc.join(\", \");\r\n    }\r\n\r\n     const Fileattached = this.state.uppyPreviews;      \r\n\r\n  sendMessage({     \r\n      data: this.state,\r\n      attachments: Fileattached\r\n      \r\n    }).then(response => {      \r\n      this.closeModal();\r\n      this.resetFields();\r\n    });    \r\n  }\r\n\r\n  resetFields() {\r\n    this.setState({\r\n      to: this.props.to || \"\",\r\n      cc: this.props.cc || \"\",\r\n      bcc: this.props.bcc || \"\",\r\n      subject: this.props.subject || \"\",\r\n      content: this.props.content || \"\",\r\n      uppyPreviews: []\r\n    });\r\n  }\r\n\r\n  setField(field, trimValue = true) {\r\n    return evt => {\r\n      this.setState({\r\n        [field]: trimValue ? evt.target.value.trim() : evt.target.value \r\n      });\r\n    };\r\n  }\r\n\r\n  isInvalid(field) {\r\n    const fieldValue = this.state[field].trim();\r\n    return fieldValue.length > 0 && !getValidEmails(fieldValue).length;\r\n  }\r\n\r\n  \r\n    render() {\r\n        const { showInlineDashboard } = this.state\r\n        const { t } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          React.cloneElement(this.props.children, {\r\n            onClick: this.showModal\r\n          })\r\n        }\r\n        {this.state.displayModal ? (\r\n          <Modal          \r\n            isOpen={this.state.displayModal}\r\n            className=\"compose-dialog\"\r\n            size=\"lg\"\r\n            overflow-y= \"initial !important\"\r\n            onOpened={this.onModalOpened}\r\n            backdrop=\"static\"\r\n            centered={true}\r\n          >\r\n            <ModalHeader toggle={this.closeModal}>{t('compose-message.compose-message')}</ModalHeader>\r\n            <ModalBody>\r\n              <div className=\"message-fields\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">{t('compose-message.to')}</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={1}\r\n                    value={this.state.to}\r\n                    placeholder={t('compose-message.comma-separated')}\r\n                    invalid={this.isInvalid(\"to\")}\r\n                    onChange={this.setField(\"to\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">Cc:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={2}\r\n                    value={this.state.cc}\r\n                    placeholder={t('compose-message.comma-separated')}\r\n                    invalid={this.isInvalid(\"cc\")}\r\n                    onChange={this.setField(\"cc\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">Bcc:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={3}\r\n                    placeholder={t('compose-message.comma-separated')}\r\n                    invalid={this.isInvalid(\"bcc\")}\r\n                    onChange={this.setField(\"bcc\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                  {t('compose-message.subject')}\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={4}\r\n                    placeholder=\"\"\r\n                    value={this.state.subject}\r\n                    onChange={this.setField(\"subject\", false)}\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <div className=\"editor-wrapper\">\r\n                <ReactQuill\r\n                  tabIndex={5}\r\n                  value={this.state.content}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>  \r\n                                           \r\n            </ModalBody>                  \r\n            <ModalFooter className=\"footer\">\r\n              <Button\r\n                className=\"mr-auto font-weight-bold\"\r\n                size=\"lg\"\r\n                color=\"primary\"\r\n                onClick={this.sendEmail}\r\n                title={t('compose-message.send-message')}\r\n              >\r\n                {t('compose-message.send')}\r\n              </Button>{\" \"}            \r\n                            \r\n              <Button title={t('compose-message.discard')} color=\"light\" onClick={this.closeModal}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </Button>\r\n                        \r\n            </ModalFooter> \r\n                    <div className=\"ImagePreviewContainer\">\r\n                        {\r\n                            this.state.uppyPreviews.map(\r\n                                item => {\r\n                                    return (                                       \r\n                                        <object className=\"FileList\"\r\n                                            key={item.file.id}\r\n                                            type={item.file.type}\r\n                                            width=\"80px\"\r\n                                            height=\"auto\"\r\n                                            data={item.base64}\r\n                                        >\r\n                                            {item.file.name}\r\n                                        </object>\r\n                                    );\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <ProgressBar\r\n                        uppy={this.uppy}\r\n                        hideAfterFinish={false}\r\n                    />\r\n                    <div id=\"Divfooter\">                       \r\n                        <DragDrop\r\n                            uppy={this.uppy}\r\n                            width='100%'\r\n                            height='130px'\r\n                            min-height='130px'                            \r\n                         \r\n                     />\r\n                       \r\n                    </div>\r\n                     \r\n          </Modal>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Compose);\r\n","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport ComposeMessage from \"../../../compose-message/ComposeMessage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNameEmail } from \"../../../../utils\";\r\nimport moment from \"moment\";\r\nimport \"./messageToolbar.scss\";\r\n\r\nexport class MessageToolbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\r\n  }\r\n\r\n  getClickHandler(action) {\r\n    return evt => {\r\n      this.props.onClick(action);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    if (!this.props.messageResult.result) {\r\n      return null;\r\n    }\r\n\r\n    const message = this.props.messageResult.result;\r\n    const { messageHeaders } = message;\r\n\r\n    let replyTo, cc, subject;\r\n    subject = messageHeaders.subject;    \r\n\r\n    replyTo = messageHeaders.from.emailAddress.address;      \r\n\r\n    for (let i = 0; i < messageHeaders.ccRecipients.length; i++) {\r\n        cc = messageHeaders.ccRecipients[i].emailAddress.address;\r\n    }\r\n\r\n    const nameEmail = getNameEmail(replyTo);    \r\n    let parsedDate = moment(messageHeaders.receivedDateTime);\r\n\r\n    if (!parsedDate.isValid()) {\r\n      parsedDate = moment(\r\n        parseInt(this.props.messageResult.result.internalDate)\r\n      );\r\n    }\r\n    const replyHeader = `<p>On ${parsedDate.format(\"MMMM Do YYYY, h:mm:ss a\")} < ${nameEmail.email} > wrote:</p>`;\r\n\r\n    const composeProps = {\r\n      subject: `Re: ${subject}`,\r\n      to: nameEmail.email,\r\n      content: `<p>&nbsp;</p>\r\n          <p>&nbsp;</p>\r\n          <p>&nbsp;</p>\r\n          ${replyHeader}\r\n          <blockquote>${this.props.messageResult.body.content}</blockquote>`,\r\n      ...(cc && { cc: cc.value })\r\n    };\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center message-toolbar\">\r\n        <div className=\"action-btns\">\r\n          <div className=\"action-btn mr-2\">\r\n            <button className=\"btn\" onClick={this.trashHandler}>\r\n              <FontAwesomeIcon\r\n                title={t('message-toolbar.move-to-trash')}               \r\n                icon={faTrash}\r\n                size=\"lg\"\r\n              />\r\n            </button>\r\n          </div>\r\n          <div className=\"action-btn mr-2\">\r\n            <ComposeMessage {...composeProps}>\r\n              <button className=\"btn\">\r\n                <FontAwesomeIcon\r\n                  title={t('message-toolbar.reply')}\r\n                  icon={faReply}\r\n                  size=\"lg\"\r\n                />\r\n              </button>\r\n            </ComposeMessage>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(MessageToolbar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport {\r\n  getEmailMessage,\r\n  modifyMessages\r\n} from \"../actions/message-list.actions\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport MessageToolbar from \"../message-toolbar/MessageToolbar\";\r\n\r\nimport \"./messageContent.scss\";\r\n\r\n//BEGIN functions for attachment functionality\r\n\r\nfunction b64toBlob(b64Data, contentType, sliceSize) {\r\n    contentType = contentType || '';\r\n    sliceSize = sliceSize || 512;\r\n\r\n    var byteCharacters = atob(b64Data);\r\n    var byteArrays = [];\r\n\r\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        var byteNumbers = new Array(slice.length);\r\n        for (var i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        var byteArray = new Uint8Array(byteNumbers);\r\n\r\n        byteArrays.push(byteArray);\r\n    }\r\n\r\n    var blob = new Blob(byteArrays, { type: contentType });\r\n    return blob;\r\n}\r\n\r\n//function getAttachments(messageID, parts, callback) {\r\n//    var attachId = parts.body.attachmentId;\r\n//    var request = window.gapi.client.gmail.users.messages.attachments.get({\r\n//        'id': attachId,\r\n//        'messageId': messageID,\r\n//        'userId': 'me'\r\n//    });\r\n//    request.execute(function (attachment) {\r\n//        callback(parts.filename, parts.mimeType, attachment);\r\n//    });\r\n//}\r\n\r\nfunction addAttachmentElement(blobUrl, filename) {   \r\n    var aLink = document.createElement('a');\r\n    var linkText = document.createTextNode(filename);   \r\n    aLink.appendChild(linkText);    \r\n    aLink.href = blobUrl\r\n    aLink.title = filename\r\n    aLink.download = filename\r\n    aLink.style.textDecoration = \"none\";\r\n    aLink.style.padding = \"5px\";\r\n    aLink.style.margin = \"15px 0\";\r\n    aLink.style.clear = \"both\";    \r\n    return aLink\r\n}\r\n\r\nfunction addAttachmentContainer(mimeType) {\r\n    var aDiv = document.createElement('span');\r\n    aDiv.style.whiteSpace = \"nowrap\";\r\n    aDiv.style.backgroundColor = \"#fafafa\";\r\n    aDiv.style.border= \"solid 1px #aaa\";\r\n    aDiv.style.padding = \"5px\";    \r\n    aDiv.style.margin = \"10px\";    \r\n    aDiv.style.display = \"inline-block\";\r\n    var Img = addAttachmentImg(mimeType);\r\n    aDiv.appendChild(Img);    \r\n    return aDiv\r\n} \r\n\r\nfunction addAttachmentImg(mimeType) {\r\n    var aImg = document.createElement('img');\r\n    var imgPath;\r\n\r\n    switch (mimeType) {\r\n        case \"image/png\":\r\n            imgPath = \"../assets/img/file-extensions/png.png\"\r\n            break;\r\n        case \"image/jpeg\":\r\n            imgPath = \"../assets/img/file-extensions/jpg.png\"\r\n            break;\r\n        case \"application/pdf\":\r\n            imgPath = \"../assets/img/file-extensions/pdf.png\";\r\n            break;\r\n        case \"text/plain\":\r\n            imgPath = \"../assets/img/file-extensions/txt.png\";\r\n            break;\r\n        case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n            imgPath = \"../assets/img/file-extensions/doc.png\";\r\n            break\r\n        default:\r\n            imgPath = \"../assets/img/file-extensions/default.png\";\r\n            break\r\n        // code block\r\n    }  \r\n    aImg.src = imgPath;\r\n    aImg.style.alt = \"Attached file\";    \r\n    //aImg.height = 42;\r\n    //aImg.width = 42;\r\n    aImg.style.display = \"inline-block\";\r\n    aImg.style.verticalAlign= \"middle\";\r\n    return aImg\r\n}\r\n\r\nfunction addDivDivider() {\r\n    var aDiv = document.createElement('div');    \r\n    aDiv.style.height = \"30px\";    \r\n    aDiv.id=\"Dividier\"\r\n    return aDiv\r\n} \r\n\r\n//END functions for attachment functionality\r\n\r\n\r\nexport class MessageContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorMessage: undefined\r\n    };\r\n\r\n    this.iframeRef = React.createRef();\r\n    this.modifyMessage = this.modifyMessage.bind(this);\r\n  }\r\n\r\n  componentDidMount(prevProps) {\r\n    const messageId = this.props.match.params.id;\r\n    this.props.getEmailMessage(messageId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { emailMessageResult } = this.props;\r\n    if (!emailMessageResult.loading) {\r\n      if (!emailMessageResult.failed) {\r\n          if (this.iframeRef.current) {\r\n\r\n            const { body } = this.iframeRef.current.contentWindow.document;\r\n            body.style.margin = \"0px\";\r\n            body.style.fontFamily = \"Arial, Helvetica, sans-serif\";\r\n            body.style.fontSize = \"13px\";\r\n            body.innerHTML = this.props.emailMessageResult.body.content;\r\n\r\n            //Adding attach files  \r\n            var attach = emailMessageResult.attach;   \r\n            if (typeof attach !== 'undefined' && attach.length > 0) {\r\n                var iframe = document.getElementById('message-iframe');\r\n                var Divider = addDivDivider(); \r\n                iframe.contentDocument.body.appendChild(Divider);\r\n                for (var i = 0; i < attach.length; i++) {  \r\n                            let dataBase64Rep = attach[i].contentBytes.replace(/-/g, '+').replace(/_/g, '/')\r\n                            let urlBlob = b64toBlob(dataBase64Rep, attach[i].contentType, attach[i].size);\r\n                            //console.log(urlBlob);\r\n                            var blobUrl = URL.createObjectURL(urlBlob);\r\n                            var Attachment = addAttachmentElement(blobUrl,attach[i].name);                            \r\n                            var AttachmentDiv = addAttachmentContainer(attach[i].contentType);\r\n                            AttachmentDiv.appendChild(Attachment);                            \r\n                            iframe.contentDocument.body.appendChild(AttachmentDiv);   \r\n                };\r\n            }  \r\n        }\r\n      } else {\r\n        if (!this.state.errorMessage) {\r\n          this.setState({\r\n            //errorMessage: emailMessageResult.error.result.error.message,\r\n            errorMessage: \"error\",\r\n            modal: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n    }   \r\n   \r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n    renderErrorModal() {\r\n    //to-do alberto\r\n    // catch error page and redirect\r\n    //return <Redirect to=\"/notfound\" />;\r\n  }\r\n\r\n  modifyMessage(addLabelIds, removeLabelIds) {\r\n    const id = this.props.emailMessageResult.result.id;\r\n    const actionParams = {\r\n      ...(addLabelIds && { addLabelIds }),\r\n      ...(removeLabelIds && { removeLabelIds })\r\n    };\r\n    this.props.modifyMessages({ ids: [id], ...actionParams });\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.emailMessageResult.loading) {\r\n      return this.renderSpinner();\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessageToolbar \r\n          onClick={this.modifyMessage} \r\n          messageResult={this.props.emailMessageResult}\r\n        />\r\n        \r\n        <div className=\"d-flex justify-content-center align-items-center message-content\">\r\n          {this.props.emailMessageResult.loading ? this.renderSpinner() : null}\r\n          {this.state.errorMessage ? (\r\n            this.renderErrorModal()\r\n          ) : (\r\n            <iframe\r\n              ref={this.iframeRef}\r\n              title=\"Message contents\"\r\n              id=\"message-iframe\"\r\n              style={{\r\n                display: this.props.emailMessageResult.loading\r\n                  ? \"none\"\r\n                  : \"block\"\r\n              }}\r\n            />\r\n          )}\r\n            </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  emailMessageResult: state.emailMessageResult\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      getEmailMessage,\r\n      modifyMessages\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(MessageContent);\r\n","/// <reference path=\"../components/sidebar/Sidebar.jsx\" />\r\nimport { MAX_RESULTS } from \"../constants\";\r\nimport { getBody, isHTML, base64MimeType, base64Data } from './utils';\r\nimport config from '../Config';\r\nimport { MessageContent } from \"../components/content/message-list/message-content/MessageContent\";\r\n\r\nconst graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken) {\r\n    // Initialize Graph client\r\n    const client = graph.Client.init({\r\n        // Use the provided access token to authenticate\r\n        // requests\r\n        authProvider: (done) => {\r\n            done(null, accessToken);\r\n        }\r\n    });\r\n\r\n    return client;\r\n}\r\n\r\n//ALBERTO TO-DO IMPLEMENT RECURSIVE FOLDERS\r\n\r\n//export const getLabelList = () =>\r\n//    new Promise((resolve, reject) => {\r\n//        window.gapi.client.gmail.users.labels\r\n//            .list({\r\n//                userId: \"me\"\r\n//            })\r\n//            .then(getLabelDetails)\r\n//            .then(response => {\r\n//                resolve(response.map(el => el.result));\r\n//            });\r\n//    });\r\n\r\n//const getLabelDetailPromise = labelId => {\r\n//  return new Promise((resolve, reject) => {\r\n//    window.gapi.client.gmail.users.labels\r\n//      .get({\r\n//        userId: \"me\",\r\n//        id: labelId\r\n//      })\r\n//      .then(response => resolve(response));\r\n//  });\r\n//};\r\n\r\n//const getLabelDetails = labelList => {\r\n//  return new Promise((resolve, reject) => {\r\n//    const labelPromises = labelList.result.labels.map(el => {\r\n//      return getLabelDetailPromise(el.id);\r\n//    });\r\n\r\n//    Promise.all(labelPromises).then(response => resolve(response));\r\n//  });\r\n//};\r\n\r\n//END IMPLEMENT RECURSIVE FOLDERS\r\n\r\n\r\nexport const getLabelList = () =>\r\n    new Promise((resolve, reject) => {\r\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n        const client = getAuthenticatedClient(accessToken);       \r\n        client\r\n            .api('/me/mailFolders')                      \r\n            .get()       \r\n            .then(response => {\r\n                resolve(response.value);\r\n        });\r\n    });\r\n\r\n\r\n//export const getMessageListPagination = ({ page }) =>\r\n//    new Promise((resolve, reject) => {       \r\n//        getMessagePaginationList(page)\r\n//            .then(getMessageHeaders)\r\n//            .then(messageResult =>\r\n//                flattenMessagesWithLabel(messageResult.messages, \"\").then(\r\n//                    labelMessagesDetails => resolve({\r\n//                        ...messageResult,\r\n//                        messages: labelMessagesDetails.messages,\r\n//                        label: labelMessagesDetails.label\r\n//                    })\r\n//                )\r\n//            )\r\n//            .catch(err => {\r\n//                reject(err);\r\n//            });\r\n//    });\r\n\r\nexport const getMessageList = ({ labelIds, maxResults, q, pageToken }) =>\r\n    new Promise((resolve, reject) => {      \r\n        getMessageRawList({ labelIds, maxResults, pageToken, q })       \r\n            .then(getMessageHeaders)\r\n            .then(messageResult =>\r\n                flattenMessagesWithLabel(messageResult.messages, labelIds).then(\r\n                    labelMessagesDetails => resolve({\r\n                        ...messageResult,\r\n                        messages: labelMessagesDetails.messages,\r\n                        label: labelMessagesDetails.label\r\n                    })\r\n                )\r\n            )\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n    });\r\n\r\n//export const getMessageList = ({ labelIds, maxResults, q, pageToken }) =>\r\n//  new Promise((resolve, reject) => {\r\n//    getMessageRawList({ labelIds, maxResults, pageToken, q })\r\n//      .then(getMessageHeaders)\r\n//      .then(messageResult =>\r\n//        flattenMessagesWithLabel(messageResult.messages, labelIds).then(\r\n//          labelMessagesDetails => resolve({\r\n//            ...messageResult,\r\n//            messages: labelMessagesDetails.messages,\r\n//            label: labelMessagesDetails.label\r\n//          })\r\n//        )\r\n//      )\r\n//      .catch(err => {\r\n//        reject(err);\r\n//      });\r\n//  });\r\n\r\nexport const flattenMessagesWithLabel = (messages, labelIds) =>\r\n    new Promise((resolve, reject) => {\r\n\r\n        //if (!labelIds) {\r\n           resolve({\r\n                messages,\r\n                label: {\r\n                    result: {\r\n                        messagesTotal: 0\r\n                    }\r\n                }\r\n            });\r\n            return ;\r\n        //}\r\n\r\n        //window.gapi.client.gmail.users.labels\r\n        //    .get({\r\n        //        userId: \"me\",\r\n        //        id: labelIds[0]\r\n        //    })\r\n        //    .then(response =>\r\n        //        resolve({\r\n        //            messages,\r\n        //            label: response\r\n        //        })\r\n        //    );\r\n\r\n    });\r\n\r\n//export const flattenMessagesWithLabel = (messages, labelIds) =>\r\n//  new Promise((resolve, reject) => {\r\n\r\n//    if (!labelIds) {\r\n//      resolve({\r\n//        messages,\r\n//        label: {\r\n//          result: {\r\n//            messagesTotal: 0\r\n//          }\r\n//        }\r\n//      });\r\n//      return;\r\n//    }\r\n\r\n//    window.gapi.client.gmail.users.labels\r\n//      .get({\r\n//        userId: \"me\",\r\n//        id: labelIds[0]\r\n//      })\r\n//      .then(response =>\r\n//        resolve({\r\n//          messages,\r\n//          label: response\r\n//        })\r\n//      );\r\n//    });\r\n\r\nconst getMessagePaginationList = ({ query }) =>  \r\n    new Promise((resolve, reject) => {\r\n        query = `https://graph.microsoft.com/v1.0/me/mailFolders/AAMkADYwN2U5OWZlLWUwZDktNDQ3Yi05MTQ2LTMxYmUyMGExMjcwNgAuAAAAAAABGTrist65R5XlVfmY3KAqAQAcnBiKLwlKQrviB8XkwxacAAAAAAEMAAA=/messages?$top=20&$skip=80`\r\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n        const client = getAuthenticatedClient(accessToken);\r\n            client\r\n                .api(`${query}`)\r\n               \r\n                .get()\r\n                .then(response => {\r\n                    resolve(response);\r\n                })\r\n                .catch(err => {\r\n                    reject(err);\r\n                });  \r\n    });\r\n\r\nconst getMessageRawList = ({ labelIds, maxResults, pageToken , q = \"\" }) =>\r\n    new Promise((resolve, reject) => {\r\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n        const client = getAuthenticatedClient(accessToken);\r\n        //if (pageToken == null)\r\n        //    pageToken = 0\r\n        if (pageToken != null) {\r\n            client\r\n                .api(`${pageToken}`)\r\n\r\n                .get()\r\n                .then(response => {\r\n                    resolve(response);\r\n                })\r\n                .catch(err => {\r\n                    reject(err);\r\n                });\r\n\r\n        }\r\n        else {\r\n\r\n            if (q == \"\") {\r\n                client\r\n                    .api(`me/mailFolders/${labelIds}/messages`)\r\n                    .top(`${maxResults}`)\r\n                    .get()\r\n                    .then(response => {\r\n                        resolve(response);\r\n                    })\r\n                    .catch(err => {\r\n                        reject(err);\r\n                    });\r\n            }\r\n            else {\r\n                client\r\n                    .api(`me/messages?$search=${q}`)\r\n                    .top(`${maxResults}`)\r\n                    .get()\r\n                    .then(response => {\r\n                        resolve(response);\r\n                    })\r\n                    .catch(err => {\r\n                        reject(err);\r\n                    });\r\n            }\r\n\r\n        }       \r\n       \r\n    });\r\n\r\n//const getMessageRawList = ({ labelIds, maxResults, pageToken, q = \"\" }) =>\r\n//  new Promise((resolve, reject) => {\r\n//    window.gapi.client.gmail.users.messages\r\n//      .list({\r\n//        userId: \"me\",\r\n//        q,\r\n//        maxResults: maxResults || MAX_RESULTS,\r\n//        ...(labelIds && {labelIds}),\r\n//        ...(pageToken && { pageToken })\r\n//      })\r\n//      .then(response => resolve(response))\r\n//      .catch(err => {\r\n//        reject(err);\r\n//      });\r\n//  });\r\n\r\nconst getMessageHeaders = response => {\r\n    //const messageResult = response.result;\r\n    const messageResult = response;\r\n\r\n  return new Promise((resolve, reject) => {\r\n      //const headerPromises = (messageResult.messages || []).map(el => {\r\n      const headerPromises = (messageResult.value || []).map(el => {\r\n      return getMessageHeader(el.id);\r\n    });\r\n\r\n    Promise.all(headerPromises).then(messages =>\r\n      resolve({\r\n        ...messageResult,\r\n        messages\r\n      })\r\n    );\r\n  });\r\n};\r\n\r\nconst getMessageHeader = id => {\r\n    return new Promise((resolve, reject) => {\r\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n        const client = getAuthenticatedClient(accessToken);\r\n        client\r\n            .api(`me/messages/${id}`)  \r\n            //.select('id,parentFolderId,')\r\n            .get()\r\n            .then(response => resolve(response))\r\n            .catch(err => {\r\n                reject(err);\r\n            });           \r\n    });\r\n};\r\n\r\nexport const getMessage = ( messageId ) =>\r\n  new Promise((resolve, reject) => {\r\n    getMessageDetail( messageId )     \r\n      .then(Messagedetail =>\r\n          getAttachmentsList(messageId).then(\r\n          MessagesandAttachementsDetails => resolve({\r\n            ...Messagedetail,\r\n              attach: MessagesandAttachementsDetails\r\n          })\r\n        )\r\n      )\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n\r\n\r\nexport const getAttachmentsList = (messageId) => {\r\n    return new Promise((resolve, reject) => {\r\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n        const client = getAuthenticatedClient(accessToken);\r\n        client\r\n            .api(`me/messages/${messageId}/attachments`)\r\n            .get()\r\n            .then(response => resolve(response.value))\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n\r\n    });\r\n};\r\n\r\nexport const getMessageDetail = messageId => {\r\n  return new Promise((resolve, reject) => { \r\n      var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n      const client = getAuthenticatedClient(accessToken);\r\n      client\r\n      .api(`me/messages/${messageId}`)         \r\n      .get()     \r\n      .then(response => {\r\n       const result = response;\r\n       let body = result.body;          \r\n        resolve({\r\n          body,           \r\n          headers: response.headers,\r\n          result: { ...result, messageHeaders: result, payload: undefined }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n// Insert file attachments from Google Drive\r\nfunction getAttachments_(ids) {\r\n    var att = [];\r\n    for (var i in ids) {\r\n        var file = ids;\r\n        att.push({\r\n            mimeType: file.type(),\r\n            fileName: file.name(),\r\n            //bytes: Utilities.base64Encode(file.getBlob().getBytes())\r\n        });\r\n    }\r\n    return att;\r\n}\r\n\r\nexport const emailEnd = () => {\r\n    var email = `},\r\n                 \"SaveToSentItems\": \"true\"\r\n                  }`;\r\n    return email;\r\n};\r\n\r\nexport const emailBody = (data) => { \r\n    const subject = data.subject;\r\n    const bodyContent = data.content;\r\n    var email = `{\r\n                  \"Message\": {\r\n                    \"Subject\": \"${subject}\",\r\n                    \"Body\": {\r\n                      \"ContentType\": \"html\",\r\n                      \"Content\": \"${bodyContent}\"\r\n                    },\\r\\n`;   \r\n    return email;\r\n};\r\n\r\nexport const emailToRecipients = (data) => {\r\n    //to Recipients\r\n    var email = `[]`;\r\n    if (data.to === \"\")\r\n        return email \r\n\r\n    var toRecipients = data.to.split(\",\");\r\n    var email = `\"ToRecipients\": [`;\r\n    for (var i = 0; i < toRecipients.length; i++) {\r\n        email += `{\r\n                        \"EmailAddress\": {\r\n                          \"Address\": \"${toRecipients[i]}\"\r\n                        }\r\n                      },\\r\\n`;\r\n    };\r\n    email += `],\\r\\n`;\r\n    return email;\r\n};\r\n\r\nexport const emailToCcRecipients = (data) => {\r\n    //to Recipients\r\n    var email = `\"CcRecipients\": [],`;\r\n    if (data.cc === \"\")\r\n        return email \r\n\r\n    var toCcRecipients = data.cc.split(\",\");\r\n    email = `\"CcRecipients\": [`;\r\n    for (var i = 0; i < toCcRecipients.length; i++) {\r\n        email += `{\r\n                        \"EmailAddress\": {\r\n                          \"Address\": \"${toCcRecipients[i]}\"\r\n                        }\r\n                      },\\r\\n`;\r\n    };\r\n    email += `],\\r\\n`;\r\n    return email;\r\n};\r\n\r\nexport const emailToBccRecipients = (data) => {\r\n    //to BccRecipients\r\n    var email = `\"BccRecipients\": [],`;\r\n    if (data.bcc === \"\")\r\n        return email \r\n\r\n    var toBccRecipients = data.bcc.split(\",\");\r\n    email = `\"BccRecipients\": [`;\r\n    for (var i = 0; i < toBccRecipients.length; i++) {\r\n        email += `{\r\n                        \"EmailAddress\": {\r\n                          \"Address\": \"${toBccRecipients[i]}\"\r\n                        }\r\n                      },\\r\\n`;\r\n    };\r\n    email += `],\\r\\n`;\r\n    return email;\r\n};\r\n\r\nexport const emailAttachments = (data) => {\r\n    //to BccRecipients\r\n    var email = `\"Attachments\": [],`;\r\n    var attachments = data.uppyPreviews;\r\n\r\n    if (attachments.length <=0)\r\n        return email\r\n\r\n    \r\n    email = `\"Attachments\": [`;\r\n    for (var i = 0; i < attachments.length; i++) {\r\n\r\n        var mimetype = base64MimeType(attachments[i].base64);        \r\n        var fileData = base64Data(attachments[i].base64);\r\n        var fileName = attachments[i].file.name;\r\n\r\n        email += `{\r\n        \"@odata.type\": \"#Microsoft.OutlookServices.FileAttachment\",\r\n        \"Name\": \"${fileName}\",\r\n        \"ContentBytes\": \"${fileData}\"\r\n      },\\r\\n`;\r\n    };\r\n    email += `],\\r\\n`;\r\n    return email;\r\n};\r\n\r\n\r\nexport const sendMessage = ({ data, attachments }) => {\r\n    return new Promise((resolve, reject) => {\r\n        let email = \"\";\r\n        email = emailBody(data);        \r\n        email += emailToRecipients(data);       \r\n        email += emailToCcRecipients(data);\r\n        email += emailToBccRecipients(data);\r\n        email += emailAttachments(data);\r\n        email += emailEnd();\r\n       \r\n        var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n        const client = getAuthenticatedClient(accessToken);       \r\n\r\n        return client\r\n            .api(\"/me/sendmail\")          \r\n            .header('Authorization', 'Bearer ' + accessToken)\r\n            .header('Content-Type', \"application/json\")\r\n            .post(email, (err, response) => {\r\n                resolve(response);\r\n            });\r\n    });\r\n};\r\n\r\n\r\n//export const batchModify = ({ids, addLabelIds = [], removeLabelIds = []}) => new Promise((resolve, reject) => {\r\n//  window.gapi.client.gmail.users.messages\r\n//    .batchModify({\r\n//      userId: \"me\",\r\n//      ids,\r\n//      addLabelIds,\r\n//      removeLabelIds\r\n//    })\r\n//    .then(response =>\r\n//      {\r\n//        resolve(ids)\r\n//      }\r\n//    );\r\n//});\r\n\r\nexport const batchModify = ({ ids, addLabelIds = [], removeLabelIds = [] }) =>\r\n    new Promise((resolve, reject) => {\r\n    var accessToken = window.msal.acquireTokenSilent(config.scopes);\r\n    const client = getAuthenticatedClient(accessToken);\r\n\r\n    var deleteFolder = \"deleteditems\";\r\n   \r\n    var DestinationId = `{\r\n                     \"destinationId\": \"${deleteFolder}\"\r\n                     }`;\r\n    return client\r\n        .api(`me/messages/${ids}/move`)\r\n        .header('Authorization', 'Bearer ' + accessToken)\r\n        .header('Content-Type', \"application/json\")\r\n        .post(DestinationId, (err, response) => {\r\n            resolve(ids);\r\n        });\r\n});\r\n","import { getLabelList } from \"../../api_graph\";\r\nimport { setSearchQuery } from \"../content/message-list/actions/message-list.actions\";\r\n\r\nexport const GET_LABELS = \"GET_LABELS\";\r\nexport const SELECT_LABEL = \"SELECT_LABEL\";\r\n\r\nexport const getLabels = () => dispatch => {\r\n  getLabelList().then(labelList => {\r\n    dispatch({\r\n      type: GET_LABELS,\r\n      payload: labelList\r\n    });\r\n  });\r\n};\r\n\r\nexport const selectLabel = (labelId) => dispatch => {\r\n  //dispatch(setSearchQuery(\"\"));\r\n  dispatch({\r\n    type: SELECT_LABEL,\r\n    payload: labelId\r\n  });\r\n};","import { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\r\n\r\nconst defaultLabelState = {\r\n    labels: []\r\n}\r\n\r\nexport const labelsResult = (state = defaultLabelState, action) => {\r\n  switch (action.type) {\r\n    case GET_LABELS:\r\n    console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        labels: action.payload\r\n      };\r\n    case SELECT_LABEL:\r\n      return {\r\n        ...state, \r\n        labels: state.labels.map(el => {\r\n          if (el.id === action.payload) {\r\n            return {\r\n              ...el, \r\n              selected: true\r\n            }\r\n          }\r\n          return {\r\n            ...el, \r\n            selected: false\r\n          };\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_MESSAGES,\r\n  GET_MESSAGES_FAILED,\r\n  TOGGLE_SELECTED,\r\n  MESSAGE_LOAD_IN_PROGRESS,\r\n  MESSAGE_LOAD_SUCCESS,\r\n  MESSAGE_LOAD_FAIL,\r\n  GET_MESSAGES_LOAD_IN_PROGRESS,\r\n  EMPTY_MESSAGES,\r\n  SET_PAGE_TOKENS,\r\n  ADD_INITIAL_PAGE_TOKEN,\r\n  CLEAR_PAGE_TOKENS,\r\n  MODIFY_MESSAGES_SUCCESS,\r\n  SET_SEARCH_QUERY,\r\n  ADD_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  DELETE_LIST_MESSAGES,\r\n  ADD_LIST_MESSAGES  \r\n} from \"../actions/message-list.actions\";\r\n\r\nconst defaultMessagesState = {\r\n  messages: [],\r\n  loading: true,\r\n  pageTokens: [],\r\n  paginatioDirectionSelected: null\r\n};\r\n\r\nexport const messagesResult = (state = defaultMessagesState, action) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES:\r\n      const stateClone = {...state};\r\n      stateClone.nextPageToken = null;\r\n      const pageTokens = [...stateClone.pageTokens];\r\n      const nextPageToken = action.payload[\"@odata.nextLink\"]; \r\n    \r\n      if (nextPageToken && pageTokens.indexOf(nextPageToken) === -1) {\r\n        pageTokens.push(nextPageToken);\r\n      }\r\n      return {\r\n        ...stateClone,\r\n        ...action.payload,\r\n        loading: false,\r\n        pageTokens: pageTokens\r\n      };\r\n    case GET_MESSAGES_FAILED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        failed: true,\r\n        error: action.payload\r\n      }\r\n    }\r\n    case EMPTY_MESSAGES:\r\n      return {...state, messages: []};\r\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        label: null,\r\n        nextPageToken: null,\r\n        loading: true\r\n      }\r\n    case TOGGLE_SELECTED:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.map(el => {\r\n          if (action.payload.messageIds.indexOf(el.id) > -1) {\r\n            return { ...el, selected: action.payload.selected };\r\n          }\r\n          return el;\r\n        })\r\n      };\r\n    case ADD_INITIAL_PAGE_TOKEN:\r\n      return {\r\n        ...state,\r\n        pageTokens: [action.payload]\r\n      }\r\n    case CLEAR_PAGE_TOKENS:\r\n      return {\r\n        ...state,\r\n        pageTokens: []\r\n      }\r\n    case MODIFY_MESSAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(el => action.payload.modifiedIds.indexOf(el.id) === -1)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const pageTokens = (\r\n  state = { prevPageToken: \"\", nextPageToken: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_PAGE_TOKENS:\r\n      return {...state, ...action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst defaultEmailMessageResult = {\r\n  body: \"\",\r\n  loading: false,\r\n  failed: false\r\n};\r\n\r\nexport const emailMessageResult = (\r\n  state = defaultEmailMessageResult,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\r\n    case MESSAGE_LOAD_IN_PROGRESS:\r\n      return { ...state, body: \"\", loading: true, failed: false };\r\n    case MESSAGE_LOAD_SUCCESS:\r\n      const {body, ...rest} = action.payload;\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        loading: false,\r\n        failed: false\r\n      };\r\n    case MESSAGE_LOAD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        failed: true,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const searchQuery = (state = \"\", action) => {\r\n  switch(action.type) {\r\n    case SET_SEARCH_QUERY:\r\n      return action.payload\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst defaultMessageList = {\r\n  selectedMessages: []\r\n};\r\n\r\nexport function messageList(state = defaultMessageList, action) {\r\n  switch(action.type) {\r\n      case ADD_MESSAGE: {\r\n          const index = state.selectedMessages.findIndex(message => message.id === action.data.id)\r\n          if (index === -1) {\r\n              return {\r\n                  ...state,\r\n                  selectedMessages: [...state.selectedMessages, action.data]                    \r\n              }\r\n          }\r\n          return state;     \r\n      }\r\n\r\n      case DELETE_MESSAGE: {\r\n          return {\r\n              ...state,\r\n              selectedMessages: state.selectedMessages.filter(message => message.id !== action.data.id)\r\n          }         \r\n      }\r\n\r\n      case DELETE_LIST_MESSAGES: {\r\n          for (let i=0; i < action.listMessages.length; i++) {\r\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\r\n              if (index > -1) {\r\n                  state.selectedMessages.splice(index, 1);\r\n              }    \r\n          }\r\n          return {\r\n              ...state,\r\n              selectedMessages: state.selectedMessages            }     \r\n      }\r\n\r\n      case ADD_LIST_MESSAGES: {\r\n          for (let i=0; i < action.listMessages.length; i++) {\r\n              const index = state.selectedMessages.findIndex(message => message.id === action.listMessages[i])\r\n              if (index === -1) {\r\n                  const data = {id: action.listMessages[i], content: action.listMessages[i]}\r\n                  state.selectedMessages.push(data);\r\n              }    \r\n          }\r\n          return {\r\n              ...state,\r\n              selectedMessages: state.selectedMessages\r\n          }     \r\n      }\r\n\r\n      default: return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { signedOutReducer } from \"./gapi.reducers\";\r\nimport { signInStatusResult } from \"./gapi.reducers\";\r\nimport { storeUser } from \"./settings.reducers\";\r\n\r\nimport { labelsResult } from \"../components/sidebar/sidebar.reducers\";\r\nimport { messagesResult, emailMessageResult, pageTokens, searchQuery, messageList } from \"../components/content/message-list/reducers/message-list.reducers\";\r\n\r\nexport default combineReducers({\r\n  signedOutReducer,\r\n  signInStatusResult,\r\n  storeUser,\r\n  labelsResult,\r\n  messagesResult,\r\n  emailMessageResult,\r\n  pageTokens,\r\n  searchQuery,\r\n  messageList\r\n});\r\n","import {\r\n  SIGNED_OUT,\r\n  SIGNED_IN,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_IN_PROGRESS,\r\n  AUTH_SIGNED_OUT\r\n} from \"../constants\";\r\n\r\nexport const signedOutReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SIGNED_OUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const signInStatusResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case AUTH_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        status: AUTH_IN_PROGRESS\r\n      };\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: AUTH_SUCCESS,\r\n        currentUser: action.payload.currentUser\r\n      };\r\n    case AUTH_FAIL:\r\n      return {\r\n        ...state,\r\n        status: AUTH_FAIL\r\n      };\r\n    case SIGNED_IN:\r\n      return { ...action.payload };\r\n    case SIGNED_OUT:\r\n    return {\r\n        ...state,\r\n        status: AUTH_SIGNED_OUT,\r\n        currentUser: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import i18n from 'i18next';\r\nimport XHR from 'i18next-xhr-backend';\r\n\r\nconst userLanguage = () => navigator.language;\r\n\r\ni18n\r\n  .use(XHR)\r\n  .init({\r\n    lng: userLanguage(),\r\n    fallbackLng: 'en',\r\n    ns: ['isotope'],\r\n    defaultNS: 'isotope',\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/{{ns}}.json'\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: 'languageChanged loaded',\r\n      bindStore: 'added removed',\r\n      nsMode: 'default',\r\n      useSuspense: false,\r\n    }\r\n  });\r\n\r\nexport default i18n;","var graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken) {\r\n    // Initialize Graph client\r\n    const client = graph.Client.init({\r\n        // Use the provided access token to authenticate\r\n        // requests\r\n        authProvider: (done) => {\r\n            done(null, accessToken);\r\n        }\r\n    });\r\n\r\n    return client;\r\n}\r\n\r\nexport async function getUserDetails(accessToken) {\r\n    const client = getAuthenticatedClient(accessToken);\r\n\r\n    const user = await client.api('/me').get();\r\n    return user;\r\n}\r\n\r\nexport async function getEvents(accessToken) {\r\n    const client = getAuthenticatedClient(accessToken);\r\n\r\n    const events = await client\r\n        .api('/me/events')\r\n        .select('subject,organizer,start,end')\r\n        .orderby('createdDateTime DESC')\r\n        .get();\r\n    return events;\r\n}","import config from '../Config';\r\nimport { UserAgentApplication } from 'msal';\r\n\r\n\r\nexport const signOut = () => {    \r\n    var userAgentApplication = new UserAgentApplication(config.appId, null, null);\r\n    userAgentApplication.logout();\r\n    return true\r\n}\r\n\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./header.scss\";\r\n//import Signout from \"../signout/Signout\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { \r\n    config, \r\n    PROVIDER\r\n} from \"../../constants\";\r\nimport { storeUser } from \"../../actions/settings.actions\";\r\n\r\nimport { signOut } from \"../../api_graph/authentication\";\r\n\r\nexport class Header extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSearchClick = this.handleSearchClick.bind(this);\r\n        this._handleOnClick = this._handleOnClick.bind(this);\r\n        this.performSearch = debounce(this.performSearch.bind(this), 1000);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n        this.state = {\r\n            dropdownOpen: false,\r\n            dropdownMenuOpen: false,\r\n        };\r\n    }\r\n\r\n    _handleOnClick(e) {        \r\n        signOut();\r\n\r\n        const userId = this.props.userId;\r\n        if (userId !== '' && userId !== undefined) {            \r\n            const url = `${config.url.URL_DELETE_ACCOUNT}`;\r\n            fetch(url, {\r\n                method:'POST',\r\n                body: JSON.stringify({\r\n                    user: userId,\r\n                    provider: PROVIDER,\r\n                    email:  this.props.microsoftUser.email\r\n                }),\r\n                headers: { 'Content-type': 'application/json' }\r\n            })\r\n            .then(r => r.json())\r\n            .then(result => {\r\n                console.log(result);\r\n            });\r\n\r\n            const urlRedirect = `${config.url.URL_SELECT_ACCOUNT}/user/${userId}/encrypt/0`;\r\n            window.open(urlRedirect, '_self');          \r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen,\r\n        });\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.setState({\r\n            dropdownMenuOpen: !this.state.dropdownMenuOpen,\r\n        });\r\n    }\r\n\r\n    handleSearchClick(evt) {\r\n        if (this.props.searhQuery !== \"\") {\r\n            this.performSearch();\r\n        }\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        this.props.setSearchQuery(evt.target.value);\r\n        this.performSearch();\r\n    }\r\n\r\n    performSearch() {\r\n        const searchParams = {}\r\n        if (!this.props.searchQuery || this.props.searchQuery === \"\") {\r\n            searchParams.labelIds = [\"INBOX\"];\r\n        }\r\n        this.props.getLabelMessages({ ...searchParams })\r\n    }\r\n\r\n    render() {\r\n        const userInfo = this.props.microsoftUser;\r\n        const email = userInfo.email;\r\n        const fullName = userInfo.displayName;\r\n        const picUrl = \"assets/img/icon-user.png\";\r\n\r\n        return (\r\n            <header className=\"d-flex p-3 align-content-center align-items-center header \">\r\n                <div className=\"justify-content-left\">\r\n                    <Link to=\"/inbox\"><img border=\"0\" alt=\"lefebvre\" src=\"assets/img/LogoLefebvre.png\"></img></Link>\r\n                </div>\r\n                <div className=\"header-logo justify-content-center\">\r\n                    {/*<Link to=\"/inbox\"><img border=\"0\" alt=\"gmail\" src=\"assets/img/logo-elderecho.png\"></img></Link>\r\n                    <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"office 365\" src=\"assets/img/office365.png\"></img></Link>*/}\r\n                </div>\r\n                <div className=\"header-search\">\r\n                    <div className=\"input-group w-75 ml-1 mr-auto\">\r\n                        <input\r\n                            type=\"search\"\r\n                            className=\"form-control search\"\r\n                            placeholder=\"Search mail\"\r\n                            value={this.props.searchQuery}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <div className=\"input-group-append\" onClick={this.handleSearchClick}>\r\n                            <button\r\n                                className=\"btn btn-light  bg-white text-dark btn-search\"\r\n                                type=\"button\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faSearch} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {/*<div className=\"header-logo justify-content-center\">\r\n                        <Link to=\"/inbox\"><img className=\"logo-ext\" border=\"0\" alt=\"otulook\" src=\"assets/img/gmail.png\"></img></Link>                       \r\n                    </div>*/}\r\n                    \r\n                    <div className=\"menu-user\">\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem className=\"d-md-down-none\">\r\n                                <NavLink href=\"#\"><i className=\"icon-location-pin\"></i></NavLink>\r\n                            </NavItem>\r\n                            <Dropdown nav isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                                <DropdownToggle nav>\r\n                                    <img className=\"mx-2 profile-pic\" src={picUrl} alt=\"\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    <DropdownItem header tag=\"div\" className=\"text-center\"><strong title={email}>{fullName}</strong></DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Add Account</DropdownItem>\r\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Create Account</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem onClick={this.props.onSignout}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </Nav>\r\n                    </div> \r\n\r\n                    <div>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem className=\"d-md-down-none\">\r\n                                <NavLink href=\"#\"><i className=\"icon-location-pin\"></i></NavLink>\r\n                            </NavItem>\r\n                            <Dropdown nav isOpen={this.state.dropdownMenuOpen} toggle={this.toggleMenu}>\r\n                                <DropdownToggle nav>\r\n                                    <img className=\"img-menu\" src=\"assets/img/icon-products.png\" alt=\"\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> Calendar</DropdownItem>\r\n                                    <DropdownItem><i className=\"fa fa-shield\"></i> File Manager</DropdownItem>\r\n                                    <DropdownItem><i className=\"fa fa-shield\"></i><span onClick={this._handleOnClick}> Configure New Account</span></DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem><i className=\"fa fa-lock\"></i> Return to Lex-on</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </Nav>\r\n                    </div>  \r\n                </div>                \r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.storeUser.userId\r\n    }    \r\n};  \r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      storeUser\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n\r\n// export default Header;\r\n","import React, { PureComponent } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport class LabelItem extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n  }\r\n\r\n  onClick(evt) {\r\n    this.props.onClick(evt, this.props.id);\r\n  }\r\n\r\n  render() {\r\n    const {name, messagesUnread} = this.props;\r\n    const iconProps = this.props.iconProps;\r\n\r\n    let selected = this.props.selected ? \" selected\" : \"\";\r\n\r\n    const messagesUnreadLocale = messagesUnread.toLocaleString();\r\n    return (\r\n      <li\r\n        className={`text-truncate text-left text-dark pl-4 pr-5 py-2 border-0 ${selected}`}\r\n        title={\r\n          name + (messagesUnread > 0 ? ` (${messagesUnreadLocale})` : \"\")\r\n        }\r\n        onClick={this.onClick}\r\n      >\r\n        <FontAwesomeIcon size=\"sm\" {...iconProps} />\r\n        {name}\r\n\r\n        {messagesUnread > 0 ? (\r\n          <div className={\"msg-count\"}>{messagesUnreadLocale}</div>\r\n        ) : null}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport ComposeMessage from \"../compose-message/ComposeMessage\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport groupBy from \"lodash/groupBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {\r\n  faInbox,\r\n  faEnvelope,\r\n  faTrash,\r\n  faCircle,\r\n  faExclamationCircle,\r\n  faArchive,\r\n  faFolder\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport LabelItem from \"./LabelItem\";\r\n\r\nimport \"./sidebar.scss\";\r\n\r\nexport class Sidebar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedLabel: props.pathname,\r\n      selectedFolder: \"\"\r\n    };\r\n\r\n    //this.renderLabels = this.renderLabels.bind(this);\r\n    this.navigateToList = this.navigateToList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.props.getLabelList(); //.then(labels => {});\r\n    /*  */\r\n    //this.props.getLabelMessages();\r\n  }\r\n\r\n  navigateToList(evt, labelId) {\r\n    const label = this.props.labelsResult.labels.find(el => el.id === labelId);\r\n    this.setState({selectedFolder: labelId});\r\n    this.props.onLabelClick(label || { id: \"\" });\r\n  }\r\n\r\n  renderItems(labelList) {\r\n    if (labelList.length === 0) {\r\n      return <div />;\r\n    }\r\n\r\n    const labels = labelList.reduce((acc, el) => {\r\n      acc.push(el);\r\n      return acc;\r\n    }, []);\r\n\r\n      const labelGroups = labels\r\n      //const labelGroups = groupBy(labels, \"type\");\r\n      //var visibleLabels=[];\r\n      var sortedLabels = [];\r\n\r\n      //if (labelGroups.user != null) {      \r\n      //    visibleLabels = labelGroups.user.filter(\r\n      //        el =>\r\n      //            //el.labelListVisibility === \"labelShow\" ||\r\n      //            //el.labelListVisibility === \"labelShowIfUnread\" ||\r\n      //            !el.labelListVisibility || true\r\n      //    );\r\n      //   sortedLabels = sortBy(visibleLabels, \"name\");\r\n      //}\r\n\r\n      sortedLabels = sortBy(labels, \"displayName\");\r\n\r\n    //return (\r\n    //  <React.Fragment>\r\n    //    {this.renderFolders(labelGroups)}        \r\n    //    {this.renderLabels(sortedLabels)}\r\n    //  </React.Fragment>\r\n    //);\r\n      return (\r\n          <React.Fragment>             \r\n              {this.renderLabels(sortedLabels)}\r\n          </React.Fragment>\r\n      );\r\n\r\n  }\r\n\r\n  //  renderFolders(labels) {\r\n  //  const inboxArchive = {\r\n  //    ...labels.find(el => el.id === \"ARCHIVE\"),\r\n  //    name: \"Inbox\",\r\n  //    icon: faInbox\r\n  //   };\r\n  //  const inboxLabel = {\r\n  //    ...labels.find(el => el.id === \"INBOX\"),\r\n  //    name: \"Inbox\",\r\n  //    icon: faInbox\r\n  //  };\r\n  //  const sentLabel = {\r\n  //    ...labels.find(el => el.id === \"SENT\"),\r\n  //    messagesUnread: 0,\r\n  //    name: \"Sent\",\r\n  //    icon: faEnvelope\r\n  //  };\r\n  //  const trashLabel = {\r\n  //    ...labels.find(el => el.id === \"TRASH\"),\r\n  //    messagesUnread: 0,\r\n  //    name: \"Trash\",\r\n  //    icon: faTrash\r\n  //  };\r\n  //  const spamLabel = {\r\n  //    ...labels.find(el => el.id === \"SPAM\"),\r\n  //    name: \"Spam\",\r\n  //    icon: faExclamationCircle\r\n  //  };\r\n\r\n  //  const folders = [inboxLabel, sentLabel, trashLabel, spamLabel];\r\n\r\n  //  return (\r\n  //    <React.Fragment>\r\n  //      <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\r\n  //        Folders\r\n  //      </li>\r\n  //      {folders.map(el => {\r\n  //        const iconProps = { icon: el.icon, size: \"lg\" };\r\n  //        return (\r\n  //          <LabelItem\r\n  //            key={el.id + \"_label\"}\r\n  //            onClick={this.navigateToList}\r\n  //            name={el.name}\r\n  //            id={el.id}\r\n  //            messagesUnread={el.messagesUnread}\r\n  //            iconProps={iconProps}\r\n  //            selected={el.selected}\r\n  //          />\r\n  //        );\r\n  //      })}\r\n  //    </React.Fragment>\r\n  //  );\r\n  //}\r\n\r\n  \r\n    \r\n   \r\n\r\n    renderLabels(labels) {        \r\n      const { t } = this.props;\r\n      let folder = this.state.selectedFolder;\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\r\n            {t('sidebar.folders')}\r\n          </li>\r\n          {labels.map(el => {\r\n            const iconProps = {\r\n              icon: faFolder,\r\n              color: el.color ? el.color.backgroundColor : \"gainsboro\",\r\n              size: \"lg\"\r\n            };            \r\n            if (folder === \"\") {\r\n              folder = el.id;\r\n            }\r\n            return (\r\n              <LabelItem\r\n                key={el.id + \"_label\"}\r\n                onClick={this.navigateToList}\r\n                name={el.displayName}\r\n                id={el.id}\r\n                messagesUnread={el.totalItemCount}\r\n                iconProps={iconProps}\r\n                selected={folder === el.id}\r\n              />\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <nav className=\"d-flex flex-column text-truncate left-panel\">\r\n        <div className=\"compose-panel\">\r\n          <div className=\"d-flex justify-content-center p-2 compose-btn\">\r\n            <ComposeMessage\r\n              subject=\"\"\r\n              to=\"\"\r\n            >\r\n                <button className=\"btn btn btn-outline-secondary uppercase align-self-center w-75 font-weight-bold uppercase\">\r\n                 {t('sidebar.compose')}\r\n              </button>\r\n            </ComposeMessage>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar\r\n          component=\"ul\"\r\n          className=\"d-flex flex-column border-0 m-0 sidebar\"\r\n        >\r\n          {this.renderItems(this.props.labelsResult.labels)}\r\n        </PerfectScrollbar>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Sidebar);\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"d-flex w-100 h-100 flex-column justify-content-center align-items-center\">\r\n    <div>\r\n      <FontAwesomeIcon icon={faExclamationTriangle} size=\"5x\" />\r\n    </div>\r\n      <div className=\"h1\">404 ERROR</div>\r\n      <div>The requested content was not found.</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport './checkbox.scss';\r\n\r\nexport class Checkbox extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isChecked: !!props.checked\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.checked !== this.props.checked) {\r\n      this.setState({\r\n        isChecked: this.props.checked\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange(evt) {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked\r\n    })\r\n    this.props.onChange(evt);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"custom-control fill-checkbox\">\r\n        <input checked={this.state.isChecked} \r\n          type=\"checkbox\" \r\n          onChange={this.props.onChange} \r\n          className=\"fill-control-input\" \r\n        />\r\n        <span className=\"fill-control-indicator\" />\r\n        {\r\n          this.props.label ? (\r\n            <span className=\"fill-control-description\">\r\n             {this.props.label}\r\n            </span>\r\n          ) : null\r\n        }\r\n      </label>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkbox;","import React from \"react\";\r\nimport Checkbox from \"../../../common/Checkbox\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"d-flex ml-2 justify-content-center align-items-center\">\r\n      <Checkbox checked={props.selected} onChange={props.onChange} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div className=\"wrapper text-4\">\r\n      <div className=\"wrapper align-items-center text-2\">\r\n        <div className=\"text from-name\">{props.fromName}</div>\r\n        <div className=\"text\">{props.subject}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperclip } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"wrapper num-4\">\r\n      <div className=\"wrapper num-2\">\r\n        <div className=\"num pr-4\">\r\n          {props.hasAttachment ? (\r\n            <FontAwesomeIcon icon={faPaperclip} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"num pr-4\">{props.formattedDate}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport MesssageCheckbox from \"./MessageCheckbox\";\r\n\r\nimport NameSubjectFields from \"./NameSubjectFields\";\r\nimport AttachmentDateFields from \"./AttachmentDateFields\";\r\nimport { getNameEmail } from '../../../../utils';\r\n\r\n\r\nexport class MessageItem extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.getMessage = this.getMessage.bind(this);  \r\n  }\r\n\r\n  onSelectionChange(evt) {\r\n    this.props.onSelectionChange(evt.target.checked, this.props.data.id);\r\n  }\r\n\r\n  getMessage(evt) { \r\n      const EncodeIdMessage = encodeURI(this.props.data.id);     \r\n      this.props.history.push(`/${EncodeIdMessage}`);     \r\n  }\r\n\r\n  getFromName(from) {\r\n    const nameEmail = getNameEmail(from);\r\n    return nameEmail.name;\r\n  }\r\n\r\n  getFormattedDate(date, fallbackDateObj) {\r\n    let messageDate = moment(date);\r\n    if (!messageDate.isValid()) {\r\n      messageDate = moment(fallbackDateObj.parserFn(fallbackDateObj.date));\r\n    }\r\n    const nowDate = moment(new Date());\r\n    const isMessageFromToday = messageDate.format(\"YYYYMMDD\") === nowDate.format(\"YYYYMMDD\");\r\n    let formattedDate;\r\n    if (isMessageFromToday) {\r\n      formattedDate = messageDate.format(\"h:mm A\");\r\n    }\r\n    else {\r\n      if (messageDate.year() !== nowDate.year()) {\r\n        formattedDate = messageDate.format(\"YYYY/MM/DD\");\r\n      }\r\n      else {\r\n        formattedDate = messageDate.format(\"MMM D\");\r\n      }\r\n    }\r\n    return formattedDate;\r\n  }\r\n\r\n  render() {\r\n\r\n    const receivedHeader = \"\"\r\n    const date = this.props.data.receivedDateTime;\r\n    let formattedDate = this.getFormattedDate(date, {date: this.props.data.internalDate, parserFn: parseInt});\r\n    const unread = this.props.data.isRead === false ? \" font-weight-bold\" : \"\";\r\n    const selected =  \"\";\r\n    const subjectHeader = this.props.data.bodyPreview;\r\n    const subject = this.props.data.subject;\r\n    let fromName = \"\";\r\n\r\n    //For unusual cases taht the data.from.emailAddress not exist -  to-do Alberto\r\n    //(ask for undefined object)\r\n    try {\r\n        const fromHeader = this.props.data.from.emailAddress.name.toUpperCase() + \" \" + this.props.data.from.emailAddress.address;\r\n        fromName = this.props.data.from.emailAddress.name\r\n      }\r\n    catch{\r\n        const fromHeader = \"\";          \r\n    }  \r\n\r\n    return (\r\n      <div className={`d-flex table-row-wrapper${selected}`}>\r\n        <MesssageCheckbox\r\n          selected={this.props.data.selected}\r\n          onChange={this.onSelectionChange}\r\n        />\r\n        <div\r\n          onClick={this.getMessage}\r\n          className={`table-row px-2 py-3${unread}`}\r\n        >\r\n          <NameSubjectFields fromName={fromName} subject={subject} />\r\n          <AttachmentDateFields\r\n            formattedDate={formattedDate}\r\n            hasAttachment={\r\n              //this.props.data.payload.mimeType === \"multipart/mixed\"\r\n              this.props.data.hasAttachments\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MessageItem);\r\n","import React from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"btn-group ml-auto\">\r\n      <button\r\n        onClick={props.navigateToPrevPage}\r\n        disabled={props.prevToken == null}\r\n        className=\"btn btn-light bg-white border-1 border-dark px-3 btn-sm\"\r\n        title={t('pager-buttons.previous-page')}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronLeft} />\r\n      </button>\r\n      <button\r\n        onClick={props.navigateToNextPage}\r\n        disabled={props.nextToken == null} \r\n        className=\"btn btn-light bg-white border-1  border-dark px-3 btn-sm\"\r\n        title={t('pager-buttons.next-page')}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React, { PureComponent } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './listToolbar.scss';\r\n\r\nexport class ListActionButtons extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getClickHandler = this.getClickHandler.bind(this);\r\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\r\n  }\r\n\r\n  getClickHandler(action) {\r\n    return evt => {\r\n      this.props.onClick(action);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"action-btn\">\r\n          <FontAwesomeIcon\r\n            title={t('message-list.move-to-trash')}\r\n            onClick={this.trashHandler}\r\n            icon={faTrash}\r\n            size=\"lg\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ListActionButtons);\r\n","import React, { PureComponent } from \"react\";\r\nimport Checkbox from \"../../../common/Checkbox\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  toggleSelected,\r\n  modifyMessages\r\n} from \"../actions/message-list.actions\";\r\nimport Pager from \"../pager-buttons/PagerButtons\";\r\nimport ListActionButtons from \"./ListActionButtons\";\r\n\r\nimport { deleteListMessages, addListMessages } from \"../actions/message-list.actions\";\r\n\r\nexport class MessageToolbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n    this.modifyMessages = this.modifyMessages.bind(this);\r\n      \r\n    this.state = {\r\n      selectedMessageIds: []\r\n    };\r\n  }\r\n\r\n  onSelectionChange(evt) {\r\n    const checked = evt.target.checked;\r\n\r\n    const messageIds = this.props.messagesResult.messages.reduce((acc, el) => {\r\n      acc.push(el.id);\r\n      return acc;\r\n    }, []);\r\n\r\n    this.setState({\r\n      selectedMessageIds: messageIds\r\n    });\r\n\r\n    this.props.toggleSelected(messageIds, checked);\r\n\r\n    window.dispatchEvent(new CustomEvent(\"CheckAllclick\", {\r\n      detail: {\r\n          listMessages: messageIds,\r\n          chkselected : checked\r\n      }         \r\n    }));\r\n\r\n    checked ? this.props.addListMessages(messageIds) : this.props.deleteListMessages(messageIds);\r\n  }\r\n\r\n  navigateToNextPage() {    \r\n      this.props.messagesResult.paginatioDirectionSelected = \"next\";    \r\n      this.props.getLabelMessages(\"\", \"\", \"\")\r\n  }\r\n\r\n  navigateToPrevPage() {    \r\n      this.props.messagesResult.paginatioDirectionSelected = \"prev\";\r\n      this.props.getLabelMessages(\"\", \"\", \"\");\r\n  }\r\n\r\n  modifyMessages(addLabelIds, removeLabelIds) {\r\n    const ids = this.props.messagesResult.messages.filter(el => el.selected).map(el => el.id);\r\n    const actionParams = {\r\n      ...addLabelIds && {addLabelIds},\r\n      ...removeLabelIds && {removeLabelIds}\r\n    };\r\n    this.props.modifyMessages({ ids, ...actionParams});\r\n  }\r\n\r\n  render() {\r\n\r\n    let checked = false;\r\n    let selectedMessages = [];\r\n\r\n    if (this.props.messagesResult) {\r\n      selectedMessages = this.props.messagesResult.messages.filter(el => el.selected);\r\n      checked = this.props.messagesResult.messages.length > 0 &&  selectedMessages.length === this.props.messagesResult.messages.length;\r\n    }\r\n\r\n    return (\r\n      <div className=\"msg-toolbar\">\r\n        <div className=\"pl-2 py-2 pr-4 d-flex align-items-center bd-highlight \">\r\n          <div className=\"d-flex align-content-center align-items-center\">\r\n            <div>\r\n              <Checkbox checked={checked} onChange={this.onSelectionChange} />\r\n            </div>\r\n            <div />\r\n\r\n            <div className=\"ml-auto p-2 bd-highlight\">\r\n              <div>\r\n                {selectedMessages.length ? (\r\n                  <ListActionButtons onClick={this.modifyMessages} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Pager\r\n            nextToken={this.props.nextToken}\r\n            prevToken={this.props.prevToken}\r\n            navigateToPrevPage={this.navigateToPrevPage}\r\n            navigateToNextPage={this.navigateToNextPage}\r\n            getLabelMessages={this.getLabelMessages}\r\n\r\n          />         \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  messagesResult: state.messagesResult,\r\n  selectedMessages: state.messageList.selectedMessages\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      toggleSelected,\r\n      modifyMessages,\r\n      deleteListMessages,\r\n      addListMessages\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MessageToolbar);","import React, { PureComponent } from \"react\";\r\nimport './ListFooter.scss';\r\n\r\nexport class Footer extends PureComponent {\r\n  render() {\r\n    const { messagesTotal } = this.props;\r\n    let totalLabel = '';\r\n    if (messagesTotal > 0) {\r\n      totalLabel = `${messagesTotal.toLocaleString()} messages`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-auto p-2  list-footer\" >\r\n        <div className=\"d-flex px-4 h-100 align-items-center\">\r\n          <div className=\"total-count\">{totalLabel}</div>\r\n          <div className=\"ml-auto \"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import Eev from 'eev'\r\n\r\nexport const e = new Eev()\r\n\r\nexport default e\r\n","import React, { PureComponent } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport MessageRow from \"./message-row/MessageRow\";\r\n\r\nimport { addMessage, deleteMessage } from \"./actions/message-list.actions\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ListToolbar from \"./list-toolbar/ListToolbar\";\r\nimport ListFooter from \"./list-footer/ListFooter\";\r\nimport \"./messageList.scss\";\r\nimport { map } from \"rsvp\";\r\nimport e from '../../../event-bus'\r\n\r\nconst ViewMode = {\r\n  LIST: 1,\r\n  CONTENT: 2,\r\n  EDIT: 3\r\n};\r\n\r\nexport class MessageList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewMode: ViewMode.LIST,\r\n      contentMessageId: undefined,\r\n      currentLabel: \"\"\r\n    };\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.renderView = this.renderView.bind(this);\r\n    this.renderMessages = this.renderMessages.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const searchParam = this.props.location.search;\r\n    const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n\r\n    if (token && this.props.messagesResult.pageTokens.length === 0) {\r\n      this.props.addInitialPageToken(token);\r\n    }\r\n\r\n    const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\r\n\r\n    this.props.getLabelMessages({\r\n      ...labelIds && {labelIds},\r\n      pageToken: token\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n      const searchParam = this.props.location.search;\r\n      const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n\r\n      const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\r\n\r\n      this.props.getLabelMessages({\r\n        ...labelIds && {labelIds},\r\n        pageToken: token\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectionChange(selected, msgId) {\r\n      this.props.toggleSelected([msgId], selected);\r\n      //e.emit('received', { text: \"Id: \" + msgId + \" selected: \" + selected })\r\n      window.dispatchEvent(new CustomEvent(\"Checkclick\", {\r\n          detail: {\r\n              name: msgId,\r\n              chkselected: selected\r\n          }\r\n      }));\r\n\r\n      selected ? this.props.addMessage(msgId) : this.props.deleteMessage(msgId);\r\n  }\r\n  \r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMessages() {\r\n    const { t } = this.props;\r\n\r\n    if (this.props.messagesResult.loading) {\r\n      return this.renderSpinner();\r\n    } else if (this.props.messagesResult.messages.length === 0) {\r\n      return (\r\n        <div className=\"p-4 text-center\">\r\n          {t('message-list.no-message')}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.messagesResult.messages.map(el => {\r\n      if (this.props.selectedMessages.find(x => x.id === el.id)) {\r\n        el.selected = true;\r\n      }\r\n\r\n      return (\r\n        <MessageRow\r\n          data={el}\r\n          key={el.id}\r\n          onSelectionChange={this.onSelectionChange}\r\n          onClick={this.getMessage}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  renderView() {\r\n    const { viewMode } = this.state;\r\n\r\n    switch (viewMode) {\r\n\r\n      case ViewMode.EDIT:\r\n        return this.renderEditView();\r\n\r\n      default:\r\n        return this.renderMessages();\r\n    }\r\n  }\r\n\r\n  getPageTokens() {\r\n        if (this.props.messagesResult.loading) {\r\n            return { nextToken: null, prevToken: null }\r\n        }        \r\n        let prevToken;\r\n        let nextToken;\r\n        if (this.props.messagesResult.pageTokens[0] != null) {\r\n            nextToken = true;\r\n            if (this.props.messagesResult.pageTokens[0].split(\"skip=\")[1] > 20)\r\n                prevToken = true;\r\n      } \r\n      return { nextToken, prevToken };\r\n  }  \r\n\r\n  render() {\r\n    const { messagesResult } = this.props;\r\n    const messagesTotal = messagesResult.label ? messagesResult.label.result.messagesTotal : 0;\r\n    const { nextToken, prevToken } = this.getPageTokens();        \r\n\r\n    return (\r\n      <React.Fragment>       \r\n        <ListToolbar\r\n          nextToken={nextToken}\r\n          prevToken={prevToken}\r\n          navigateToNextPage={this.props.navigateToNextPage}\r\n          navigateToPrevPage={this.props.navigateToPrevPage}\r\n          getLabelMessages={this.props.getLabelMessages} \r\n        />\r\n        <PerfectScrollbar className=\"container-fluid no-gutters px-0 message-list-container\">\r\n          {this.renderView()}\r\n        </PerfectScrollbar>\r\n        <ListFooter messagesTotal={messagesTotal} />\r\n      </React.Fragment>\r\n    );\r\n  }  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      selectedMessages: state.messageList.selectedMessages\r\n  }    \r\n};  \r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      addMessage,\r\n      deleteMessage\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default compose(\r\n  withRouter,\r\n  withTranslation(),\r\n  connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n  )\r\n)(MessageList);\r\n\r\n","export const runScript = async (url) => {\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        script.src = url;\r\n        script.onload = resolve;\r\n        script.onerror = reject;\r\n\r\n        const firstScript = document.getElementsByTagName('script')[0];\r\n        firstScript.parentNode.insertBefore(script, firstScript);\r\n    });\r\n};\r\n\r\nexport const matchingPathname = (pathnames) =>\r\n    (location) =>\r\n        pathnames.some(pathname => location.pathname === pathname);\r\n","import * as singleSpa from \"single-spa\";\r\nimport {matchingPathname, runScript} from \"./utils\";\r\n\r\nconst loadReactApp = async () => {\r\n    //await runScript('http://localhost:3003/static/js/main.js');\r\n    await runScript('https://lefebvre-multichannel-inbox-lexonconnector.azurewebsites.net/static/js/main.js');\r\n    return window.lexon;\r\n};\r\n\r\nconst activityFunction = location => location.pathname.startsWith('/');\r\n\r\nexport const registerLexonApp = () => {\r\n    singleSpa.registerApplication('lexon-app', loadReactApp, activityFunction);\r\n};","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport Header from \"../header/Header\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport NotFound from \"../not-found/NotFound\";\r\nimport './main.scss';\r\nimport MessageList from \"../content/message-list/MessageList\";\r\nimport MessageContent from \"../content/message-list/message-content/MessageContent\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { getLabels } from \"../sidebar/sidebar.actions\";\r\n\r\nimport {\r\n  getLabelMessages,\r\n  emptyLabelMessages,\r\n  toggleSelected,\r\n  setPageTokens,\r\n  addInitialPageToken,\r\n  clearPageTokens,\r\n  setSearchQuery\r\n} from \"../content/message-list/actions/message-list.actions\";\r\n\r\nimport {selectLabel} from '../sidebar/sidebar.actions';\r\nimport {signOut} from '../../api_graph/authentication';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner, faWindowClose, faClosedCaptioning, faDoorClosed, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n    ReflexContainer,\r\n    ReflexSplitter,\r\n    ReflexElement\r\n} from 'react-reflex'\r\n\r\nimport 'react-reflex/styles.css'\r\n\r\nimport { start, registerApplication } from 'single-spa'\r\nimport e from '../../event-bus'\r\n\r\nimport * as singleSpa from 'single-spa';\r\nimport { registerLexonApp } from \"../../apps/lexonconn-app\";\r\n\r\nexport class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getLabelList = this.getLabelList.bind(this);\r\n    this.getLabelMessages = this.getLabelMessages.bind(this);\r\n    this.renderLabelRoutes = this.renderLabelRoutes.bind(this);\r\n    this.loadLabelMessages = this.loadLabelMessages.bind(this);\r\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n    this.addInitialPageToken = this.addInitialPageToken.bind(this);\r\n    this.onSignout = this.onSignout.bind(this);\r\n\r\n    this.state = {         \r\n       isVisible: true,\r\n       fluid: true,\r\n       customAnimation: false,\r\n       slow: false,\r\n       size: 0.25\r\n    };\r\n\r\n    e.on('message', function (data) {\r\n          alert('got ' + data.text);\r\n          e.emit('received', { text: 'Woohoo! Hello from Multi-channel app!' })\r\n    });\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    /* Label list is fetched from here \r\n    so that we can declare Routes by labelId \r\n    before rendering anything else */\r\n    this.getLabelList();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //if (prevProps.signedInUser !== this.props.signedInUser) {\r\n    //  this.setState({\r\n    //    signedInUser: this.props.signedInUser\r\n    //  });\r\n    //}\r\n\r\n      if (prevProps.User !== this.props.User) {\r\n          this.setState({\r\n              signedInUser: this.props.User\r\n          });\r\n      }\r\n\r\n    \r\n\r\n\r\n    const {labels} = this.props.labelsResult;\r\n    const {pathname} = this.props.location;\r\n    const selectedLabel = labels.find(el => el.selected);\r\n    const labelPathMatch = labels.find(el => el.id.toLowerCase() === pathname.slice(1));\r\n    if (!selectedLabel) {\r\n      if (labelPathMatch && this.props.searchQuery === \"\") {\r\n        this.props.selectLabel(labelPathMatch.id);\r\n      }      \r\n    }\r\n    else {\r\n      if (labelPathMatch && selectedLabel.id !== labelPathMatch.id) {\r\n        this.props.selectLabel(labelPathMatch.id);\r\n      } \r\n    }\r\n  }\r\n\r\n    registerConnectorApp() {\r\n        let el = document.getElementById('main-lexon-connector')\r\n        if (!el) {\r\n            try {\r\n                //const activityFunction = location => location.pathname.startsWith('/');\r\n                //registerApplication('lex-on-connector', () => import('../../lex-on_connector/index.js'), activityFunction);\r\n                //start();\r\n\r\n                registerLexonApp();\r\n                singleSpa.start();\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n  navigateToNextPage(token) {\r\n    const searchParam = this.props.location.search;\r\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : \"\";\r\n    this.props.setPageTokens({\r\n      prevPageToken: currentToken\r\n    });\r\n    this.props.history.push(token);\r\n  }\r\n\r\n  navigateToPrevPage(token) {\r\n    this.props.history.push(token);\r\n  }\r\n\r\n  loadLabelMessages(label) {\r\n    const currentSearchQuery = this.props.searchQuery;\r\n    this.props.clearPageTokens();\r\n    this.props.selectLabel(label.id);    \r\n\r\n    const newPathToPush = `/${label.id.toLowerCase()}`;\r\n\r\n    if (currentSearchQuery && currentSearchQuery !== \"\") {\r\n      this.props.setSearchQuery(\"\");\r\n      const {pathname} = this.props.location;\r\n      if (newPathToPush === pathname) {\r\n        this.getLabelMessages({labelIds: [label.id] });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.props.history.push(`/${label.id.toLowerCase()}`);\r\n  }\r\n  \r\n\r\n  getLabelList() {\r\n      this.props.getLabels();\r\n\r\n      //alberto to-do first load in default folder\r\n      var elementos = document.getElementsByClassName('py-2');\r\n      if (elementos.length > 0)\r\n          elementos[0].click();\r\n\r\n  }\r\n\r\n  getLabelMessages( labelIds, q, pageToken ) {    \r\n      this.props.emptyLabelMessages(); \r\n      this.props.getLabelMessages(labelIds, q, pageToken);\r\n      this.registerConnectorApp();\r\n  }\r\n\r\n  addInitialPageToken(token) {\r\n    this.props.addInitialPageToken(token);\r\n  }\r\n\r\n  renderLabelRoutes() {\r\n    return this.props.labelsResult.labels.map(el => (\r\n      <Route\r\n        key={el.id + '_route'}\r\n        exact\r\n        path={\"/\" + el.id}\r\n        render={props => {          \r\n          const that = this;\r\n          return (\r\n            <MessageList\r\n              {...props}\r\n              getLabelMessages={this.getLabelMessages}\r\n              messagesResult={this.props.messagesResult}\r\n              toggleSelected={this.props.toggleSelected}\r\n              navigateToNextPage={this.navigateToNextPage}\r\n              navigateToPrevPage={this.navigateToPrevPage}\r\n              pageTokens={this.props.pageTokens}\r\n              addInitialPageToken={this.addInitialPageToken}\r\n              parentLabel={that.props.labelsResult.labels.find(el => el.id === props.match.path.slice(1) )}\r\n              searchQuery={this.props.searchQuery}\r\n            />\r\n          )\r\n        }}\r\n      />\r\n    ));    \r\n  }\r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onSignout() {  \r\n      signOut()     \r\n      this.props.history.push(`/inbox`)\r\n    //this.props.history.replace('inbox');     \r\n    window.location.reload(true); \r\n      \r\n  }\r\n\r\n  renderInboxViewport() {\r\n\r\n    let imgUrl = 'assets/img/settings-gears.svg'\r\n\r\n    if (this.props.labelsResult.labels.length < 1) {\r\n      return this.renderSpinner();\r\n    }\r\n\r\n      return (   \r\n          <Fragment>\r\n              <Header microsoftUser={this.props.User}\r\n                  onSignout={this.onSignout}\r\n                  setSearchQuery={this.props.setSearchQuery}\r\n                  getLabelMessages={this.getLabelMessages}\r\n                  searchQuery={this.props.searchQuery}\r\n              />\r\n              <section className=\"main hbox space-between\">\r\n                  <ReflexContainer orientation=\"vertical\">\r\n                      <ReflexElement maxSize={300} minSize={150} className=\"left-pane\"\r\n                          propagateDimensionsRate={200}\r\n                          propagateDimensions={true}\r\n                          flex={0.2}>\r\n                          <PerfectScrollbar>\r\n                              <div className=\"pane-content\">\r\n                                  <Sidebar\r\n                                      getLabelList={this.getLabelList}\r\n                                      pathname={this.props.location.pathname}\r\n                                      labelsResult={this.props.labelsResult}\r\n                                      onLabelClick={this.loadLabelMessages}\r\n                                  />\r\n                              </div>\r\n                          </PerfectScrollbar>\r\n                      </ReflexElement>\r\n                      <ReflexSplitter propagate={true} />\r\n                      <ReflexElement minSize={400} className=\"middle-pane\"\r\n                          propagateDimensionsRate={400}\r\n                          propagateDimensions={true}\r\n                          flex={0.6}>\r\n                          <PerfectScrollbar>\r\n                              <div className=\"pane-content\" style={{ height: '60%' }}>\r\n                                  <article className=\"d-flex flex-column\">\r\n                                      <Switch>\r\n                                          {this.renderLabelRoutes()}\r\n                                          <Route\r\n                                              exact\r\n                                              path=\"/notfound\"\r\n                                              component={NotFound}\r\n                                          />\r\n                                          <Route\r\n                                              exact\r\n                                              path=\"/:id([a-zA-Z0-9!@#$%^&+=_-]+)\"\r\n                                              component={MessageContent}\r\n                                          />\r\n                                      </Switch>\r\n                                  </article>\r\n                              </div>\r\n                          </PerfectScrollbar>\r\n                      </ReflexElement>\r\n                      <ReflexSplitter propagate={true} />\r\n                      <ReflexElement minSize={400} className=\"right-pane\"\r\n                          propagateDimensionsRate={400}\r\n                          propagateDimensions={true}\r\n                          flex={0.2}>\r\n                          <div id=\"main-content\" className=\"connector\" style={{\r\n                              backgroundImage: 'url(' + imgUrl + ')',\r\n                              backgroundSize: '120px',\r\n                              backgroundPosition: 'center 5%',\r\n                              backgroundRepeat: 'no-repeat',\r\n                          }}>\r\n                              <div className=\"connector\" id=\"lexon-app\" />\r\n                          </div>\r\n                      </ReflexElement>\r\n                  </ReflexContainer>\r\n              </section>\r\n          </Fragment>  \r\n    );\r\n  }\r\n\r\n    render()\r\n    { \r\n       return this.renderInboxViewport();\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  labelsResult: state.labelsResult,\r\n  messagesResult: state.messagesResult,\r\n  pageTokens: state.pageTokens,\r\n  searchQuery: state.searchQuery\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      getLabels,\r\n      getLabelMessages,\r\n      emptyLabelMessages,\r\n      toggleSelected,\r\n      selectLabel,\r\n      setPageTokens,\r\n      addInitialPageToken,\r\n      clearPageTokens,\r\n      setSearchQuery\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(Main);\r\n","import React from 'react';\r\nimport './Login.scss';\r\n\r\nfunction WelcomeContent(props) {    \r\n    console.log('IN ... WelcomeContent');\r\n    return <a href=\"/#\" className=\"login\" onClick={props.authButtonMethod}><img border=\"0\" alt=\"Microsoft\" className=\"w3-btn\" src=\"assets/img/singinms.png\"></img></a>;\r\n}\r\n\r\nexport default class Login extends React.Component {\r\n    render() {\r\n        console.log('IN ... Login');\r\n        return (\r\n            <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center w3-btn\">\r\n                <div className=\"mx-auto\">\r\n                    <div>                       \r\n                        <WelcomeContent\r\n                            isAuthenticated={this.props.isAuthenticated}\r\n                            user={this.props.user}\r\n                            authButtonMethod={this.props.authButtonMethod}\r\n                            logout={this.props.logout}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport './Authenticating';\r\nimport { Button, Jumbotron } from 'reactstrap';\r\n\r\n\r\nfunction WelcomeContent(props) {\r\n    // If authenticated, greet the user\r\n    if (props.isAuthenticated) {\r\n        return (\r\n            <div>\r\n                <h4>Welcome {props.user.displayName}!</h4>\r\n                <p>Use the navigation bar at the top of the page to get started.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Not authenticated, present a sign in button\r\n    //return <Button color=\"primary\" onClick={props.authButtonMethod}>Click here to sign in</Button>;\r\n    alert(\"7\");\r\n    return <a href=\"#\" onClick={props.authButtonMethod}><img border=\"0\" alt=\"Microsoft\" src=\"assets/img/singinms.png\"></img></a>;\r\n\r\n}\r\n\r\nexport class Authenticating extends Component {\r\n    \r\n  render() {\r\n    return (\r\n        <div className=\"d-flex align-content-center align-items-center w-100 h-100 text-center w3-btn\" style=\"box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\">\r\n            <div className=\"mx-auto\">\r\n                <div>                    \r\n                    <WelcomeContent\r\n                        isAuthenticated={this.props.isAuthenticated}\r\n                        user={this.props.user}\r\n                        authButtonMethod={this.props.authButtonMethod} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Authenticating;\r\n","import config from './Config';\r\nimport { UserAgentApplication } from 'msal';\r\nimport React, { Component } from 'react';\r\nimport { getUserDetails } from './GraphService';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Main from \"./components/main/Main\";\r\nimport Login from \"./components/login/Login\";\r\nimport Authenticating from \"./components/authenticating/Authenticating\";\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { mountScripts } from \"./api_graph/scripts\";\r\n\r\nimport {\r\n    SIGNED_OUT,   \r\n    AUTH_SUCCESS,\r\n    AUTH_FAIL,\r\n    AUTH_IN_PROGRESS,\r\n    PROVIDER,\r\n} from \"./constants\";\r\n\r\nimport { config as constants } from \"./constants\";\r\n\r\nimport { storeUser } from \"./actions/settings.actions\";\r\n\r\nclass AppContainerGraph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.userAgentApplication = new UserAgentApplication(config.appId, null, null);\r\n\r\n        var user = this.userAgentApplication.getUser();\r\n\r\n        this.state = {\r\n            signInStatus: SIGNED_OUT,\r\n            //msUser: undefined,\r\n            isAuthenticated: (user !== null),\r\n            user: {},\r\n            error: null,\r\n            updateDefaultAccount: false,\r\n            fetchUpdateDefaultAccount: false,\r\n            userIdisNull: false\r\n        };\r\n\r\n        this.init = this.init.bind(this);\r\n        this.initClient = this.initClient.bind(this);\r\n        //this.onSignout = this.onSignout.bind(this);\r\n       // this.onSignInSuccess = this.onSignInSuccess.bind(this);\r\n        //this.onSignIn = this.onSignIn.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        mountScripts().then(this.init);\r\n    \r\n        this.props.location.pathname = '/inbox';\r\n    }\r\n\r\n    init() {\r\n        this.initClient();\r\n    }\r\n\r\n    initClient() {\r\n        //checkSignInStatus()\r\n        //    .then(this.onSignInSuccess)\r\n        //    .catch(_ => {\r\n        //        this.setState({\r\n        //            signInStatus: AUTH_FAIL\r\n        //        })\r\n        //    });\r\n        this.getUserProfile()\r\n            .then(this.onSignInSuccess)\r\n            .catch(_ => {\r\n                this.setState({\r\n                    signInStatus: AUTH_FAIL\r\n                });\r\n                this.getUserProfile();\r\n            });\r\n    }\r\n\r\n    onSignout() {\r\n        this.props.signOut();\r\n    }\r\n\r\n    onSignIn() {\r\n        this.login().then(this.onSignInSuccess);\r\n    }\r\n\r\n    onSignInSuccess(msUser) {\r\n        this.setState({\r\n            signInStatus: AUTH_SUCCESS,\r\n            msUser\r\n        });\r\n\r\n        if (!this.state.updateDefaultAccount) {            \r\n            const userId = this.props.match.params.id;\r\n            const email = this.state.user.email;\r\n            if (userId != null && email != null) {\r\n              const url = `${constants.url.URL_UPDATE_DEFAULTACCOUNT}/${userId}/${PROVIDER}/${email}`;\r\n              fetch(url, {\r\n                  method:'POST',\r\n              })\r\n              .then(r => r.json())\r\n              .then(result => {\r\n                  console.log(result);\r\n                  this.setState({ updateDefaultAccount: true });\r\n                  this.setState({ fetchUpdateDefaultAccount: true });\r\n                  this.props.storeUser(userId);\r\n              });\r\n            }        \r\n        }\r\n        else {\r\n          this.setState({ userIdisNull: true });\r\n        }\r\n    }\r\n\r\n    renderView() {\r\n\r\n        const { signInStatus } = this.state;\r\n\r\n        if (signInStatus === AUTH_SUCCESS) { \r\n            console.log('AUTH_SUCCESS');\r\n            return <Main User={this.state.user} />;           \r\n        } else if (signInStatus === AUTH_IN_PROGRESS) {\r\n            console.log('AUTH_IN_PROGRESS');\r\n            return <Authenticating />;\r\n        } else {\r\n            console.log('IN ... else');\r\n            return <Login isAuthenticated={this.state.isAuthenticated}\r\n                user={this.state.user}\r\n                authButtonMethod={this.login.bind(this)}\r\n                logout={this.logout.bind(this)}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('AppContainerGraph');\r\n\r\n        if (!this.state.fetchUpdateDefaultAccount && this.state.userIdisNull) {\r\n            return null;\r\n        }\r\n            \r\n        return (\r\n            <React.Fragment>\r\n                {this.renderView()}       \r\n            </React.Fragment>\r\n    \r\n            // <React.Fragment>\r\n            //     {this.props.location.pathname === \"/\" ? (\r\n            //         <Redirect to=\"/inbox\" />\r\n            //     ) : (\r\n            //             this.renderView()\r\n            //         )}\r\n            // </React.Fragment>\r\n        );\r\n    }\r\n\r\n    setErrorMessage(message, debug) {\r\n        this.setState({\r\n            error: { message: message, debug: debug }\r\n        });\r\n    }\r\n\r\n    async login() {\r\n        try {\r\n            await this.userAgentApplication.loginPopup(config.scopes);\r\n            await this.getUserProfile();\r\n        }\r\n        catch (err) {\r\n            var errParts = err.split('|');\r\n            this.setState({\r\n                isAuthenticated: false,\r\n                user: {},\r\n                error: { message: errParts[1], debug: errParts[0] }\r\n            });\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.userAgentApplication.logout();\r\n    }\r\n\r\n    async getUserProfile() {\r\n        try {\r\n            // Get the access token silently\r\n            // If the cache contains a non-expired token, this function\r\n            // will just return the cached token. Otherwise, it will\r\n            // make a request to the Azure OAuth endpoint to get a token\r\n\r\n            var accessToken = await this.userAgentApplication.acquireTokenSilent(config.scopes);\r\n\r\n            if (accessToken) {\r\n                // Get the user's profile from Graph\r\n                var user = await getUserDetails(accessToken);\r\n                this.onSignInSuccess();\r\n                this.setState({\r\n                    isAuthenticated: true,\r\n                    user: {\r\n                        displayName: user.displayName,\r\n                        email: user.mail || user.userPrincipalName\r\n\r\n                    },\r\n                    error: null\r\n                });\r\n            }\r\n            return true\r\n        }\r\n        catch (err) {\r\n            var error = {};\r\n            if (typeof (err) === 'string') {\r\n                var errParts = err.split('|');\r\n                error = errParts.length > 1 ?\r\n                    { message: errParts[1], debug: errParts[0] } :\r\n                    { message: err };\r\n            } else {\r\n                error = {\r\n                    message: err.message,\r\n                    debug: JSON.stringify(err)\r\n                };\r\n            }\r\n\r\n            this.setState({\r\n                isAuthenticated: false,\r\n                user: {},\r\n                error: error\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.storeUser.userId\r\n    }    \r\n};  \r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      storeUser\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(AppContainerGraph);\r\n\r\n//export default withRouter(AppContainerGraph);","export const mountScripts = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://apis.google.com/js/api.js\";\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => {\r\n      script.onload = () => {};\r\n      resolve();\r\n    };\r\n    script.onreadystatechange = () => {\r\n      if (script.readyState === \"complete\") script.onload();\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport AppContainer from \"./AppContainer-graph\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        {/* <AppContainer /> */}\r\n        <Route path=\"/:id?\" component={AppContainer} />\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\n\r\nimport {I18nextProvider} from 'react-i18next';\r\nimport i18n from './services/i18n';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <I18nextProvider i18n={i18n}>\r\n            <App />\r\n        </I18nextProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nexport default function configureStore(initialState={}) {\r\n return createStore(\r\n  rootReducer,\r\n   applyMiddleware(thunk)\r\n );\r\n}"],"sourceRoot":""}