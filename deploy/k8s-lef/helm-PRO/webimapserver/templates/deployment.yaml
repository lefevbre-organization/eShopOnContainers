{{- $name := include "webimapserver.fullname" . -}}
{{- $cfgname := printf "%s-%s" "cfg" $name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "webimapserver.fullname" . }}
  labels:
    ufo: {{ $cfgname}}
    app: {{ template "webimapserver.name" . }}
    chart: {{ template "webimapserver.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "webimapserver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "webimapserver.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.inf.registry -}}
      imagePullSecrets:
      - name: {{ .Values.inf.registry.secretName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ template "fqdn-image" . }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PATH_BASE
              value: {{ include "pathBase" . }}
            - name: k8sname
              value: {{ .Values.clusterName }}
          {{- if .Values.env.values -}}
          {{- range .Values.env.values }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end -}}
          {{- end -}}
          {{- if .Values.env.configmap -}}
          {{- range .Values.env.configmap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $cfgname }}
                  key: {{ .key }}
          {{- end -}}
          {{- end }}
          ports:
            - name: http
              containerPort: 9010
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: restart-{{ template "webimapserver.fullname" . }}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: restarter-job
        spec:
          serviceAccountName: sa-service-restarter
          containers:
          - image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
            imagePullPolicy: IfNotPresent
            name: restarter-job-{{ template "webimapserver.fullname" . }}
            resources:
              requests:
                memory: "64Mi"
                cpu: "250m"
              limits:
                memory: "128Mi"
                cpu: "500m"
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            command: 
              - "/bin/sh"
              - -c 
              - kubectl patch deployment {{ template "webimapserver.fullname" . }} -p '{"spec":{"template":{"metadata":{"labels":{"restarted-by":"'${POD_NAME}'"}}}}}'
            env:
            - name: DEPLOYMENT_NAME
              value: {{ template "webimapserver.fullname" . }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      backoffLimit: 4
  schedule: "00 04 * * *"
  successfulJobsHistoryLimit: 1
  suspend: false

