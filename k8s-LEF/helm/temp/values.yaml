## Official nextcloud image version
## ref: https://hub.docker.com/r/library/nextcloud/tags/
##
image:
  repository: nextcloud
  tag: 19.0.3-apache
  pullPolicy: IfNotPresent
  # pullSecrets:
  #   - myRegistrKeySecretName

nameOverride: ""
fullnameOverride: ""

# Number of replicas to be deployed
replicaCount: 1

## Allowing use of ingress controllers
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false
  annotations: {}
  #  nginx.ingress.kubernetes.io/proxy-body-size: 4G
  #  kubernetes.io/tls-acme: "true"
  #  certmanager.k8s.io/cluster-issuer: letsencrypt-prod
  #  nginx.ingress.kubernetes.io/server-snippet: |-
  #    server_tokens off;
  #    proxy_hide_header X-Powered-By;

  #    rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
  #    rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
  #    rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
  #    location = /.well-known/carddav {
  #      return 301 $scheme://$host/remote.php/dav;
  #    }
  #    location = /.well-known/caldav {
  #      return 301 $scheme://$host/remote.php/dav;
  #    }
  #    location = /robots.txt {
  #      allow all;
  #      log_not_found off;
  #      access_log off;
  #    }
  #    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
  #      deny all;
  #    }
  #    location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
  #      deny all;
  #    }
  #  tls:
  #    - secretName: nextcloud-tls
  #      hosts:
  #        - nextcloud.kube.home
  labels: {}


# Allow configuration of lifecycle hooks
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
lifecycle: {}
  # postStartCommand: []
  # preStopCommand: []

nextcloud:
  host: nextcloud.kube.home
  username: admin
  password: changeme
  ## Use an existing secret
  existingSecret:
    enabled: false
    # secretName: nameofsecret
    # usernameKey: username
    # passwordKey: password
    # smtpUsernameKey: smtp_username
    # smtpPasswordKey: smtp_password
  update: 0
  datadir: /var/www/html/data
  tableprefix:
  persistence:
    subPath:
  mail:
    enabled: false
    fromAddress: user
    domain: domain.com
    smtp:
      host: domain.com
      secure: ssl
      port: 465
      authtype: LOGIN
      name: user
      password: pass
  # PHP Configuration files
  # Will be injected in /usr/local/etc/php/conf.d
  phpConfigs: {}
  # Default config files
  # IMPORTANT: Will be used only if you put extra configs, otherwise default will come from nextcloud itself
  # Default confgurations can be found here: https://github.com/nextcloud/docker/tree/master/16.0/apache/config
  defaultConfigs:
    # To protect /var/www/html/config
    .htaccess: false
    # Redis default configuration
    redis.config.php: true
    # Apache configuration for rewrite urls
    apache-pretty-urls.config.php: true
    # Define APCu as local cache
    apcu.config.php: true
    # Apps directory configs
    apps.config.php: true
    # Used for auto configure database
    autoconfig.php: true
    # SMTP default configuration
    smtp.config.php: true
  # Extra config files created in /var/www/html/config/
  # ref: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/config_sample_php_parameters.html#multiple-config-php-file
  configs:
    .htaccess: |-
      # line below if for Apache 2.2
      <ifModule !mod_authz_core.c>
      deny from all
      </ifModule>
      # lo meto en values
      # line below if for Apache 2.4
      <ifModule mod_authz_core.c>
      Require all denied
      </ifModule>
      # section for Apache 2.2 and 2.4
      <ifModule mod_autoindex.c>
      IndexIgnore *
      </ifModule>
      # Section for Apache 2.2
      <IfModule !mod_authz_core.c>
         <IfModule !mod_access_compat.c>
           <IfModule mod_authz_host.c>
             Order Allow,Deny
             Deny from all
           </IfModule>
           Satisfy All
         </IfModule>
      </IfModule>
      Header always set Access-Control-Allow-Origin "*"
      Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, REPORT, PROPFIND, MKCALENDAR, MKEVENT"
      Header always set Access-Control-Allow-Headers "*"
      # Force to request 200 for options
      RewriteEngine On
      RewriteCond %{REQUEST_METHOD} OPTIONS
      RewriteRule .* / [R=200,L]

  configsLef:
    .htaccess: |-
      # Add in values to test FReyes
      <IfModule mod_headers.c>
        <IfModule mod_setenvif.c>
         <IfModule mod_fcgid.c>
           SetEnvIfNoCase ^Authorization$ "(.+)" XAUTHORIZATION=$1
           RequestHeader set XAuthorization %{XAUTHORIZATION}e env=XAUTHORIZATION
          </IfModule>
        <IfModule mod_proxy_fcgi.c>
         SetEnvIfNoCase Authorization "(.+)" HTTP_AUTHORIZATION=$1
        </IfModule>
      </IfModule>

      <IfModule mod_env.c>
      # Add security and privacy related headers

      # Avoid doubled headers by unsetting headers in "onsuccess" table,
      # then add headers to "always" table: https://github.com/nextcloud/server/pull/19002
      Header onsuccess unset Referrer-Policy
      Header always set Referrer-Policy "no-referrer"

      Header onsuccess unset X-Content-Type-Options
      Header always set X-Content-Type-Options "nosniff"

      Header onsuccess unset X-Download-Options
      Header always set X-Download-Options "noopen"

      Header onsuccess unset X-Frame-Options
      Header always set X-Frame-Options "SAMEORIGIN"

      Header onsuccess unset X-Permitted-Cross-Domain-Policies
      Header always set X-Permitted-Cross-Domain-Policies "none"

      Header onsuccess unset X-Robots-Tag
      Header always set X-Robots-Tag "none"

      Header onsuccess unset X-XSS-Protection
      Header always set X-XSS-Protection "1; mode=block"

      SetEnv modHeadersAvailable true
      </IfModule>

      # Add cache control for static resources
      <FilesMatch "\.(css|js|svg|gif)$">
        Header set Cache-Control "max-age=15778463"
      </FilesMatch>

      # Let browsers cache WOFF files for a week
      <FilesMatch "\.woff2?$">
      Header set Cache-Control "max-age=604800"
      </FilesMatch>
      </IfModule>
      <IfModule mod_php7.c>
        php_value mbstring.func_overload 0
        php_value default_charset 'UTF-8'
        php_value output_buffering 0
      <IfModule mod_env.c>
      SetEnv htaccessWorking true
      </IfModule>
      </IfModule>
      <IfModule mod_rewrite.c>
         RewriteEngine on
         RewriteCond %{HTTP_USER_AGENT} DavClnt
         RewriteRule ^$ /remote.php/webdav/ [L,R=302]
         RewriteRule .* - [env=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
         RewriteRule ^\.well-known/host-meta /public.php?service=host-meta [QSA,L]
         RewriteRule ^\.well-known/host-meta\.json /public.php?service=host-meta-json [QSA,L]
         RewriteRule ^\.well-known/webfinger /public.php?service=webfinger [QSA,L]
         RewriteRule ^\.well-known/nodeinfo /public.php?service=nodeinfo [QSA,L]
         RewriteRule ^\.well-known/carddav /remote.php/dav/ [R=301,L]
         RewriteRule ^\.well-known/caldav /remote.php/dav/ [R=301,L]
         RewriteRule ^remote/(.*) remote.php [QSA,L]
         RewriteRule ^(?:build|tests|config|lib|3rdparty|templates)/.* - [R=404,L]
         RewriteCond %{REQUEST_URI} !^/\.well-known/(acme-challenge|pki-validation)/.*
         RewriteRule ^(?:\.|autotest|occ|issue|indie|db_|console).* - [R=404,L]
      </IfModule>
      <IfModule mod_mime.c>
        AddType image/svg+xml svg svgz
        AddEncoding gzip svgz
      </IfModule>
      <IfModule mod_dir.c>
         DirectoryIndex index.php index.html
      </IfModule>
      AddDefaultCharset utf-8
      Options -Indexes
      <IfModule pagespeed_module>
        ModPagespeed Off
      </IfModule>
      #### DO NOT CHANGE ANYTHING ABOVE THIS LINE ####

      ErrorDocument 403 //
      ErrorDocument 404 //
      <IfModule mod_rewrite.c>
        Options -MultiViews
         RewriteRule ^core/js/oc.js$ index.php [PT,E=PATH_INFO:$1]
         RewriteRule ^core/preview.png$ index.php [PT,E=PATH_INFO:$1]
         RewriteCond %{REQUEST_FILENAME} !\.(css|js|svg|gif|png|html|ttf|woff2?|ico|jpg|jpeg|map|webm|mp4)$
         RewriteCond %{REQUEST_FILENAME} !core/img/favicon.ico$
         RewriteCond %{REQUEST_FILENAME} !core/img/manifest.json$
         RewriteCond %{REQUEST_FILENAME} !/remote.php
         RewriteCond %{REQUEST_FILENAME} !/public.php
         RewriteCond %{REQUEST_FILENAME} !/cron.php
         RewriteCond %{REQUEST_FILENAME} !/core/ajax/update.php
         RewriteCond %{REQUEST_FILENAME} !/status.php
         RewriteCond %{REQUEST_FILENAME} !/ocs/v1.php
         RewriteCond %{REQUEST_FILENAME} !/ocs/v2.php
         RewriteCond %{REQUEST_FILENAME} !/robots.txt
         RewriteCond %{REQUEST_FILENAME} !/updater/
         RewriteCond %{REQUEST_FILENAME} !/ocs-provider/
         RewriteCond %{REQUEST_FILENAME} !/ocm-provider/
         RewriteCond %{REQUEST_URI} !^/\.well-known/(acme-challenge|pki-validation)/.*
         RewriteCond %{REQUEST_FILENAME} !/richdocumentscode/proxy.php$
         RewriteRule . index.php [PT,E=PATH_INFO:$1]
         RewriteBase /
      <IfModule mod_env.c>
        SetEnv front_controller_active true
        <IfModule mod_dir.c>
          DirectorySlash off
        </IfModule>
      </IfModule>
      </IfModuleHeader>
      always set Access-Control-Allow-Origin "*"
      Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, REPORT, PROPFIND, MKCALENDAR, MKEVENT"
      Header always set Access-Control-Allow-Headers "*"
      # Force to request 200 for options
      RewriteEngine On
      RewriteCond %{REQUEST_METHOD} OPTIONS
      RewriteRule .* / [R=200,L]
  
  # For example, to use S3 as primary storage
  # ref: https://docs.nextcloud.com/server/13/admin_manual/configuration_files/primary_storage.html#simple-storage-service-s3
  #
  #  configs:
  #    s3.config.php: |-
  #      <?php
  #      $CONFIG = array (
  #        'objectstore' => array(
  #          'class' => '\\OC\\Files\\ObjectStore\\S3',
  #          'arguments' => array(
  #            'bucket'     => 'my-bucket',
  #            'autocreate' => true,
  #            'key'        => 'xxx',
  #            'secret'     => 'xxx',
  #            'region'     => 'us-east-1',
  #            'use_ssl'    => true
  #          )
  #        )
  #      );

  ## Strategy used to replace old pods
  ## IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    type: Recreate
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0

  ##
  ## Extra environment variables
  extraEnv:
  #  - name: SOME_SECRET_ENV
  #    valueFrom:
  #      secretKeyRef:
  #        name: nextcloud
  #        key: secret_key

  # Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
  # to NextCloud pods in Kubernetes. This can then be configured in External Storage
  extraVolumes:
  #  - name: nfs
  #    nfs:
  #      server: "10.0.0.1"
  #      path: "/nextcloud_data"
  #      readOnly: false
  extraVolumeMounts:
  #  - name: nfs
  #    mountPath: "/legacy_data"

nginx:
  ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
  enabled: false
  image:
    repository: nginx
    tag: alpine
    pullPolicy: IfNotPresent

  config:
    # This generates the default nginx config as per the nextcloud documentation
    default: true
    # custom: |-
    #     worker_processes  1;..

  resources: {}

internalDatabase:
  enabled: false
  name: nextcloud

##
## External database configuration
##
externalDatabase:
  enabled: false

  ## Supported database engines: mysql or postgresql
  type: mysql

  ## Database host
  host:

  ## Database user
  user: nextcloud

  ## Database password
  password:

  ## Database name
  database: nextcloud

  ## Use a existing secret
  existingSecret:
    enabled: false
    # secretName: nameofsecret
    # usernameKey: username
    # passwordKey: password

##
## MariaDB chart configuration
##
mariadb:
  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: true

  db:
    name: nextcloud
    user: nextcloud
    password: elefebvre_1234

  replication:
    enabled: false

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  master:
    persistence:
      enabled: true
      # storageClass: ""
      accessMode: ReadWriteOnce
      size: 8Gi

postgresql:
  enabled: false
  global:
    postgresql:
      postgresqlUsername: nextcloud
      postgresqlPassword: changeme
      postgresqlDatabase: nextcloud
  persistence:
    enabled: false
    # storageClass: ""

redis:
  enabled: false
  usePassword: false
  password: ''

## Cronjob to execute Nextcloud background tasks
## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#webcron
##
cronjob:
  enabled: false
  # Nexcloud image is used as default but only curl is needed
  image: {}
    # repository: nextcloud
    # tag: 16.0.3-apache
    # pullPolicy: IfNotPresent
    # pullSecrets:
    #   - myRegistrKeySecretName
  # Every 5 minutes
  # Note: Setting this to any any other value than 5 minutes might
  #  cause issues with how nextcloud background jobs are executed
  schedule: "*/5 * * * *"
  annotations: {}
  # Set curl's insecure option if you use e.g. self-signed certificates
  curlInsecure: false
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 2
  # If not set, nextcloud deployment one will be set
  # resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  # If not set, nextcloud deployment one will be set
  # nodeSelector: {}

  # If not set, nextcloud deployment one will be set
  # tolerations: []

  # If not set, nextcloud deployment one will be set
  # affinity: {}

service:
  type: ClusterIP
  port: 8080
  loadBalancerIP: nil
  nodePort: nil

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  annotations: {}
  ## nextcloud data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  accessMode: ReadWriteOnce
  size: 8Gi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
startupProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1


## Enable pod autoscaling using HorizontalPodAutoscaler
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
hpa:
  enabled: false
  cputhreshold: 60
  minPods: 1
  maxPods: 10

nodeSelector: {}

tolerations: []

affinity: {}


## Prometheus Exporter / Metrics
##
metrics:
  enabled: false

  replicaCount: 1
  # The metrics exporter needs to know how you serve Nextcloud either http or https
  https: false
  timeout: 5s

  image:
    repository: xperimental/nextcloud-exporter
    tag: v0.3.0
    pullPolicy: IfNotPresent

  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # resources: {}

  ## Metrics exporter pod Annotation and Labels
  # podAnnotations: {}

  # podLabels: {}

  service:
    type: ClusterIP
    ## Use serviceLoadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    # loadBalancerIP:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9205"
    labels: {}
